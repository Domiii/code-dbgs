{
  "name": "dbux-code",
  "private": true,
  "displayName": "Dbux (ALPHA)",
  "preview": true,
  "icon": "resources/dbux_icon_transparent.png",
  "keywords": [
    "javascript",
    "debugger",
    "call graph",
    "async",
    "omniscient debugger",
    "dynamic analysis"
  ],
  "version": "0.7.7-dev.0",
  "publisher": "Domi",
  "description": "Integrated Debugging Environment with an Omniscient Debugger for JS.",
  "repository": {
    "type": "git",
    "url": "https://github.com/Domiii/dbux/dbux-code"
  },
  "engines": {
    "vscode": "^1.50.0"
  },
  "categories": [
    "Debuggers",
    "Programming Languages",
    "Other",
    "Education"
  ],
  "activationEvents": [
    "onView:dbuxPreActivateView",
    "onView:dbuxApplicationsView",
    "onLanguage:javascript"
  ],
  "__main": "./src/index.js",
  "main": "./dist/bundle.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "dbuxViewContainer",
          "title": "Dbux",
          "icon": "resources/dbux_icon_transparent.png"
        }
      ]
    },
    "views": {
      "dbuxViewContainer": [
        {
          "id": "dbuxPreActivateView",
          "name": "Dbux",
          "when": "!dbux.context.activated"
        },
        {
          "id": "dbuxApplicationsView",
          "name": "Applications",
          "when": "dbux.context.activated"
        },
        {
          "id": "dbuxTraceDetailsView",
          "name": "Trace Details",
          "when": "dbux.context.activated"
        },
        {
          "id": "dbuxGlobalAnalysisView",
          "name": "Global",
          "when": "dbux.context.activated"
        },
        {
          "id": "dbuxDataFlowView",
          "name": "Data Flow",
          "when": "dbux.context.activated"
        },
        {
          "id": "dbuxProjectView",
          "name": "Practice Projects",
          "when": "dbux.context.activated && dbux.context.showPracticeViews && !dbux.context.hasPracticeSession"
        },
        {
          "id": "dbuxSessionView",
          "name": "Practice Session",
          "when": "dbux.context.activated && dbux.context.showPracticeViews && dbux.context.hasPracticeSession"
        },
        {
          "id": "dbuxChapterListBuilderView",
          "name": "JavaScript Algorithms",
          "when": "dbux.context.activated && dbux.context.nodeEnv == development"
        }
      ]
    },
    "commands": [
      {
        "command": "dbux.doActivate",
        "title": "Dbux: Start Dbux"
      },
      {
        "command": "dbux.diagnostics",
        "title": "Dbux: Diagnostics"
      },
      {
        "command": "dbux.cancelBugRunner",
        "title": "Dbux Practice: Cancel All"
      },
      {
        "command": "dbux.exportApplicationData",
        "title": "Dbux: Export Application Data"
      },
      {
        "command": "dbux.importApplicationData",
        "title": "Dbux: Import Application Data"
      },
      {
        "command": "dbux.reloadExerciseList",
        "title": "Dbux: Reload Exercise List"
      },
      {
        "command": "dbux.showDecorations",
        "title": "Dbux: Show Code Decorations"
      },
      {
        "command": "dbux.hideDecorations",
        "title": "Dbux: Hide Code Decorations"
      },
      {
        "command": "dbux.toggleNavButton",
        "title": "Dbux: Toggle Editor Navigation Bar Buttons"
      },
      {
        "command": "dbux.toggleErrorLog",
        "title": "Dbux: Toggle Error Notifications"
      },
      {
        "command": "dbux.selectTraceById",
        "title": "Dbux: Select Trace by id"
      },
      {
        "command": "dbux.searchContexts",
        "title": "Dbux: Search in contexts"
      },
      {
        "command": "dbux.searchTraces",
        "title": "Dbux: Search in traces"
      },
      {
        "command": "dbux.searchValues",
        "title": "Dbux: Search in values"
      },
      {
        "command": "dbux.startPathways",
        "title": "Dbux Pathways: Start"
      },
      {
        "command": "dbux.stopPathways",
        "title": "Dbux Pathways: Stop"
      },
      {
        "command": "dbux.loadResearchSession",
        "title": "Dbux: Load research session"
      },
      {
        "command": "dbux.togglePracticeView",
        "title": "Dbux: Toggle Practice View",
        "icon": {
          "light": "resources/light/project.svg",
          "dark": "resources/dark/project.svg"
        }
      },
      {
        "command": "dbux.openPracticeLogFolder",
        "title": "Dbux: Open Practice Log Folder"
      },
      {
        "command": "dbux.runFile",
        "title": "Dbux: Run Current File",
        "icon": {
          "light": "resources/light/play.svg",
          "dark": "resources/dark/play.svg"
        }
      },
      {
        "command": "dbux.debugFile",
        "title": "Dbux: Debug Current File",
        "icon": {
          "light": "resources/light/bug.svg",
          "dark": "resources/dark/bug.svg"
        }
      },
      {
        "command": "dbux.showGraphView",
        "title": "Dbux: Show Call Graph",
        "icon": {
          "light": "resources/light/tree.svg",
          "dark": "resources/dark/tree.svg"
        }
      },
      {
        "command": "dbux.hideGraphView",
        "title": "Dbux: Hide Call Graph",
        "icon": {
          "light": "resources/light/tree_disabled.svg",
          "dark": "resources/dark/tree_disabled.svg"
        }
      },
      {
        "command": "dbux.testDataDependencyGraph",
        "title": "Dbux Dev: Test DDG",
        "icon": {
          "light": "resources/light/dependency.svg",
          "dark": "resources/dark/dependency.svg"
        }
      },
      {
        "command": "dbux.showPathwaysView",
        "title": "Dbux: Show Pathways View",
        "icon": {
          "light": "resources/light/p.svg",
          "dark": "resources/dark/p.svg"
        }
      },
      {
        "command": "dbux.hidePathwaysView",
        "title": "Dbux: Hide Pathways View",
        "icon": {
          "light": "resources/light/p_disabled.svg",
          "dark": "resources/dark/p_disabled.svg"
        }
      },
      {
        "command": "dbux.startRuntimeServer",
        "title": "Dbux: Start Dbux Runtime Server",
        "icon": {
          "light": "resources/light/antenna_red.svg",
          "dark": "resources/dark/antenna_red.svg"
        }
      },
      {
        "command": "dbux.stopRuntimeServer",
        "title": "Dbux: Stop Dbux Runtime Server",
        "icon": {
          "light": "resources/light/antenna_green.svg",
          "dark": "resources/dark/antenna_green.svg"
        }
      },
      {
        "command": "dbux.backendLogin",
        "title": "Dbux: Backend Login"
      },
      {
        "command": "dbux.systemCheck",
        "title": "Dbux: Check System Dependencies"
      },
      {
        "command": "dbux.showHelp",
        "title": "Dbux: Help",
        "icon": {
          "light": "resources/light/question.svg",
          "dark": "resources/dark/question.svg"
        }
      },
      {
        "command": "dbux.resetPracticeProgress",
        "title": "Dbux Dev: Reset Practice Progress"
      },
      {
        "command": "dbux.resetPracticeLog",
        "title": "Dbux Dev: Reset Practice Log"
      },
      {
        "command": "dbux.loadPracticeLogFile",
        "title": "Dbux Dev: Load Practice Log"
      },
      {
        "command": "dbux.showOutputChannel",
        "title": "Dbux: Show output channel"
      },
      {
        "command": "dbux.showDDGOfContext",
        "title": "Dbux: Show DDG of context",
        "icon": {
          "light": "resources/light/dependency.svg",
          "dark": "resources/dark/dependency.svg"
        }
      },
      {
        "command": "dbuxGlobalAnalysisView.showError",
        "title": "Go to Error",
        "icon": {
          "light": "resources/light/fire.svg",
          "dark": "resources/dark/fire.svg"
        }
      },
      {
        "command": "dbuxGlobalAnalysisView.showError.disabled",
        "title": "No error occurred",
        "icon": {
          "light": "resources/light/fire_disabled.svg",
          "dark": "resources/dark/fire_disabled.svg"
        }
      },
      {
        "command": "dbuxGlobalAnalysisView.node.nextSortMode",
        "title": "Next mode",
        "icon": {
          "light": "resources/light/sort.svg",
          "dark": "resources/dark/sort.svg"
        }
      },
      {
        "command": "dbuxGlobalAnalysisView.node.nextSearchMode",
        "title": "Next search mode",
        "icon": {
          "light": "resources/light/string.svg",
          "dark": "resources/dark/string.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.node.editedWarning",
        "title": "Document changed -> code decorations might be inaccurate",
        "icon": {
          "light": "resources/light/warning.svg",
          "dark": "resources/dark/warning.svg"
        }
      },
      {
        "command": "dbuxCallStackView.showParent",
        "title": "Switch to Parent",
        "icon": {
          "light": "resources/light/boolean.svg",
          "dark": "resources/dark/boolean.svg"
        }
      },
      {
        "command": "dbuxCallStackView.showScheduler",
        "title": "Switch to Scheduler",
        "icon": {
          "light": "resources/light/string.svg",
          "dark": "resources/dark/string.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.nextGroupingMode",
        "title": "Next mode",
        "icon": {
          "light": "resources/light/string.svg",
          "dark": "resources/dark/string.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.selectObject",
        "title": "Select this object",
        "icon": {
          "light": "resources/light/boolean.svg",
          "dark": "resources/dark/boolean.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.valueRender",
        "title": "Inspect this value",
        "icon": {
          "light": "resources/light/magnifier.svg",
          "dark": "resources/dark/magnifier.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.PreviousInContext",
        "title": "Dbux: Go to previous \"non-trivial\" trace in context",
        "icon": {
          "light": "resources/light/previousInContext.svg",
          "dark": "resources/dark/previousInContext.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.PreviousChildContext",
        "title": "Dbux: Go to previous function call in context",
        "icon": {
          "light": "resources/light/previousChildContext.svg",
          "dark": "resources/dark/previousChildContext.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.PreviousParentContext",
        "title": "Dbux: Go to start of context",
        "icon": {
          "light": "resources/light/previousParentContext.svg",
          "dark": "resources/dark/previousParentContext.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.NextInContext",
        "title": "Dbux: Go to next \"non-trivial\" trace in context",
        "icon": {
          "light": "resources/light/nextInContext.svg",
          "dark": "resources/dark/nextInContext.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.NextChildContext",
        "title": "Dbux: Go to next function call in context",
        "icon": {
          "light": "resources/light/nextChildContext.svg",
          "dark": "resources/dark/nextChildContext.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.NextParentContext",
        "title": "Dbux: Go to end of context",
        "icon": {
          "light": "resources/light/nextParentContext.svg",
          "dark": "resources/dark/nextParentContext.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.PreviousStaticTrace",
        "title": "Dbux: Go to previous execution of the same trace",
        "icon": {
          "light": "resources/light/previousStaticTrace.svg",
          "dark": "resources/dark/previousStaticTrace.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.NextStaticTrace",
        "title": "Dbux: Go to next execution of the same trace",
        "icon": {
          "light": "resources/light/nextStaticTrace.svg",
          "dark": "resources/dark/nextStaticTrace.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.PreviousTrace",
        "title": "Dbux: Go to previous trace (unconditionally)",
        "icon": {
          "light": "resources/light/leftArrow.svg",
          "dark": "resources/dark/leftArrow.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.navigation.NextTrace",
        "title": "Dbux: Go to next trace (unconditionally)",
        "icon": {
          "light": "resources/light/rightArrow.svg",
          "dark": "resources/dark/rightArrow.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.selectTraceAtCursor",
        "title": "Dbux: Select Trace At Cursor",
        "icon": {
          "light": "resources/light/crosshair_red.svg",
          "dark": "resources/dark/crosshair_red.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.selectTraceAtCursor.empty",
        "title": "No traces at cursor",
        "icon": {
          "light": "resources/light/crosshair_disabled.svg",
          "dark": "resources/dark/crosshair_disabled.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.expandNode",
        "title": "Expand",
        "icon": {
          "light": "resources/light/expand.svg",
          "dark": "resources/dark/expand.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.node.selectWriteTrace",
        "title": "Go to: Write trace",
        "icon": {
          "light": "resources/light/edit.svg",
          "dark": "resources/dark/edit.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.node.selectValueCreation",
        "title": "Go to: Value creation",
        "icon": {
          "light": "resources/light/boolean.svg",
          "dark": "resources/dark/boolean.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.node.selectForkParent",
        "title": "Go to: Async Fork Parent",
        "icon": {
          "light": "resources/light/previousParentContext.svg",
          "dark": "resources/dark/previousParentContext.svg"
        }
      },
      {
        "command": "dbuxTraceDetailsView.node.selectScheduler",
        "title": "Go to: Async Scheduler",
        "icon": {
          "light": "resources/light/previousStaticTrace.svg",
          "dark": "resources/dark/previousStaticTrace.svg"
        }
      },
      {
        "command": "dbuxDataFlowView.setSearchMode.ByAccessId",
        "title": "Search by: accessId",
        "icon": {
          "light": "resources/light/variable.svg",
          "dark": "resources/dark/variable.svg"
        }
      },
      {
        "command": "dbuxDataFlowView.setSearchMode.ByValueId",
        "title": "Search by: valueId",
        "icon": {
          "light": "resources/light/brackets.svg",
          "dark": "resources/dark/brackets.svg"
        }
      },
      {
        "command": "dbuxDataFlowView.setFilterMode.None",
        "title": "Filter: None",
        "icon": {
          "light": "resources/light/filter_disabled.svg",
          "dark": "resources/dark/filter_disabled.svg"
        }
      },
      {
        "command": "dbuxDataFlowView.setFilterMode.ReadOnly",
        "title": "Filter: Read only",
        "icon": {
          "light": "resources/light/filterR.svg",
          "dark": "resources/dark/filterR.svg"
        }
      },
      {
        "command": "dbuxDataFlowView.setFilterMode.WriteOnly",
        "title": "Filter: Write only",
        "icon": {
          "light": "resources/light/filterW.svg",
          "dark": "resources/dark/filterW.svg"
        }
      },
      {
        "command": "dbuxApplicationsView.clearApplication",
        "title": "Clear Applications",
        "icon": {
          "light": "resources/light/clear.svg",
          "dark": "resources/dark/clear.svg"
        }
      },
      {
        "command": "dbuxApplicationsView.showEntryPoint",
        "title": "Go to Entry",
        "icon": {
          "light": "resources/light/nextTrace.svg",
          "dark": "resources/dark/nextTrace.svg"
        }
      },
      {
        "command": "dbuxProjectView.toggleListMode",
        "title": "Toggle List Mode",
        "icon": {
          "light": "resources/light/stack.svg",
          "dark": "resources/dark/stack.svg"
        }
      },
      {
        "command": "dbuxProjectView.showDiff",
        "title": "Dbux Project: Show difference",
        "icon": {
          "light": "resources/light/magnifier.svg",
          "dark": "resources/dark/magnifier.svg"
        }
      },
      {
        "command": "dbuxProject.uploadLog",
        "title": "Dbux Project: Upload log files",
        "icon": {
          "light": "resources/light/upload.svg",
          "dark": "resources/dark/upload.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.addProjectToWorkspace",
        "title": "Add Project Folder to Workspace",
        "icon": {
          "light": "resources/light/crosshair.svg",
          "dark": "resources/dark/crosshair.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.cleanup",
        "title": "Clean Up",
        "icon": {
          "light": "resources/light/clear.svg",
          "dark": "resources/dark/clear.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.exerciseCleanup",
        "title": "Clean Up",
        "icon": {
          "light": "resources/light/clear.svg",
          "dark": "resources/dark/clear.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.stopProject",
        "title": "Stop project",
        "icon": {
          "light": "resources/light/pause.svg",
          "dark": "resources/dark/pause.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.startPractice",
        "title": "Start Practice",
        "icon": {
          "light": "resources/light/play.svg",
          "dark": "resources/dark/play.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.busyIcon",
        "title": "dbux-project running...",
        "icon": {
          "light": "resources/light/hourglass.svg",
          "dark": "resources/dark/hourglass.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.stopRunner",
        "title": "Stop Exercise Runner",
        "icon": {
          "light": "resources/light/pause.svg",
          "dark": "resources/dark/pause.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.resetExercise",
        "title": "Dbux Dev: Reset this exercise",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.showWebsite",
        "title": "Show Website",
        "icon": {
          "light": "resources/light/boolean.svg",
          "dark": "resources/dark/boolean.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.showExerciseIntroduction",
        "title": "Show Exercise Introduction",
        "icon": {
          "light": "resources/light/question.svg",
          "dark": "resources/dark/question.svg"
        }
      },
      {
        "command": "dbuxProjectView.node.showExerciseLog",
        "title": "Show exercise log",
        "icon": {
          "light": "resources/light/document.svg",
          "dark": "resources/dark/document.svg"
        }
      },
      {
        "command": "dbux.deleteUserEvents",
        "title": "Dbux Dev: Delete all user events"
      },
      {
        "command": "dbuxSessionView.run",
        "title": "Dbux Project: Run without dbux",
        "icon": {
          "light": "resources/light/play_gray.svg",
          "dark": "resources/dark/play_gray.svg"
        }
      },
      {
        "command": "dbuxSessionView.run#debug",
        "title": "Dbux Project: Run without dbux in debug mode",
        "icon": {
          "light": "resources/light/bug_gray.svg",
          "dark": "resources/dark/bug_gray.svg"
        }
      },
      {
        "command": "dbuxSessionView.run#dbux",
        "title": "Dbux Project: Run with dbux",
        "icon": {
          "light": "resources/light/play.svg",
          "dark": "resources/dark/play.svg"
        }
      },
      {
        "command": "dbuxSessionView.run#debug#dbux",
        "title": "Dbux Project: Run with dbux in debug mode",
        "icon": {
          "light": "resources/light/bug.svg",
          "dark": "resources/dark/bug.svg"
        }
      },
      {
        "command": "dbuxSessionView.flushCache",
        "title": "Dbux Project: Flush cache",
        "icon": {
          "light": "resources/light/clear.svg",
          "dark": "resources/dark/clear.svg"
        }
      },
      {
        "command": "dbuxSessionView.node.annotateTraceQ",
        "title": "Ask question of this trace",
        "icon": {
          "light": "resources/light/q.svg",
          "dark": "resources/dark/q.svg"
        }
      },
      {
        "command": "dbuxSessionView.node.annotateTraceI",
        "title": "Add comment on this trace",
        "icon": {
          "light": "resources/light/i.svg",
          "dark": "resources/dark/i.svg"
        }
      },
      {
        "command": "dbuxSessionView.node.showEntryFile",
        "title": "Go to program entry point",
        "icon": {
          "light": "resources/light/document.svg",
          "dark": "resources/dark/document.svg"
        }
      },
      {
        "command": "dbuxChapterListBuilderView.node.runDDG",
        "title": "Dev: run and show DDG",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "dbux.runFile",
          "when": "dbux.context.activated && editorLangId == javascript && dbux.context.showNavButton",
          "group": "navigation@5"
        },
        {
          "command": "dbuxTraceDetailsView.selectTraceAtCursor",
          "when": "dbux.context.activated && dbuxTraceDetailsView.context.hasTracesAtCursor && dbux.context.showNavButton",
          "group": "navigation@11"
        },
        {
          "command": "dbux.showGraphView",
          "when": "!dbuxWebView.context.dbux-graph.isActive && !dbux.context.isApplicationEmpty && dbux.context.showNavButton",
          "group": "navigation@1"
        },
        {
          "command": "dbux.hideGraphView",
          "when": "dbuxWebView.context.dbux-graph.isActive && !dbux.context.isApplicationEmpty && dbux.context.showNavButton",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "dbuxCallStackView.showParent",
          "when": "view == dbuxCallStackView && viewItem == callStackNode.both.scheduler",
          "group": "inline"
        },
        {
          "command": "dbuxCallStackView.showScheduler",
          "when": "view == dbuxCallStackView && viewItem == callStackNode.both.parent",
          "group": "inline"
        },
        {
          "command": "dbuxGlobalAnalysisView.node.nextSortMode",
          "when": "viewItem == dbuxGlobalAnalysisView.node.recordedPackageNode",
          "group": "inline"
        },
        {
          "command": "dbuxGlobalAnalysisView.node.nextSearchMode",
          "when": "viewItem == dbuxGlobalAnalysisView.node.searchNode",
          "group": "inline"
        },
        {
          "command": "dbuxTraceDetailsView.nextGroupingMode",
          "when": "viewItem =~ /#traceContainer/",
          "group": "inline@2"
        },
        {
          "command": "dbuxTraceDetailsView.expandNode",
          "when": "viewItem =~ /#traceContainer/",
          "group": "inline@3"
        },
        {
          "command": "dbuxTraceDetailsView.selectObject",
          "when": "viewItem == dbuxTraceDetailsView.traceObjectTDNodeRoot.withObjectValue",
          "group": "inline"
        },
        {
          "command": "dbuxTraceDetailsView.valueRender",
          "when": "viewItem == dbuxTraceDetailsView.node.traceValueNode",
          "group": "inline"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousInContext",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@3"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousChildContext",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@2"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousParentContext",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@1"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextInContext",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@4"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextChildContext",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@5"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextParentContext",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@6"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousStaticTrace",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@7"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextStaticTrace",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@8"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousTrace",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@9"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextTrace",
          "when": "viewItem == dbuxTraceDetailsView.navigationNode",
          "group": "inline@10"
        },
        {
          "command": "dbuxTraceDetailsView.node.selectWriteTrace",
          "when": "viewItem == dbuxTraceDetailsView.node.traceValueNode",
          "group": "inline@1"
        },
        {
          "command": "dbuxTraceDetailsView.node.selectValueCreation",
          "when": "viewItem == dbuxTraceDetailsView.node.traceValueNode",
          "group": "inline@2"
        },
        {
          "command": "dbuxTraceDetailsView.node.selectForkParent",
          "when": "viewItem == dbuxTraceDetailsView.node.asyncRootEdgesTDNode",
          "group": "inline@1"
        },
        {
          "command": "dbuxTraceDetailsView.node.selectScheduler",
          "when": "viewItem == dbuxTraceDetailsView.node.asyncRootEdgesTDNode",
          "group": "inline@2"
        },
        {
          "command": "dbuxApplicationsView.showEntryPoint",
          "when": "view == dbuxApplicationsView && viewItem == ApplicationNode",
          "group": "inline"
        },
        {
          "command": "dbuxProjectView.node.addProjectToWorkspace",
          "when": "viewItem =~ /dbuxProjectView\\.projectNode/",
          "group": "inline@1"
        },
        {
          "command": "dbuxProjectView.node.cleanup",
          "when": "viewItem =~ /dbuxProjectView\\.projectNode/ && !dbuxProjectView.context.isBusy",
          "group": "inline@2"
        },
        {
          "command": "dbuxProjectView.node.stopProject",
          "when": "viewItem == dbuxProjectView.projectNode.RunningInBackground",
          "group": "inline@0"
        },
        {
          "command": "dbuxProjectView.node.exerciseCleanup",
          "when": "viewItem =~ /dbuxProjectView\\.exerciseNode/ && !dbuxProjectView.context.isBusy",
          "group": "inline@2"
        },
        {
          "command": "dbuxProjectView.node.startPractice",
          "when": "viewItem =~ /dbuxProjectView\\.exerciseNode\\.(None|Done)\\..*/ && !dbuxProjectView.context.isBusy",
          "group": "inline@20"
        },
        {
          "command": "dbuxProjectView.node.busyIcon",
          "when": "viewItem =~ /dbuxProjectView\\.exerciseNode\\.(None|Done)\\..*/ && dbuxProjectView.context.isBusy",
          "group": "inline@25"
        },
        {
          "command": "dbuxProjectView.node.stopRunner",
          "when": "viewItem =~ /dbuxProjectView\\.exerciseNode\\.RunningInBackground\\..*/",
          "group": "inline@26"
        },
        {
          "command": "dbuxProjectView.node.resetExercise",
          "when": "viewItem =~ /dbuxProjectView\\.exerciseNode\\..*\\..*/ && !dbuxProjectView.context.isBusy && dbux.context.nodeEnv == development",
          "group": "inline@15"
        },
        {
          "command": "dbuxProjectView.node.showWebsite",
          "when": "viewItem =~ /dbuxProjectView\\.exerciseNode\\.RunningInBackground\\.hasWebsite/",
          "group": "inline@10"
        },
        {
          "command": "dbuxProjectView.node.showExerciseIntroduction",
          "when": "viewItem =~ /dbuxProjectView\\.exerciseNode/",
          "group": "inline@9"
        },
        {
          "command": "dbuxProjectView.node.showExerciseLog",
          "when": "false && viewItem =~ /dbuxProjectView\\.exerciseNode/",
          "group": "inline@8"
        },
        {
          "command": "dbuxSessionView.run#debug",
          "when": "viewItem == dbuxSessionView.runNode",
          "group": "inline"
        },
        {
          "command": "dbuxSessionView.run#debug#dbux",
          "when": "viewItem == dbuxSessionView.runNode#dbux",
          "group": "inline"
        },
        {
          "command": "dbuxSessionView.flushCache",
          "when": "viewItem == dbuxSessionView.runNode#dbux",
          "group": "inline"
        },
        {
          "command": "dbuxSessionView.node.annotateTraceQ",
          "when": "viewItem == dbuxSessionView.tagNode && false",
          "group": "inline@1"
        },
        {
          "command": "dbuxSessionView.node.annotateTraceI",
          "when": "viewItem == dbuxSessionView.tagNode && false",
          "group": "inline@2"
        },
        {
          "command": "dbuxSessionView.node.showEntryFile",
          "when": "viewItem == dbuxSessionView.openWorkspaceNode",
          "group": "inline"
        },
        {
          "command": "dbuxChapterListBuilderView.node.runDDG",
          "when": "viewItem == dbuxChapterListBuilderView.DDGExerciseNode && !dbuxProjectView.context.isBusy",
          "group": "inline@20"
        }
      ],
      "view/title": [
        {
          "command": "dbuxGlobalAnalysisView.showError",
          "when": "view == dbuxGlobalAnalysisView && dbux.context.hasError",
          "group": "navigation"
        },
        {
          "command": "dbuxGlobalAnalysisView.showError.disabled",
          "when": "view == dbuxGlobalAnalysisView && !dbux.context.hasError",
          "group": "navigation"
        },
        {
          "command": "dbuxGlobalAnalysisView.showError",
          "when": "view == dbuxTraceDetailsView && dbux.context.hasError",
          "group": "navigation"
        },
        {
          "command": "dbuxGlobalAnalysisView.showError.disabled",
          "when": "view == dbuxTraceDetailsView && !dbux.context.hasError",
          "group": "navigation"
        },
        {
          "command": "dbuxTraceDetailsView.node.editedWarning",
          "when": "view == dbuxTraceDetailsView && dbuxTraceDetailsView.context.editedWarning",
          "group": "navigation"
        },
        {
          "command": "dbuxTraceDetailsView.selectTraceAtCursor",
          "when": "view == dbuxTraceDetailsView && dbuxTraceDetailsView.context.hasTracesAtCursor",
          "group": "navigation@20"
        },
        {
          "command": "dbuxTraceDetailsView.selectTraceAtCursor.empty",
          "when": "view == dbuxTraceDetailsView && !dbuxTraceDetailsView.context.hasTracesAtCursor",
          "group": "navigation@20"
        },
        {
          "command": "dbuxDataFlowView.setSearchMode.ByAccessId",
          "when": "view == dbuxDataFlowView && dbuxDataFlowView.context.searchModeName == ByAccessId",
          "group": "navigation@1"
        },
        {
          "command": "dbuxDataFlowView.setSearchMode.ByValueId",
          "when": "view == dbuxDataFlowView && dbuxDataFlowView.context.searchModeName == ByValueId",
          "group": "navigation@1"
        },
        {
          "command": "dbuxDataFlowView.setFilterMode.None",
          "when": "view == dbuxDataFlowView && dbuxDataFlowView.context.filterModeName == None",
          "group": "navigation@2"
        },
        {
          "command": "dbuxDataFlowView.setFilterMode.ReadOnly",
          "when": "view == dbuxDataFlowView && dbuxDataFlowView.context.filterModeName == ReadOnly",
          "group": "navigation@2"
        },
        {
          "command": "dbuxDataFlowView.setFilterMode.WriteOnly",
          "when": "view == dbuxDataFlowView && dbuxDataFlowView.context.filterModeName == WriteOnly",
          "group": "navigation@2"
        },
        {
          "command": "dbux.showGraphView",
          "when": "view =~ /(dbuxTraceDetailsView|dbuxGlobalAnalysisView|dbuxApplicationsView)/ && !dbuxWebView.context.dbux-graph.isActive",
          "group": "navigation@6"
        },
        {
          "command": "dbux.hideGraphView",
          "when": "view =~ /(dbuxTraceDetailsView|dbuxGlobalAnalysisView|dbuxApplicationsView)/ && dbuxWebView.context.dbux-graph.isActive",
          "group": "navigation@6"
        },
        {
          "command": "dbuxApplicationsView.clearApplication",
          "when": "view == dbuxApplicationsView",
          "group": "navigation@1"
        },
        {
          "command": "dbux.startRuntimeServer",
          "when": "view == dbuxApplicationsView && !dbux.context.runtimeServerStarted",
          "group": "navigation@7"
        },
        {
          "command": "dbux.stopRuntimeServer",
          "when": "view == dbuxApplicationsView && dbux.context.runtimeServerStarted",
          "group": "navigation@8"
        },
        {
          "command": "dbux.runFile",
          "when": "view == dbuxApplicationsView",
          "group": "navigation@10"
        },
        {
          "command": "dbux.debugFile",
          "when": "view == dbuxApplicationsView",
          "group": "navigation@11"
        },
        {
          "command": "dbux.showPathwaysView",
          "when": "view == dbuxApplicationsView && !dbuxWebView.context.dbux-pathways.isActive",
          "group": "navigation@21"
        },
        {
          "command": "dbux.hidePathwaysView",
          "when": "view == dbuxApplicationsView && dbuxWebView.context.dbux-pathways.isActive",
          "group": "navigation@21"
        },
        {
          "command": "dbux.showHelp",
          "when": "view == dbuxApplicationsView",
          "group": "navigation@30"
        },
        {
          "command": "dbux.togglePracticeView",
          "when": "false",
          "group": "navigation@3"
        },
        {
          "command": "dbuxProjectView.toggleListMode",
          "when": "view == dbuxProjectView",
          "group": "navigation"
        },
        {
          "command": "dbuxProjectView.showDiff",
          "when": "view == dbuxProjectView",
          "group": "navigation"
        },
        {
          "command": "dbuxProject.uploadLog",
          "when": "view == dbuxProjectView || view == dbuxSessionView",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "dbux.doActivate",
          "when": "!dbux.context.activated"
        },
        {
          "command": "dbux.backendLogin",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.diagnostics",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.debugFile",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.exportApplicationData",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.importApplicationData",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.reloadExerciseList",
          "when": "dbux.context.activated && dbux.context.nodeEnv == development"
        },
        {
          "command": "dbux.hideDecorations",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.startPathways",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.stopPathways",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.loadResearchSession",
          "when": "dbux.context.activated && dbux.context.researchEnabled"
        },
        {
          "command": "dbux.showGraphView",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.hideGraphView",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.testDataDependencyGraph",
          "when": "dbux.context.activated && dbux.context.nodeEnv == development"
        },
        {
          "command": "dbux.showPathwaysView",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.hidePathwaysView",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.runFile",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.selectTraceById",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.showDecorations",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.showHelp",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.resetPracticeProgress",
          "when": "dbux.context.activated && dbux.context.nodeEnv == development"
        },
        {
          "command": "dbux.loadPracticeLogFile",
          "when": "dbux.context.activated && dbux.context.nodeEnv == development"
        },
        {
          "command": "dbux.showOutputChannel",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.startRuntimeServer",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.stopRuntimeServer",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.systemCheck",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.toggleErrorLog",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.toggleNavButton",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.searchContexts",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.searchTraces",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.searchValues",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.togglePracticeView",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.openPracticeLogFolder",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxProjectView.showDiff",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxProject.uploadLog",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextChildContext",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextInContext",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextParentContext",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextStaticTrace",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.NextTrace",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousChildContext",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousInContext",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousParentContext",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousStaticTrace",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxTraceDetailsView.navigation.PreviousTrace",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxTraceDetailsView.selectTraceAtCursor",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbux.deleteUserEvents",
          "when": "dbux.context.activated && dbux.context.nodeEnv == development"
        },
        {
          "command": "dbuxSessionView.run",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxSessionView.run#debug",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxSessionView.run#dbux",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxSessionView.run#debug#dbux",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxSessionView.flushCache",
          "when": "dbux.context.activated"
        },
        {
          "command": "dbuxGlobalAnalysisView.showError",
          "when": "false"
        },
        {
          "command": "dbuxGlobalAnalysisView.showError.disabled",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.node.editedWarning",
          "when": "false"
        },
        {
          "command": "dbuxCallStackView.showParent",
          "when": "false"
        },
        {
          "command": "dbuxCallStackView.showScheduler",
          "when": "false"
        },
        {
          "command": "dbuxGlobalAnalysisView.node.nextSortMode",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.nextGroupingMode",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.selectObject",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.valueRender",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.selectTraceAtCursor.empty",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.node.selectWriteTrace",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.node.selectValueCreation",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.node.selectForkParent",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.node.selectScheduler",
          "when": "false"
        },
        {
          "command": "dbuxDataFlowView.setSearchMode.ByAccessId",
          "when": "false"
        },
        {
          "command": "dbuxDataFlowView.setSearchMode.ByValueId",
          "when": "false"
        },
        {
          "command": "dbuxDataFlowView.setFilterMode.None",
          "when": "false"
        },
        {
          "command": "dbuxDataFlowView.setFilterMode.ReadOnly",
          "when": "false"
        },
        {
          "command": "dbuxDataFlowView.setFilterMode.WriteOnly",
          "when": "false"
        },
        {
          "command": "dbuxApplicationsView.showEntryPoint",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.addProjectToWorkspace",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.toggleListMode",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.cleanup",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.exerciseCleanup",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.stopProject",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.startPractice",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.busyIcon",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.stopRunner",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.resetExercise",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.showWebsite",
          "when": "false"
        },
        {
          "command": "dbux.cancelBugRunner",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.showExerciseIntroduction",
          "when": "false"
        },
        {
          "command": "dbuxProjectView.node.showExerciseLog",
          "when": "false"
        },
        {
          "command": "dbuxTraceDetailsView.expandNode",
          "when": "false"
        },
        {
          "command": "dbuxSessionView.node.annotateTraceQ",
          "when": "false"
        },
        {
          "command": "dbuxSessionView.node.annotateTraceI",
          "when": "false"
        },
        {
          "command": "dbuxSessionView.node.showEntryFile",
          "when": "false"
        },
        {
          "command": "dbuxChapterListBuilderView.node.runDDG",
          "when": "false"
        }
      ]
    },
    "configuration": [
      {
        "title": "Dbux",
        "properties": {
          "dbux.autoStart": {
            "type": "boolean",
            "default": false,
            "description": "Whether to auto-start Dbux when opening vscode. Else, you have to click the \"Start Dbux\" button manually every time. (During this early stage, we still hide Dbux default behavior behind a button, to make sure you don't see annoying messages pop up when Dbux has to update dependencies etc. We will improve upon that as Dbux evolves.)",
            "scope": "resource"
          },
          "dbux.paths.git": {
            "type": "string",
            "default": "git",
            "description": "When executing git terminal commands, use `git` from this path. Only used for auto-installing and managing practice projects.",
            "scope": "resource"
          },
          "dbux.paths.node": {
            "type": "string",
            "default": "node",
            "description": "When executing terminal commands, use `node` from this path. (Hint: If you change this, you probably also want to change `paths.npm`.)",
            "scope": "resource"
          },
          "dbux.paths.npm": {
            "type": "string",
            "default": "npm",
            "description": "When installing packages initially or practice projects, use `npm` from this path. (Hint: If you change this, you probably also want to change `paths.node`.)",
            "scope": "resource"
          },
          "dbux.paths.yarn": {
            "type": "string",
            "default": "yarn",
            "description": "When playing with practice projects that require `yarn`, use this path. (Hint: If you change this, you probably also want to change `paths.npm`.)",
            "scope": "resource"
          },
          "dbux.paths.windows.shell": {
            "type": "string",
            "default": "cmd",
            "description": "When executing terminal or system commands, use this shell.",
            "scope": "resource"
          },
          "dbux.paths.posix.shell": {
            "type": "string",
            "default": "bash",
            "description": "When executing terminal or system commands, use this shell.",
            "scope": "resource"
          },
          "dbux.shells.bash.inlineFlags": {
            "type": "array",
            "default": [
              "-c"
            ],
            "description": "Args required to run an inline command with bash. See https://stackoverflow.com/questions/20858381/what-does-bash-c-do",
            "scope": "resource"
          },
          "dbux.shells.bash.pause": {
            "type": "string",
            "default": "read -p \"(Done. Press any key to exit.)\"",
            "description": "Shell-specific pause command.",
            "scope": "resource"
          },
          "dbux.shells.bash.sep": {
            "type": "string",
            "default": ";",
            "description": "Shell-specific multi-command separator.",
            "scope": "resource"
          },
          "dbux.shells.cmd.inlineFlags": {
            "type": "array",
            "default": [
              "/k"
            ],
            "description": "Args required to run an inline command with cmd. See https://stackoverflow.com/questions/9392874/bat-file-open-new-cmd-window-and-execute-a-command-in-there",
            "scope": "resource"
          },
          "dbux.shells.cmd.pause": {
            "type": "string",
            "default": "pause",
            "description": "Shell-specific pause command.",
            "scope": "resource"
          },
          "dbux.shells.cmd.sep": {
            "type": "string",
            "default": "&",
            "description": "Shell-specific multi-command separator.",
            "scope": "resource"
          },
          "dbux.run.dbuxArgs": {
            "type": "string",
            "default": "--esnext",
            "description": "Custom `dbux run` command options. You can find a list of all available dbux command options in https://github.com/Domiii/dbux/blob/master/dbux-cli/src/commandCommons.js",
            "scope": "resource"
          },
          "dbux.run.nodeArgs": {
            "type": "string",
            "default": "--enable-source-maps",
            "description": "Custom node options passed to node when running the program.",
            "scope": "resource"
          },
          "dbux.run.programArgs": {
            "type": "string",
            "default": "",
            "description": "Custom program arguments, available to the program via `process.argv`.",
            "scope": "resource"
          },
          "dbux.run.env": {
            "type": "object",
            "default": {},
            "description": "Custom program environment variables available via `process.env` (probably not working yet).",
            "scope": "resource"
          },
          "dbux.debug.dbuxArgs": {
            "type": "string",
            "default": "--esnext",
            "description": "Custom `dbux run` command options. You can find a list of all available dbux command options in https://github.com/Domiii/dbux/blob/master/dbux-cli/src/commandCommons.js",
            "scope": "resource"
          },
          "dbux.debug.nodeArgs": {
            "type": "string",
            "default": "",
            "description": "Custom node options passed to node when running the program.",
            "scope": "resource"
          },
          "dbux.debug.programArgs": {
            "type": "string",
            "default": "",
            "description": "Custom program arguments, available to the program via `process.argv`.",
            "scope": "resource"
          },
          "dbux.debug.env": {
            "type": "object",
            "default": {},
            "description": "Custom program environment variables available via `process.env` (probably not working yet).",
            "scope": "resource"
          },
          "dbux.packageWhitelist": {
            "type": "string",
            "default": "",
            "description": "Specify which package will be traced by Dbux, seperated by space, regex supported.",
            "scope": "resource"
          }
        }
      }
    ]
  },
  "scripts": {
    "test": "node ./test/runTest.js",
    "build:clean": "rm -rf ./dist ./public ./resources/dist && rm -rf *.vsix",
    "vscode:prepublish": "",
    "uninstallself": "bash ../scripts/code-uninstall.sh",
    "reinstallself": "yarn uninstallself && bash ../scripts/code-install.sh",
    "watch": "node ../node_modules/webpack/bin/webpack.js watch",
    "build+pkg": "yarn build:prod && yarn package-no-build ",
    "build:dev": "node ../node_modules/webpack/bin/webpack.js build --mode=development",
    "build:prod": "node ../node_modules/webpack/bin/webpack.js build --mode=production",
    "update-docs": "node ../scripts/docs/writeDbuxCodeMd.js",
    "package-no-build": "rm -rf *.vsix && yarn update-docs && echo 'Packaging...' && vsce package --yarn --baseImagesUrl https://github.com/Domiii/dbux/dbux-code --baseContentUrl https://github.com/Domiii/dbux/dbux-code",
    "package:build+pkg+analyze": "yarn build:prod && yarn package:pkg+analyze",
    "package:pkg+analyze": "yarn package-no-build && mkdir _analysis && mv *.vsix _analysis && cd _analysis && 7z x -o\"contents\" *.vsix",
    "publish-no-build": "yarn package-no-build && yarn publish-only",
    "publish-only": "echo 'Publishing...' && vsce publish --yarn  --baseImagesUrl https://github.com/Domiii/dbux/dbux-code --baseContentUrl https://github.com/Domiii/dbux/dbux-code"
  },
  "devDependencies": {
    "@dbux/babel-plugin": "^0.7.7-dev.0",
    "@dbux/common": "^0.7.7-dev.0",
    "@dbux/common-node": "^0.7.7-dev.0",
    "@dbux/data": "^0.7.7-dev.0",
    "@dbux/graph-common": "^0.7.7-dev.0",
    "@dbux/graph-host": "^0.7.7-dev.0",
    "@dbux/projects": "^0.7.7-dev.0",
    "@dbux/runtime": "^0.7.7-dev.0",
    "@types/glob": "^7.1.1",
    "@types/node": "^16",
    "@types/vscode": "^1.41.0",
    "firebase": "^9",
    "glob": "^7.1.5",
    "i18next": "^19.8.2",
    "lockfile": "^1.0.4",
    "lodash": "^4.17.21",
    "moment": "^2.24.0",
    "nanoevents": "^2.0.0",
    "open": "^7.1.0",
    "serialize-javascript": "^5.0.1",
    "socket.io": "^4",
    "strip-ansi": "^7.0.1",
    "strip-color": "^0.1.0",
    "typescript": "^3.6.4",
    "uuid": "^8.3.0",
    "vsce": "*",
    "vscode-test": "^1.2.2"
  },
  "_moduleAliases": {},
  "volta": {
    "node": "16.13.0",
    "yarn": "1.22.17"
  }
}
