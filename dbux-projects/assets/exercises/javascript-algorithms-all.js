module.exports = [
  {
    "chapterGroup": "cryptography",
    "chapter": "caesar-cipher",
    "algo": "caesar-cipher_caesarCipher",
    "name": "caesarCipher should not change a string with zero shift@caesarCipher.test.js",
    "label": "caesarCipher should not change a string with zero shift",
    "testNamePattern": "caesarCipher should not change a string with zero shift",
    "testFilePaths": [
      "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js"
    ],
    "number": 1,
    "pdgs": [
      {
        "pdgTitle": "caesarCipherEncrypt(abcd, 0)",
        "uniqueTitle": "caesarCipherEncrypt(abcd, 0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 57,
              "index": 1228
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 57,
              "index": 170
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 292
            }
          }
        }
      },
      {
        "pdgTitle": "caesarCipherDecrypt(abcd, 0)",
        "uniqueTitle": "caesarCipherDecrypt(abcd, 0)#2",
        "contextId": 37,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 53,
              "column": 57,
              "index": 1718
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 2035
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 57,
              "index": 170
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 292
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "caesar-cipher",
    "algo": "caesar-cipher_caesarCipher",
    "name": "caesarCipher should cipher a string with different shifts@caesarCipher.test.js",
    "label": "caesarCipher should cipher a string with different shifts",
    "testNamePattern": "caesarCipher should cipher a string with different shifts",
    "testFilePaths": [
      "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js"
    ],
    "number": 2,
    "pdgs": [
      {
        "pdgTitle": "caesarCipherEncrypt(abcde, 3)",
        "uniqueTitle": "caesarCipherEncrypt(abcde, 3)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 57,
              "index": 1228
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 59,
              "index": 357
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 719
            }
          }
        }
      },
      {
        "pdgTitle": "caesarCipherDecrypt(defgh, 3)",
        "uniqueTitle": "caesarCipherDecrypt(defgh, 3)#2",
        "contextId": 38,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 53,
              "column": 57,
              "index": 1718
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 2035
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 59,
              "index": 357
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 719
            }
          }
        }
      },
      {
        "pdgTitle": "caesarCipherEncrypt(abcde, 1)",
        "uniqueTitle": "caesarCipherEncrypt(abcde, 1)#2",
        "contextId": 71,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 57,
              "index": 1228
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 59,
              "index": 357
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 719
            }
          }
        }
      },
      {
        "pdgTitle": "caesarCipherDecrypt(bcdef, 1)",
        "uniqueTitle": "caesarCipherDecrypt(bcdef, 1)#2",
        "contextId": 104,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 53,
              "column": 57,
              "index": 1718
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 2035
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 59,
              "index": 357
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 719
            }
          }
        }
      },
      {
        "pdgTitle": "caesarCipherEncrypt(xyz, 1)",
        "uniqueTitle": "caesarCipherEncrypt(xyz, 1)#2",
        "contextId": 137,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 57,
              "index": 1228
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 59,
              "index": 357
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 719
            }
          }
        }
      },
      {
        "pdgTitle": "caesarCipherDecrypt(yza, 1)",
        "uniqueTitle": "caesarCipherDecrypt(yza, 1)#2",
        "contextId": 168,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 53,
              "column": 57,
              "index": 1718
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 2035
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 59,
              "index": 357
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 719
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "caesar-cipher",
    "algo": "caesar-cipher_caesarCipher",
    "name": "caesarCipher should be case insensitive@caesarCipher.test.js",
    "label": "caesarCipher should be case insensitive",
    "testNamePattern": "caesarCipher should be case insensitive",
    "testFilePaths": [
      "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js"
    ],
    "number": 3,
    "pdgs": [
      {
        "pdgTitle": "caesarCipherEncrypt(ABCDE, 3)",
        "uniqueTitle": "caesarCipherEncrypt(ABCDE, 3)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 57,
              "index": 1228
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 41,
              "index": 766
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 832
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "caesar-cipher",
    "algo": "caesar-cipher_caesarCipher",
    "name": "caesarCipher should correctly handle an empty strings@caesarCipher.test.js",
    "label": "caesarCipher should correctly handle an empty strings",
    "testNamePattern": "caesarCipher should correctly handle an empty strings",
    "testFilePaths": [
      "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js"
    ],
    "number": 4,
    "pdgs": [
      {
        "pdgTitle": "caesarCipherEncrypt(, 3)",
        "uniqueTitle": "caesarCipherEncrypt(, 3)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 57,
              "index": 1228
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 55,
              "index": 893
            },
            "end": {
              "line": 26,
              "column": 3,
              "index": 949
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "caesar-cipher",
    "algo": "caesar-cipher_caesarCipher",
    "name": "caesarCipher should not cipher unknown chars@caesarCipher.test.js",
    "label": "caesarCipher should not cipher unknown chars",
    "testNamePattern": "caesarCipher should not cipher unknown chars",
    "testFilePaths": [
      "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js"
    ],
    "number": 5,
    "pdgs": [
      {
        "pdgTitle": "caesarCipherEncrypt(ab2cde, 3)",
        "uniqueTitle": "caesarCipherEncrypt(ab2cde, 3)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 57,
              "index": 1228
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 28,
              "column": 46,
              "index": 1001
            },
            "end": {
              "line": 31,
              "column": 3,
              "index": 1131
            }
          }
        }
      },
      {
        "pdgTitle": "caesarCipherDecrypt(de2fgh, 3)",
        "uniqueTitle": "caesarCipherDecrypt(de2fgh, 3)#2",
        "contextId": 39,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 53,
              "column": 57,
              "index": 1718
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 2035
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 28,
              "column": 46,
              "index": 1001
            },
            "end": {
              "line": 31,
              "column": 3,
              "index": 1131
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "caesar-cipher",
    "algo": "caesar-cipher_caesarCipher",
    "name": "caesarCipher should encrypt and decrypt full phrases@caesarCipher.test.js",
    "label": "caesarCipher should encrypt and decrypt full phrases",
    "testNamePattern": "caesarCipher should encrypt and decrypt full phrases",
    "testFilePaths": [
      "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js"
    ],
    "number": 6,
    "pdgs": [
      {
        "pdgTitle": "caesarCipherEncrypt(THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG, 23)",
        "uniqueTitle": "caesarCipherEncrypt(THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG, 23)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 57,
              "index": 1228
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 54,
              "index": 1191
            },
            "end": {
              "line": 41,
              "column": 3,
              "index": 1501
            }
          }
        }
      },
      {
        "pdgTitle": "caesarCipherDecrypt(qeb nrfzh yoltk clu grjmp lsbo qeb ixwv ald, 23)",
        "uniqueTitle": "caesarCipherDecrypt(qeb nrfzh yoltk clu grjmp lsbo qeb ixwv ald, 23)#2",
        "contextId": 76,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/caesarCipher.js",
          "loc": {
            "start": {
              "line": 53,
              "column": 57,
              "index": 1718
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 2035
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/caesar-cipher/__test__/caesarCipher.test.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 54,
              "index": 1191
            },
            "end": {
              "line": 41,
              "column": 3,
              "index": 1501
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "hill-cipher",
    "algo": "hill-cipher_hillCipher",
    "name": "hillCipher should throw an exception when trying to decipher@hillCipher.test.js",
    "label": "hillCipher should throw an exception when trying to decipher",
    "testNamePattern": "hillCipher should throw an exception when trying to decipher",
    "testFilePaths": [
      "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js"
    ],
    "number": 7,
    "pdgs": [
      {
        "pdgTitle": "hillCipherDecrypt(This method is not implemented yet)",
        "uniqueTitle": "hillCipherDecrypt(This method is not implemented yet)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 39,
              "index": 2880
            },
            "end": {
              "line": 92,
              "column": 1,
              "index": 2942
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 169
            },
            "end": {
              "line": 8,
              "column": 3,
              "index": 272
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "hill-cipher",
    "algo": "hill-cipher_hillCipher",
    "name": "hillCipher should throw an error when message or keyString contains none letter character@hillCipher.test.js",
    "label": "hillCipher should throw an error when message or keyString contains none letter character",
    "testNamePattern": "hillCipher should throw an error when message or keyString contains none letter character",
    "testFilePaths": [
      "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js"
    ],
    "number": 8,
    "pdgs": [
      {
        "pdgTitle": "hillCipherEncrypt(hell3, helloworld)",
        "uniqueTitle": "hillCipherEncrypt(hell3, helloworld)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
          "loc": {
            "start": {
              "line": 60,
              "column": 54,
              "index": 1871
            },
            "end": {
              "line": 87,
              "column": 1,
              "index": 2803
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 44,
              "index": 418
            },
            "end": {
              "line": 13,
              "column": 5,
              "index": 475
            }
          }
        }
      },
      {
        "pdgTitle": "hillCipherEncrypt(hello, hel12world)",
        "uniqueTitle": "hillCipherEncrypt(hello, hel12world)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
          "loc": {
            "start": {
              "line": 60,
              "column": 54,
              "index": 1871
            },
            "end": {
              "line": 87,
              "column": 1,
              "index": 2803
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 46,
              "index": 524
            },
            "end": {
              "line": 16,
              "column": 5,
              "index": 581
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "hill-cipher",
    "algo": "hill-cipher_hillCipher",
    "name": "hillCipher should throw an error when the length of the keyString has a square root which is not integer@hillCipher.test.js",
    "label": "hillCipher should throw an error when the length of the keyString has a square root which is not integer",
    "testNamePattern": "hillCipher should throw an error when the length of the keyString has a square root which is not integer",
    "testFilePaths": [
      "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js"
    ],
    "number": 9,
    "pdgs": [
      {
        "pdgTitle": "hillCipherEncrypt(ab, ab)",
        "uniqueTitle": "hillCipherEncrypt(ab, ab)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
          "loc": {
            "start": {
              "line": 60,
              "column": 54,
              "index": 1871
            },
            "end": {
              "line": 87,
              "column": 1,
              "index": 2803
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 43,
              "index": 995
            },
            "end": {
              "line": 29,
              "column": 5,
              "index": 1041
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "hill-cipher",
    "algo": "hill-cipher_hillCipher",
    "name": "hillCipher should throw an error when the length of the keyString does not equal to the power of length of the message@hillCipher.test.js",
    "label": "hillCipher should throw an error when the length of the keyString does not equal to the power of length of the message",
    "testNamePattern": "hillCipher should throw an error when the length of the keyString does not equal to the power of length of the message",
    "testFilePaths": [
      "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js"
    ],
    "number": 10,
    "pdgs": [
      {
        "pdgTitle": "hillCipherEncrypt(ab, aaabbbccc)",
        "uniqueTitle": "hillCipherEncrypt(ab, aaabbbccc)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
          "loc": {
            "start": {
              "line": 60,
              "column": 54,
              "index": 1871
            },
            "end": {
              "line": 87,
              "column": 1,
              "index": 2803
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 43,
              "index": 1370
            },
            "end": {
              "line": 38,
              "column": 5,
              "index": 1423
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "hill-cipher",
    "algo": "hill-cipher_hillCipher",
    "name": "hillCipher should encrypt passed message using Hill Cipher@hillCipher.test.js",
    "label": "hillCipher should encrypt passed message using Hill Cipher",
    "testNamePattern": "hillCipher should encrypt passed message using Hill Cipher",
    "testFilePaths": [
      "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js"
    ],
    "number": 11,
    "pdgs": [
      {
        "pdgTitle": "hillCipherEncrypt(ACT, GYBNQKURP)",
        "uniqueTitle": "hillCipherEncrypt(ACT, GYBNQKURP)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
          "loc": {
            "start": {
              "line": 60,
              "column": 54,
              "index": 1871
            },
            "end": {
              "line": 87,
              "column": 1,
              "index": 2803
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
          "loc": {
            "start": {
              "line": 44,
              "column": 62,
              "index": 1643
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 1841
            }
          }
        }
      },
      {
        "pdgTitle": "hillCipherEncrypt(CAT, GYBNQKURP)",
        "uniqueTitle": "hillCipherEncrypt(CAT, GYBNQKURP)#2",
        "contextId": 64,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
          "loc": {
            "start": {
              "line": 60,
              "column": 54,
              "index": 1871
            },
            "end": {
              "line": 87,
              "column": 1,
              "index": 2803
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
          "loc": {
            "start": {
              "line": 44,
              "column": 62,
              "index": 1643
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 1841
            }
          }
        }
      },
      {
        "pdgTitle": "hillCipherEncrypt(GFG, HILLMAGIC)",
        "uniqueTitle": "hillCipherEncrypt(GFG, HILLMAGIC)#2",
        "contextId": 122,
        "algoLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/hillCipher.js",
          "loc": {
            "start": {
              "line": 60,
              "column": 54,
              "index": 1871
            },
            "end": {
              "line": 87,
              "column": 1,
              "index": 2803
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/cryptography/hill-cipher/_test_/hillCipher.test.js",
          "loc": {
            "start": {
              "line": 44,
              "column": 62,
              "index": 1643
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 1841
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "polynomial-hash",
    "algo": "polynomial-hash_PolynomialHash",
    "name": "PolynomialHash should calculate new hash based on previous one@PolynomialHash.test.js",
    "label": "PolynomialHash should calculate new hash based on previous one",
    "testNamePattern": "PolynomialHash should calculate new hash based on previous one",
    "testFilePaths": [
      "src/algorithms/cryptography/polynomial-hash/__test__/PolynomialHash.test.js"
    ],
    "number": 12
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "polynomial-hash",
    "algo": "polynomial-hash_PolynomialHash",
    "name": "PolynomialHash should generate numeric hashed less than 100@PolynomialHash.test.js",
    "label": "PolynomialHash should generate numeric hashed less than 100",
    "testNamePattern": "PolynomialHash should generate numeric hashed less than 100",
    "testFilePaths": [
      "src/algorithms/cryptography/polynomial-hash/__test__/PolynomialHash.test.js"
    ],
    "number": 13
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "polynomial-hash",
    "algo": "polynomial-hash_SimplePolynomialHash",
    "name": "PolynomialHash should calculate new hash based on previous one@SimplePolynomialHash.test.js",
    "label": "PolynomialHash should calculate new hash based on previous one",
    "testNamePattern": "PolynomialHash should calculate new hash based on previous one",
    "testFilePaths": [
      "src/algorithms/cryptography/polynomial-hash/__test__/SimplePolynomialHash.test.js"
    ],
    "number": 14
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "polynomial-hash",
    "algo": "polynomial-hash_SimplePolynomialHash",
    "name": "PolynomialHash should generate numeric hashed@SimplePolynomialHash.test.js",
    "label": "PolynomialHash should generate numeric hashed",
    "testNamePattern": "PolynomialHash should generate numeric hashed",
    "testFilePaths": [
      "src/algorithms/cryptography/polynomial-hash/__test__/SimplePolynomialHash.test.js"
    ],
    "number": 15
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "rail-fence-cipher",
    "algo": "rail-fence-cipher_railFenceCipher",
    "name": "railFenceCipher encodes a string correctly for base=3@railFenceCipher.test.js",
    "label": "railFenceCipher encodes a string correctly for base=3",
    "testNamePattern": "railFenceCipher encodes a string correctly for base=3",
    "testFilePaths": [
      "src/algorithms/cryptography/rail-fence-cipher/__test__/railFenceCipher.test.js"
    ],
    "number": 16,
    "pdgs": {
      "failedReason": "test execution failed: code=1"
    }
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "rail-fence-cipher",
    "algo": "rail-fence-cipher_railFenceCipher",
    "name": "railFenceCipher decodes a string correctly for base=3@railFenceCipher.test.js",
    "label": "railFenceCipher decodes a string correctly for base=3",
    "testNamePattern": "railFenceCipher decodes a string correctly for base=3",
    "testFilePaths": [
      "src/algorithms/cryptography/rail-fence-cipher/__test__/railFenceCipher.test.js"
    ],
    "number": 17,
    "pdgs": {
      "failedReason": "test execution failed: code=1"
    }
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "rail-fence-cipher",
    "algo": "rail-fence-cipher_railFenceCipher",
    "name": "railFenceCipher encodes a string correctly for base=4@railFenceCipher.test.js",
    "label": "railFenceCipher encodes a string correctly for base=4",
    "testNamePattern": "railFenceCipher encodes a string correctly for base=4",
    "testFilePaths": [
      "src/algorithms/cryptography/rail-fence-cipher/__test__/railFenceCipher.test.js"
    ],
    "number": 18,
    "pdgs": {
      "failedReason": "test execution failed: code=1"
    }
  },
  {
    "chapterGroup": "cryptography",
    "chapter": "rail-fence-cipher",
    "algo": "rail-fence-cipher_railFenceCipher",
    "name": "railFenceCipher decodes a string correctly for base=4@railFenceCipher.test.js",
    "label": "railFenceCipher decodes a string correctly for base=4",
    "testNamePattern": "railFenceCipher decodes a string correctly for base=4",
    "testFilePaths": [
      "src/algorithms/cryptography/rail-fence-cipher/__test__/railFenceCipher.test.js"
    ],
    "number": 19,
    "pdgs": {
      "failedReason": "test execution failed: code=1"
    }
  },
  {
    "chapterGroup": "graph",
    "chapter": "articulation-points",
    "algo": "articulation-points_articulationPoints",
    "name": "articulationPoints should find articulation points in simple graph@articulationPoints.test.js",
    "label": "articulationPoints should find articulation points in simple graph",
    "testNamePattern": "articulationPoints should find articulation points in simple graph",
    "testFilePaths": [
      "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js"
    ],
    "number": 20,
    "pdgs": [
      {
        "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
        "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#12",
        "contextId": 95,
        "algoLoc": {
          "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 50,
              "index": 696
            },
            "end": {
              "line": 124,
              "column": 1,
              "index": 4517
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 62,
              "index": 367
            },
            "end": {
              "line": 26,
              "column": 3,
              "index": 1076
            }
          }
        }
      },
      {
        "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
        "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#13",
        "contextId": 308,
        "algoLoc": {
          "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 50,
              "index": 696
            },
            "end": {
              "line": 124,
              "column": 1,
              "index": 4517
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
          "loc": {
            "start": {
              "line": 28,
              "column": 77,
              "index": 1159
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1866
            }
          }
        }
      },
      {
        "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
        "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#14",
        "contextId": 557,
        "algoLoc": {
          "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 50,
              "index": 696
            },
            "end": {
              "line": 124,
              "column": 1,
              "index": 4517
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 80,
              "index": 1952
            },
            "end": {
              "line": 75,
              "column": 3,
              "index": 2811
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "articulation-points",
    "algo": "articulation-points_articulationPoints",
    "name": "articulationPoints should find articulation points in simple graph with back edge@articulationPoints.test.js",
    "label": "articulationPoints should find articulation points in simple graph with back edge",
    "testNamePattern": "articulationPoints should find articulation points in simple graph with back edge",
    "testFilePaths": [
      "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js"
    ],
    "number": 21,
    "pdgs": [
      {
        "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
        "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#15",
        "contextId": 113,
        "algoLoc": {
          "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 50,
              "index": 696
            },
            "end": {
              "line": 124,
              "column": 1,
              "index": 4517
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
          "loc": {
            "start": {
              "line": 28,
              "column": 77,
              "index": 1159
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1866
            }
          }
        }
      },
      {
        "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
        "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#16",
        "contextId": 362,
        "algoLoc": {
          "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 50,
              "index": 696
            },
            "end": {
              "line": 124,
              "column": 1,
              "index": 4517
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 80,
              "index": 1952
            },
            "end": {
              "line": 75,
              "column": 3,
              "index": 2811
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "articulation-points",
    "algo": "articulation-points_articulationPoints",
    "name": "articulationPoints should find articulation points in simple graph with back edge #2@articulationPoints.test.js",
    "label": "articulationPoints should find articulation points in simple graph with back edge #2",
    "testNamePattern": "articulationPoints should find articulation points in simple graph with back edge #2",
    "testFilePaths": [
      "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js"
    ],
    "number": 22,
    "pdgs": [
      {
        "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
        "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#17",
        "contextId": 138,
        "algoLoc": {
          "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 50,
              "index": 696
            },
            "end": {
              "line": 124,
              "column": 1,
              "index": 4517
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 80,
              "index": 1952
            },
            "end": {
              "line": 75,
              "column": 3,
              "index": 2811
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "articulation-points",
    "algo": "articulation-points_articulationPoints",
    "name": "articulationPoints should find articulation points in graph@articulationPoints.test.js",
    "label": "articulationPoints should find articulation points in graph",
    "testNamePattern": "articulationPoints should find articulation points in graph",
    "testFilePaths": [
      "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js"
    ],
    "number": 23,
    "pdgs": [
      {
        "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
        "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#18",
        "contextId": 231,
        "algoLoc": {
          "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 50,
              "index": 696
            },
            "end": {
              "line": 124,
              "column": 1,
              "index": 4517
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
          "loc": {
            "start": {
              "line": 77,
              "column": 55,
              "index": 2872
            },
            "end": {
              "line": 117,
              "column": 3,
              "index": 4381
            }
          }
        }
      },
      {
        "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
        "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#19",
        "contextId": 734,
        "algoLoc": {
          "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 50,
              "index": 696
            },
            "end": {
              "line": 124,
              "column": 1,
              "index": 4517
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
          "loc": {
            "start": {
              "line": 119,
              "column": 94,
              "index": 4481
            },
            "end": {
              "line": 159,
              "column": 3,
              "index": 5990
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "articulation-points",
    "algo": "articulation-points_articulationPoints",
    "name": "articulationPoints should find articulation points in graph starting with articulation root vertex@articulationPoints.test.js",
    "label": "articulationPoints should find articulation points in graph starting with articulation root vertex",
    "testNamePattern": "articulationPoints should find articulation points in graph starting with articulation root vertex",
    "testFilePaths": [
      "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js"
    ],
    "number": 24,
    "pdgs": [
      {
        "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
        "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#20",
        "contextId": 231,
        "algoLoc": {
          "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 50,
              "index": 696
            },
            "end": {
              "line": 124,
              "column": 1,
              "index": 4517
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
          "loc": {
            "start": {
              "line": 119,
              "column": 94,
              "index": 4481
            },
            "end": {
              "line": 159,
              "column": 3,
              "index": 5990
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "articulation-points",
    "algo": "articulation-points_articulationPoints",
    "name": "articulationPoints should find articulation points in yet another graph #1@articulationPoints.test.js",
    "label": "articulationPoints should find articulation points in yet another graph #1",
    "testNamePattern": "articulationPoints should find articulation points in yet another graph #1",
    "testFilePaths": [
      "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js"
    ],
    "number": 25,
    "pdgs": [
      {
        "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
        "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#21",
        "contextId": 138,
        "algoLoc": {
          "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 50,
              "index": 696
            },
            "end": {
              "line": 124,
              "column": 1,
              "index": 4517
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
          "loc": {
            "start": {
              "line": 161,
              "column": 70,
              "index": 6066
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 6996
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "articulation-points",
    "algo": "articulation-points_articulationPoints",
    "name": "articulationPoints should find articulation points in yet another graph #2@articulationPoints.test.js",
    "label": "articulationPoints should find articulation points in yet another graph #2",
    "testNamePattern": "articulationPoints should find articulation points in yet another graph #2",
    "testFilePaths": [
      "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js"
    ],
    "number": 26,
    "pdgs": [
      {
        "pdgTitle": "articulationPoints({vertices,edges,isDirected})",
        "uniqueTitle": "articulationPoints({vertices,edges,isDirected})#22",
        "contextId": 206,
        "algoLoc": {
          "filePath": "src/algorithms/graph/articulation-points/articulationPoints.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 50,
              "index": 696
            },
            "end": {
              "line": 124,
              "column": 1,
              "index": 4517
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/articulation-points/__test__/articulationPoints.test.js",
          "loc": {
            "start": {
              "line": 190,
              "column": 70,
              "index": 7072
            },
            "end": {
              "line": 224,
              "column": 3,
              "index": 8248
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "bellman-ford",
    "algo": "bellman-ford_bellmanFord",
    "name": "bellmanFord should find minimum paths to all vertices for undirected graph@bellmanFord.test.js",
    "label": "bellmanFord should find minimum paths to all vertices for undirected graph",
    "testNamePattern": "bellmanFord should find minimum paths to all vertices for undirected graph",
    "testFilePaths": [
      "src/algorithms/graph/bellman-ford/__test__/bellmanFord.test.js"
    ],
    "number": 27,
    "pdgs": [
      {
        "pdgTitle": "bellmanFord({vertices,edges,isDirected}, {value,edges})",
        "uniqueTitle": "bellmanFord({vertices,edges,isDirected}, {value,edges})#3",
        "contextId": 282,
        "algoLoc": {
          "filePath": "src/algorithms/graph/bellman-ford/bellmanFord.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 172
            },
            "end": {
              "line": 49,
              "column": 1,
              "index": 1599
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/bellman-ford/__test__/bellmanFord.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 77,
              "index": 361
            },
            "end": {
              "line": 68,
              "column": 3,
              "index": 2412
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "bellman-ford",
    "algo": "bellman-ford_bellmanFord",
    "name": "bellmanFord should find minimum paths to all vertices for directed graph with negative edge weights@bellmanFord.test.js",
    "label": "bellmanFord should find minimum paths to all vertices for directed graph with negative edge weights",
    "testNamePattern": "bellmanFord should find minimum paths to all vertices for directed graph with negative edge weights",
    "testFilePaths": [
      "src/algorithms/graph/bellman-ford/__test__/bellmanFord.test.js"
    ],
    "number": 28,
    "pdgs": [
      {
        "pdgTitle": "bellmanFord({vertices,edges,isDirected}, {value,edges})",
        "uniqueTitle": "bellmanFord({vertices,edges,isDirected}, {value,edges})#4",
        "contextId": 179,
        "algoLoc": {
          "filePath": "src/algorithms/graph/bellman-ford/bellmanFord.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 172
            },
            "end": {
              "line": 49,
              "column": 1,
              "index": 1599
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/bellman-ford/__test__/bellmanFord.test.js",
          "loc": {
            "start": {
              "line": 70,
              "column": 102,
              "index": 2520
            },
            "end": {
              "line": 120,
              "column": 3,
              "index": 4150
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "breadth-first-search",
    "algo": "breadth-first-search_breadthFirstSearch",
    "name": "breadthFirstSearch should perform BFS operation on graph@breadthFirstSearch.test.js",
    "label": "breadthFirstSearch should perform BFS operation on graph",
    "testNamePattern": "breadthFirstSearch should perform BFS operation on graph",
    "testFilePaths": [
      "src/algorithms/graph/breadth-first-search/__test__/breadthFirstSearch.test.js"
    ],
    "number": 29,
    "pdgs": [
      {
        "pdgTitle": "breadthFirstSearch({vertices,edges,isDirected}, {value,edges})",
        "uniqueTitle": "breadthFirstSearch({vertices,edges,isDirected}, {value,edges})#2",
        "contextId": 205,
        "algoLoc": {
          "filePath": "src/algorithms/graph/breadth-first-search/breadthFirstSearch.js",
          "loc": {
            "start": {
              "line": 55,
              "column": 2,
              "index": 1575
            },
            "end": {
              "line": 83,
              "column": 1,
              "index": 2418
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/breadth-first-search/__test__/breadthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 52,
              "index": 357
            },
            "end": {
              "line": 106,
              "column": 3,
              "index": 3895
            }
          }
        }
      },
      {
        "pdgTitle": "breadthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex})",
        "uniqueTitle": "breadthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex})#2",
        "contextId": 343,
        "algoLoc": {
          "filePath": "src/algorithms/graph/breadth-first-search/breadthFirstSearch.js",
          "loc": {
            "start": {
              "line": 55,
              "column": 2,
              "index": 1575
            },
            "end": {
              "line": 83,
              "column": 1,
              "index": 2418
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/breadth-first-search/__test__/breadthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 52,
              "index": 357
            },
            "end": {
              "line": 106,
              "column": 3,
              "index": 3895
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "breadth-first-search",
    "algo": "breadth-first-search_breadthFirstSearch",
    "name": "breadthFirstSearch should allow to create custom vertex visiting logic@breadthFirstSearch.test.js",
    "label": "breadthFirstSearch should allow to create custom vertex visiting logic",
    "testNamePattern": "breadthFirstSearch should allow to create custom vertex visiting logic",
    "testFilePaths": [
      "src/algorithms/graph/breadth-first-search/__test__/breadthFirstSearch.test.js"
    ],
    "number": 30,
    "pdgs": [
      {
        "pdgTitle": "breadthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex,allowTraversal})",
        "uniqueTitle": "breadthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex,allowTraversal})#2",
        "contextId": 205,
        "algoLoc": {
          "filePath": "src/algorithms/graph/breadth-first-search/breadthFirstSearch.js",
          "loc": {
            "start": {
              "line": 55,
              "column": 2,
              "index": 1575
            },
            "end": {
              "line": 83,
              "column": 1,
              "index": 2418
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/breadth-first-search/__test__/breadthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 108,
              "column": 66,
              "index": 3967
            },
            "end": {
              "line": 199,
              "column": 3,
              "index": 7388
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "bridges",
    "algo": "bridges_graphBridges",
    "name": "graphBridges should find bridges in simple graph@graphBridges.test.js",
    "label": "graphBridges should find bridges in simple graph",
    "testNamePattern": "graphBridges should find bridges in simple graph",
    "testFilePaths": [
      "src/algorithms/graph/bridges/__test__/graphBridges.test.js"
    ],
    "number": 31,
    "pdgs": [
      {
        "pdgTitle": "graphBridges({vertices,edges,isDirected})",
        "uniqueTitle": "graphBridges({vertices,edges,isDirected})#9",
        "contextId": 95,
        "algoLoc": {
          "filePath": "src/algorithms/graph/bridges/graphBridges.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 44,
              "index": 468
            },
            "end": {
              "line": 111,
              "column": 1,
              "index": 3784
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 50,
              "index": 337
            },
            "end": {
              "line": 27,
              "column": 3,
              "index": 1038
            }
          }
        }
      },
      {
        "pdgTitle": "graphBridges({vertices,edges,isDirected})",
        "uniqueTitle": "graphBridges({vertices,edges,isDirected})#10",
        "contextId": 350,
        "algoLoc": {
          "filePath": "src/algorithms/graph/bridges/graphBridges.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 44,
              "index": 468
            },
            "end": {
              "line": 111,
              "column": 1,
              "index": 3784
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
          "loc": {
            "start": {
              "line": 29,
              "column": 65,
              "index": 1109
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 1767
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "bridges",
    "algo": "bridges_graphBridges",
    "name": "graphBridges should find bridges in simple graph with back edge@graphBridges.test.js",
    "label": "graphBridges should find bridges in simple graph with back edge",
    "testNamePattern": "graphBridges should find bridges in simple graph with back edge",
    "testFilePaths": [
      "src/algorithms/graph/bridges/__test__/graphBridges.test.js"
    ],
    "number": 32,
    "pdgs": [
      {
        "pdgTitle": "graphBridges({vertices,edges,isDirected})",
        "uniqueTitle": "graphBridges({vertices,edges,isDirected})#11",
        "contextId": 113,
        "algoLoc": {
          "filePath": "src/algorithms/graph/bridges/graphBridges.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 44,
              "index": 468
            },
            "end": {
              "line": 111,
              "column": 1,
              "index": 3784
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
          "loc": {
            "start": {
              "line": 29,
              "column": 65,
              "index": 1109
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 1767
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "bridges",
    "algo": "bridges_graphBridges",
    "name": "graphBridges should find bridges in graph@graphBridges.test.js",
    "label": "graphBridges should find bridges in graph",
    "testNamePattern": "graphBridges should find bridges in graph",
    "testFilePaths": [
      "src/algorithms/graph/bridges/__test__/graphBridges.test.js"
    ],
    "number": 33,
    "pdgs": [
      {
        "pdgTitle": "graphBridges({vertices,edges,isDirected})",
        "uniqueTitle": "graphBridges({vertices,edges,isDirected})#12",
        "contextId": 231,
        "algoLoc": {
          "filePath": "src/algorithms/graph/bridges/graphBridges.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 44,
              "index": 468
            },
            "end": {
              "line": 111,
              "column": 1,
              "index": 3784
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 43,
              "index": 1816
            },
            "end": {
              "line": 89,
              "column": 3,
              "index": 3175
            }
          }
        }
      },
      {
        "pdgTitle": "graphBridges({vertices,edges,isDirected})",
        "uniqueTitle": "graphBridges({vertices,edges,isDirected})#13",
        "contextId": 775,
        "algoLoc": {
          "filePath": "src/algorithms/graph/bridges/graphBridges.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 44,
              "index": 468
            },
            "end": {
              "line": 111,
              "column": 1,
              "index": 3784
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
          "loc": {
            "start": {
              "line": 91,
              "column": 79,
              "index": 3260
            },
            "end": {
              "line": 130,
              "column": 3,
              "index": 4619
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "bridges",
    "algo": "bridges_graphBridges",
    "name": "graphBridges should find bridges in graph starting with different root vertex@graphBridges.test.js",
    "label": "graphBridges should find bridges in graph starting with different root vertex",
    "testNamePattern": "graphBridges should find bridges in graph starting with different root vertex",
    "testFilePaths": [
      "src/algorithms/graph/bridges/__test__/graphBridges.test.js"
    ],
    "number": 34,
    "pdgs": [
      {
        "pdgTitle": "graphBridges({vertices,edges,isDirected})",
        "uniqueTitle": "graphBridges({vertices,edges,isDirected})#14",
        "contextId": 231,
        "algoLoc": {
          "filePath": "src/algorithms/graph/bridges/graphBridges.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 44,
              "index": 468
            },
            "end": {
              "line": 111,
              "column": 1,
              "index": 3784
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
          "loc": {
            "start": {
              "line": 91,
              "column": 79,
              "index": 3260
            },
            "end": {
              "line": 130,
              "column": 3,
              "index": 4619
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "bridges",
    "algo": "bridges_graphBridges",
    "name": "graphBridges should find bridges in yet another graph #1@graphBridges.test.js",
    "label": "graphBridges should find bridges in yet another graph #1",
    "testNamePattern": "graphBridges should find bridges in yet another graph #1",
    "testFilePaths": [
      "src/algorithms/graph/bridges/__test__/graphBridges.test.js"
    ],
    "number": 35,
    "pdgs": [
      {
        "pdgTitle": "graphBridges({vertices,edges,isDirected})",
        "uniqueTitle": "graphBridges({vertices,edges,isDirected})#15",
        "contextId": 138,
        "algoLoc": {
          "filePath": "src/algorithms/graph/bridges/graphBridges.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 44,
              "index": 468
            },
            "end": {
              "line": 111,
              "column": 1,
              "index": 3784
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
          "loc": {
            "start": {
              "line": 132,
              "column": 58,
              "index": 4683
            },
            "end": {
              "line": 159,
              "column": 3,
              "index": 5549
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "bridges",
    "algo": "bridges_graphBridges",
    "name": "graphBridges should find bridges in yet another graph #2@graphBridges.test.js",
    "label": "graphBridges should find bridges in yet another graph #2",
    "testNamePattern": "graphBridges should find bridges in yet another graph #2",
    "testFilePaths": [
      "src/algorithms/graph/bridges/__test__/graphBridges.test.js"
    ],
    "number": 36,
    "pdgs": [
      {
        "pdgTitle": "graphBridges({vertices,edges,isDirected})",
        "uniqueTitle": "graphBridges({vertices,edges,isDirected})#16",
        "contextId": 206,
        "algoLoc": {
          "filePath": "src/algorithms/graph/bridges/graphBridges.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 44,
              "index": 468
            },
            "end": {
              "line": 111,
              "column": 1,
              "index": 3784
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/bridges/__test__/graphBridges.test.js",
          "loc": {
            "start": {
              "line": 161,
              "column": 58,
              "index": 5613
            },
            "end": {
              "line": 195,
              "column": 3,
              "index": 6740
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "depth-first-search",
    "algo": "depth-first-search_depthFirstSearch",
    "name": "depthFirstSearch should perform DFS operation on graph@depthFirstSearch.test.js",
    "label": "depthFirstSearch should perform DFS operation on graph",
    "testNamePattern": "depthFirstSearch should perform DFS operation on graph",
    "testFilePaths": [
      "src/algorithms/graph/depth-first-search/__test__/depthFirstSearch.test.js"
    ],
    "number": 37,
    "pdgs": [
      {
        "pdgTitle": "depthFirstSearch({vertices,edges,isDirected}, {value,edges})",
        "uniqueTitle": "depthFirstSearch({vertices,edges,isDirected}, {value,edges})#2",
        "contextId": 182,
        "algoLoc": {
          "filePath": "src/algorithms/graph/depth-first-search/depthFirstSearch.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 72,
              "index": 2116
            },
            "end": {
              "line": 82,
              "column": 1,
              "index": 2269
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/depth-first-search/__test__/depthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 52,
              "index": 351
            },
            "end": {
              "line": 105,
              "column": 3,
              "index": 3749
            }
          }
        }
      },
      {
        "pdgTitle": "depthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex})",
        "uniqueTitle": "depthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex})#2",
        "contextId": 265,
        "algoLoc": {
          "filePath": "src/algorithms/graph/depth-first-search/depthFirstSearch.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 72,
              "index": 2116
            },
            "end": {
              "line": 82,
              "column": 1,
              "index": 2269
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/depth-first-search/__test__/depthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 52,
              "index": 351
            },
            "end": {
              "line": 105,
              "column": 3,
              "index": 3749
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "depth-first-search",
    "algo": "depth-first-search_depthFirstSearch",
    "name": "depthFirstSearch allow users to redefine vertex visiting logic@depthFirstSearch.test.js",
    "label": "depthFirstSearch allow users to redefine vertex visiting logic",
    "testNamePattern": "depthFirstSearch allow users to redefine vertex visiting logic",
    "testFilePaths": [
      "src/algorithms/graph/depth-first-search/__test__/depthFirstSearch.test.js"
    ],
    "number": 38,
    "pdgs": [
      {
        "pdgTitle": "depthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex,allowTraversal})",
        "uniqueTitle": "depthFirstSearch({vertices,edges,isDirected}, {value,edges}, {enterVertex,leaveVertex,allowTraversal})#2",
        "contextId": 182,
        "algoLoc": {
          "filePath": "src/algorithms/graph/depth-first-search/depthFirstSearch.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 72,
              "index": 2116
            },
            "end": {
              "line": 82,
              "column": 1,
              "index": 2269
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/depth-first-search/__test__/depthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 107,
              "column": 60,
              "index": 3815
            },
            "end": {
              "line": 202,
              "column": 3,
              "index": 7157
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "detect-cycle",
    "algo": "detect-cycle_detectDirectedCycle",
    "name": "detectDirectedCycle should detect directed cycle@detectDirectedCycle.test.js",
    "label": "detectDirectedCycle should detect directed cycle",
    "testNamePattern": "detectDirectedCycle should detect directed cycle",
    "testFilePaths": [
      "src/algorithms/graph/detect-cycle/__test__/detectDirectedCycle.test.js"
    ],
    "number": 39,
    "pdgs": [
      {
        "pdgTitle": "detectDirectedCycle({vertices,edges,isDirected})",
        "uniqueTitle": "detectDirectedCycle({vertices,edges,isDirected})#3",
        "contextId": 146,
        "algoLoc": {
          "filePath": "src/algorithms/graph/detect-cycle/detectDirectedCycle.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 51,
              "index": 225
            },
            "end": {
              "line": 97,
              "column": 1,
              "index": 3532
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/detect-cycle/__test__/detectDirectedCycle.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 43,
              "index": 351
            },
            "end": {
              "line": 41,
              "column": 3,
              "index": 1384
            }
          }
        }
      },
      {
        "pdgTitle": "detectDirectedCycle({vertices,edges,isDirected})",
        "uniqueTitle": "detectDirectedCycle({vertices,edges,isDirected})#4",
        "contextId": 276,
        "algoLoc": {
          "filePath": "src/algorithms/graph/detect-cycle/detectDirectedCycle.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 51,
              "index": 225
            },
            "end": {
              "line": 97,
              "column": 1,
              "index": 3532
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/detect-cycle/__test__/detectDirectedCycle.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 43,
              "index": 351
            },
            "end": {
              "line": 41,
              "column": 3,
              "index": 1384
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "detect-cycle",
    "algo": "detect-cycle_detectUndirectedCycleUsingDisjointSet",
    "name": "detectUndirectedCycleUsingDisjointSet should detect undirected cycle@detectUndirectedCycleUsingDisjointSet.test.js",
    "label": "detectUndirectedCycleUsingDisjointSet should detect undirected cycle",
    "testNamePattern": "detectUndirectedCycleUsingDisjointSet should detect undirected cycle",
    "testFilePaths": [
      "src/algorithms/graph/detect-cycle/__test__/detectUndirectedCycleUsingDisjointSet.test.js"
    ],
    "number": 40,
    "pdgs": [
      {
        "pdgTitle": "detectUndirectedCycleUsingDisjointSet({vertices,edges,isDirected})",
        "uniqueTitle": "detectUndirectedCycleUsingDisjointSet({vertices,edges,isDirected})#3",
        "contextId": 147,
        "algoLoc": {
          "filePath": "src/algorithms/graph/detect-cycle/detectUndirectedCycleUsingDisjointSet.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 69,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1226
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/detect-cycle/__test__/detectUndirectedCycleUsingDisjointSet.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 45,
              "index": 407
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 1332
            }
          }
        }
      },
      {
        "pdgTitle": "detectUndirectedCycleUsingDisjointSet({vertices,edges,isDirected})",
        "uniqueTitle": "detectUndirectedCycleUsingDisjointSet({vertices,edges,isDirected})#4",
        "contextId": 528,
        "algoLoc": {
          "filePath": "src/algorithms/graph/detect-cycle/detectUndirectedCycleUsingDisjointSet.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 69,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1226
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/detect-cycle/__test__/detectUndirectedCycleUsingDisjointSet.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 45,
              "index": 407
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 1332
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "detect-cycle",
    "algo": "detect-cycle_detectUndirectedCycle",
    "name": "detectUndirectedCycle should detect undirected cycle@detectUndirectedCycle.test.js",
    "label": "detectUndirectedCycle should detect undirected cycle",
    "testNamePattern": "detectUndirectedCycle should detect undirected cycle",
    "testFilePaths": [
      "src/algorithms/graph/detect-cycle/__test__/detectUndirectedCycle.test.js"
    ],
    "number": 41,
    "pdgs": [
      {
        "pdgTitle": "detectUndirectedCycle({vertices,edges,isDirected})",
        "uniqueTitle": "detectUndirectedCycle({vertices,edges,isDirected})#3",
        "contextId": 146,
        "algoLoc": {
          "filePath": "src/algorithms/graph/detect-cycle/detectUndirectedCycle.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 53,
              "index": 229
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 2126
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/detect-cycle/__test__/detectUndirectedCycle.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 45,
              "index": 359
            },
            "end": {
              "line": 40,
              "column": 3,
              "index": 1334
            }
          }
        }
      },
      {
        "pdgTitle": "detectUndirectedCycle({vertices,edges,isDirected})",
        "uniqueTitle": "detectUndirectedCycle({vertices,edges,isDirected})#4",
        "contextId": 280,
        "algoLoc": {
          "filePath": "src/algorithms/graph/detect-cycle/detectUndirectedCycle.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 53,
              "index": 229
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 2126
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/detect-cycle/__test__/detectUndirectedCycle.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 45,
              "index": 359
            },
            "end": {
              "line": 40,
              "column": 3,
              "index": 1334
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "dijkstra",
    "algo": "dijkstra_dijkstra",
    "name": "dijkstra should find minimum paths to all vertices for undirected graph@dijkstra.test.js",
    "label": "dijkstra should find minimum paths to all vertices for undirected graph",
    "testNamePattern": "dijkstra should find minimum paths to all vertices for undirected graph",
    "testFilePaths": [
      "src/algorithms/graph/dijkstra/__test__/dijkstra.test.js"
    ],
    "number": 42,
    "pdgs": [
      {
        "pdgTitle": "dijkstra({vertices,edges,isDirected}, {value,edges})",
        "uniqueTitle": "dijkstra({vertices,edges,isDirected}, {value,edges})#3",
        "contextId": 285,
        "algoLoc": {
          "filePath": "src/algorithms/graph/dijkstra/dijkstra.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 53,
              "index": 577
            },
            "end": {
              "line": 81,
              "column": 1,
              "index": 3063
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/dijkstra/__test__/dijkstra.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 77,
              "index": 352
            },
            "end": {
              "line": 68,
              "column": 3,
              "index": 2391
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "dijkstra",
    "algo": "dijkstra_dijkstra",
    "name": "dijkstra should find minimum paths to all vertices for directed graph with negative edge weights@dijkstra.test.js",
    "label": "dijkstra should find minimum paths to all vertices for directed graph with negative edge weights",
    "testNamePattern": "dijkstra should find minimum paths to all vertices for directed graph with negative edge weights",
    "testFilePaths": [
      "src/algorithms/graph/dijkstra/__test__/dijkstra.test.js"
    ],
    "number": 43,
    "pdgs": [
      {
        "pdgTitle": "dijkstra({vertices,edges,isDirected}, {value,edges})",
        "uniqueTitle": "dijkstra({vertices,edges,isDirected}, {value,edges})#4",
        "contextId": 182,
        "algoLoc": {
          "filePath": "src/algorithms/graph/dijkstra/dijkstra.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 53,
              "index": 577
            },
            "end": {
              "line": 81,
              "column": 1,
              "index": 3063
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/dijkstra/__test__/dijkstra.test.js",
          "loc": {
            "start": {
              "line": 70,
              "column": 102,
              "index": 2499
            },
            "end": {
              "line": 120,
              "column": 3,
              "index": 4117
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "eulerian-path",
    "algo": "eulerian-path_eulerianPath",
    "name": "eulerianPath should throw an error when graph is not Eulerian@eulerianPath.test.js",
    "label": "eulerianPath should throw an error when graph is not Eulerian",
    "testNamePattern": "eulerianPath should throw an error when graph is not Eulerian",
    "testFilePaths": [
      "src/algorithms/graph/eulerian-path/__test__/eulerianPath.test.js"
    ],
    "number": 44,
    "pdgs": []
  },
  {
    "chapterGroup": "graph",
    "chapter": "eulerian-path",
    "algo": "eulerian-path_eulerianPath",
    "name": "eulerianPath should find Eulerian Circuit in graph@eulerianPath.test.js",
    "label": "eulerianPath should find Eulerian Circuit in graph",
    "testNamePattern": "eulerianPath should find Eulerian Circuit in graph",
    "testFilePaths": [
      "src/algorithms/graph/eulerian-path/__test__/eulerianPath.test.js"
    ],
    "number": 45,
    "pdgs": []
  },
  {
    "chapterGroup": "graph",
    "chapter": "eulerian-path",
    "algo": "eulerian-path_eulerianPath",
    "name": "eulerianPath should find Eulerian Path in graph@eulerianPath.test.js",
    "label": "eulerianPath should find Eulerian Path in graph",
    "testNamePattern": "eulerianPath should find Eulerian Path in graph",
    "testFilePaths": [
      "src/algorithms/graph/eulerian-path/__test__/eulerianPath.test.js"
    ],
    "number": 46,
    "pdgs": []
  },
  {
    "chapterGroup": "graph",
    "chapter": "floyd-warshall",
    "algo": "floyd-warshall_floydWarshall",
    "name": "floydWarshall should find minimum paths to all vertices for undirected graph@floydWarshall.test.js",
    "label": "floydWarshall should find minimum paths to all vertices for undirected graph",
    "testNamePattern": "floydWarshall should find minimum paths to all vertices for undirected graph",
    "testFilePaths": [
      "src/algorithms/graph/floyd-warshall/__test__/floydWarshall.test.js"
    ],
    "number": 47,
    "pdgs": [
      {
        "pdgTitle": "floydWarshall({vertices,edges,isDirected})",
        "uniqueTitle": "floydWarshall({vertices,edges,isDirected})#5",
        "contextId": 268,
        "algoLoc": {
          "filePath": "src/algorithms/graph/floyd-warshall/floydWarshall.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 149
            },
            "end": {
              "line": 77,
              "column": 1,
              "index": 3113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/floyd-warshall/__test__/floydWarshall.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 77,
              "index": 367
            },
            "end": {
              "line": 89,
              "column": 3,
              "index": 3679
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "floyd-warshall",
    "algo": "floyd-warshall_floydWarshall",
    "name": "floydWarshall should find minimum paths to all vertices for directed graph@floydWarshall.test.js",
    "label": "floydWarshall should find minimum paths to all vertices for directed graph",
    "testNamePattern": "floydWarshall should find minimum paths to all vertices for directed graph",
    "testFilePaths": [
      "src/algorithms/graph/floyd-warshall/__test__/floydWarshall.test.js"
    ],
    "number": 48,
    "pdgs": [
      {
        "pdgTitle": "floydWarshall({vertices,edges,isDirected})",
        "uniqueTitle": "floydWarshall({vertices,edges,isDirected})#6",
        "contextId": 137,
        "algoLoc": {
          "filePath": "src/algorithms/graph/floyd-warshall/floydWarshall.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 149
            },
            "end": {
              "line": 77,
              "column": 1,
              "index": 3113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/floyd-warshall/__test__/floydWarshall.test.js",
          "loc": {
            "start": {
              "line": 91,
              "column": 75,
              "index": 3760
            },
            "end": {
              "line": 152,
              "column": 3,
              "index": 5929
            }
          }
        }
      },
      {
        "pdgTitle": "floydWarshall({vertices,edges,isDirected})",
        "uniqueTitle": "floydWarshall({vertices,edges,isDirected})#7",
        "contextId": 487,
        "algoLoc": {
          "filePath": "src/algorithms/graph/floyd-warshall/floydWarshall.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 149
            },
            "end": {
              "line": 77,
              "column": 1,
              "index": 3113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/floyd-warshall/__test__/floydWarshall.test.js",
          "loc": {
            "start": {
              "line": 154,
              "column": 102,
              "index": 6037
            },
            "end": {
              "line": 225,
              "column": 3,
              "index": 8922
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "floyd-warshall",
    "algo": "floyd-warshall_floydWarshall",
    "name": "floydWarshall should find minimum paths to all vertices for directed graph with negative edge weights@floydWarshall.test.js",
    "label": "floydWarshall should find minimum paths to all vertices for directed graph with negative edge weights",
    "testNamePattern": "floydWarshall should find minimum paths to all vertices for directed graph with negative edge weights",
    "testFilePaths": [
      "src/algorithms/graph/floyd-warshall/__test__/floydWarshall.test.js"
    ],
    "number": 49,
    "pdgs": [
      {
        "pdgTitle": "floydWarshall({vertices,edges,isDirected})",
        "uniqueTitle": "floydWarshall({vertices,edges,isDirected})#8",
        "contextId": 167,
        "algoLoc": {
          "filePath": "src/algorithms/graph/floyd-warshall/floydWarshall.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 149
            },
            "end": {
              "line": 77,
              "column": 1,
              "index": 3113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/floyd-warshall/__test__/floydWarshall.test.js",
          "loc": {
            "start": {
              "line": 154,
              "column": 102,
              "index": 6037
            },
            "end": {
              "line": 225,
              "column": 3,
              "index": 8922
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "hamiltonian-cycle",
    "algo": "hamiltonian-cycle_hamiltonianCycle",
    "name": "hamiltonianCycle should find hamiltonian paths in graph@hamiltonianCycle.test.js",
    "label": "hamiltonianCycle should find hamiltonian paths in graph",
    "testNamePattern": "hamiltonianCycle should find hamiltonian paths in graph",
    "testFilePaths": [
      "src/algorithms/graph/hamiltonian-cycle/__test__/hamiltonianCycle.test.js"
    ],
    "number": 50,
    "pdgs": [
      {
        "pdgTitle": "hamiltonianCycle({vertices,edges,isDirected})",
        "uniqueTitle": "hamiltonianCycle({vertices,edges,isDirected})#3",
        "contextId": 191,
        "algoLoc": {
          "filePath": "src/algorithms/graph/hamiltonian-cycle/hamiltonianCycle.js",
          "loc": {
            "start": {
              "line": 117,
              "column": 48,
              "index": 3688
            },
            "end": {
              "line": 146,
              "column": 1,
              "index": 4582
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/hamiltonian-cycle/__test__/hamiltonianCycle.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 53,
              "index": 352
            },
            "end": {
              "line": 61,
              "column": 3,
              "index": 2796
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "hamiltonian-cycle",
    "algo": "hamiltonian-cycle_hamiltonianCycle",
    "name": "hamiltonianCycle should return false for graph without Hamiltonian path@hamiltonianCycle.test.js",
    "label": "hamiltonianCycle should return false for graph without Hamiltonian path",
    "testNamePattern": "hamiltonianCycle should return false for graph without Hamiltonian path",
    "testFilePaths": [
      "src/algorithms/graph/hamiltonian-cycle/__test__/hamiltonianCycle.test.js"
    ],
    "number": 51,
    "pdgs": [
      {
        "pdgTitle": "hamiltonianCycle({vertices,edges,isDirected})",
        "uniqueTitle": "hamiltonianCycle({vertices,edges,isDirected})#4",
        "contextId": 155,
        "algoLoc": {
          "filePath": "src/algorithms/graph/hamiltonian-cycle/hamiltonianCycle.js",
          "loc": {
            "start": {
              "line": 117,
              "column": 48,
              "index": 3688
            },
            "end": {
              "line": 146,
              "column": 1,
              "index": 4582
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/hamiltonian-cycle/__test__/hamiltonianCycle.test.js",
          "loc": {
            "start": {
              "line": 63,
              "column": 69,
              "index": 2871
            },
            "end": {
              "line": 89,
              "column": 3,
              "index": 3713
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "kruskal",
    "algo": "kruskal_kruskal",
    "name": "kruskal should fire an error for directed graph@kruskal.test.js",
    "label": "kruskal should fire an error for directed graph",
    "testNamePattern": "kruskal should fire an error for directed graph",
    "testFilePaths": [
      "src/algorithms/graph/kruskal/__test__/kruskal.test.js"
    ],
    "number": 52,
    "pdgs": [
      {
        "pdgTitle": "kruskal({vertices,edges,isDirected})",
        "uniqueTitle": "kruskal({vertices,edges,isDirected})#5",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/graph/kruskal/kruskal.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 39,
              "index": 294
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 2223
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/kruskal/__test__/kruskal.test.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 40,
              "index": 369
            },
            "end": {
              "line": 12,
              "column": 5,
              "index": 440
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "kruskal",
    "algo": "kruskal_kruskal",
    "name": "kruskal should find minimum spanning tree@kruskal.test.js",
    "label": "kruskal should find minimum spanning tree",
    "testNamePattern": "kruskal should find minimum spanning tree",
    "testFilePaths": [
      "src/algorithms/graph/kruskal/__test__/kruskal.test.js"
    ],
    "number": 53,
    "pdgs": [
      {
        "pdgTitle": "kruskal({vertices,edges,isDirected})",
        "uniqueTitle": "kruskal({vertices,edges,isDirected})#6",
        "contextId": 257,
        "algoLoc": {
          "filePath": "src/algorithms/graph/kruskal/kruskal.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 39,
              "index": 294
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 2223
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/kruskal/__test__/kruskal.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 48,
              "index": 555
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2150
            }
          }
        }
      },
      {
        "pdgTitle": "kruskal({vertices,edges,isDirected})",
        "uniqueTitle": "kruskal({vertices,edges,isDirected})#7",
        "contextId": 1236,
        "algoLoc": {
          "filePath": "src/algorithms/graph/kruskal/kruskal.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 39,
              "index": 294
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 2223
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/kruskal/__test__/kruskal.test.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 65,
              "index": 2221
            },
            "end": {
              "line": 98,
              "column": 3,
              "index": 3279
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "kruskal",
    "algo": "kruskal_kruskal",
    "name": "kruskal should find minimum spanning tree for simple graph@kruskal.test.js",
    "label": "kruskal should find minimum spanning tree for simple graph",
    "testNamePattern": "kruskal should find minimum spanning tree for simple graph",
    "testFilePaths": [
      "src/algorithms/graph/kruskal/__test__/kruskal.test.js"
    ],
    "number": 54,
    "pdgs": [
      {
        "pdgTitle": "kruskal({vertices,edges,isDirected})",
        "uniqueTitle": "kruskal({vertices,edges,isDirected})#8",
        "contextId": 141,
        "algoLoc": {
          "filePath": "src/algorithms/graph/kruskal/kruskal.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 39,
              "index": 294
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 2223
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/kruskal/__test__/kruskal.test.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 65,
              "index": 2221
            },
            "end": {
              "line": 98,
              "column": 3,
              "index": 3279
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "prim",
    "algo": "prim_prim",
    "name": "prim should fire an error for directed graph@prim.test.js",
    "label": "prim should fire an error for directed graph",
    "testNamePattern": "prim should fire an error for directed graph",
    "testFilePaths": [
      "src/algorithms/graph/prim/__test__/prim.test.js"
    ],
    "number": 55,
    "pdgs": [
      {
        "pdgTitle": "prim({vertices,edges,isDirected})",
        "uniqueTitle": "prim({vertices,edges,isDirected})#5",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/graph/prim/prim.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 36,
              "index": 236
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/prim/__test__/prim.test.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 40,
              "index": 360
            },
            "end": {
              "line": 12,
              "column": 5,
              "index": 428
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "prim",
    "algo": "prim_prim",
    "name": "prim should find minimum spanning tree@prim.test.js",
    "label": "prim should find minimum spanning tree",
    "testNamePattern": "prim should find minimum spanning tree",
    "testFilePaths": [
      "src/algorithms/graph/prim/__test__/prim.test.js"
    ],
    "number": 56,
    "pdgs": [
      {
        "pdgTitle": "prim({vertices,edges,isDirected})",
        "uniqueTitle": "prim({vertices,edges,isDirected})#6",
        "contextId": 256,
        "algoLoc": {
          "filePath": "src/algorithms/graph/prim/prim.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 36,
              "index": 236
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/prim/__test__/prim.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 48,
              "index": 543
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2135
            }
          }
        }
      },
      {
        "pdgTitle": "prim({vertices,edges,isDirected})",
        "uniqueTitle": "prim({vertices,edges,isDirected})#7",
        "contextId": 1004,
        "algoLoc": {
          "filePath": "src/algorithms/graph/prim/prim.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 36,
              "index": 236
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/prim/__test__/prim.test.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 65,
              "index": 2206
            },
            "end": {
              "line": 98,
              "column": 3,
              "index": 3261
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "prim",
    "algo": "prim_prim",
    "name": "prim should find minimum spanning tree for simple graph@prim.test.js",
    "label": "prim should find minimum spanning tree for simple graph",
    "testNamePattern": "prim should find minimum spanning tree for simple graph",
    "testFilePaths": [
      "src/algorithms/graph/prim/__test__/prim.test.js"
    ],
    "number": 57,
    "pdgs": [
      {
        "pdgTitle": "prim({vertices,edges,isDirected})",
        "uniqueTitle": "prim({vertices,edges,isDirected})#8",
        "contextId": 140,
        "algoLoc": {
          "filePath": "src/algorithms/graph/prim/prim.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 36,
              "index": 236
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/prim/__test__/prim.test.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 65,
              "index": 2206
            },
            "end": {
              "line": 98,
              "column": 3,
              "index": 3261
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "strongly-connected-components",
    "algo": "strongly-connected-components_stronglyConnectedComponents",
    "name": "stronglyConnectedComponents should detect strongly connected components in simple graph@stronglyConnectedComponents.test.js",
    "label": "stronglyConnectedComponents should detect strongly connected components in simple graph",
    "testNamePattern": "stronglyConnectedComponents should detect strongly connected components in simple graph",
    "testFilePaths": [
      "src/algorithms/graph/strongly-connected-components/__test__/stronglyConnectedComponents.test.js"
    ],
    "number": 58,
    "pdgs": [
      {
        "pdgTitle": "stronglyConnectedComponents({vertices,edges,isDirected})",
        "uniqueTitle": "stronglyConnectedComponents({vertices,edges,isDirected})#3",
        "contextId": 102,
        "algoLoc": {
          "filePath": "src/algorithms/graph/strongly-connected-components/stronglyConnectedComponents.js",
          "loc": {
            "start": {
              "line": 127,
              "column": 59,
              "index": 4439
            },
            "end": {
              "line": 141,
              "column": 1,
              "index": 5030
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/strongly-connected-components/__test__/stronglyConnectedComponents.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 74,
              "index": 406
            },
            "end": {
              "line": 32,
              "column": 3,
              "index": 1313
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "strongly-connected-components",
    "algo": "strongly-connected-components_stronglyConnectedComponents",
    "name": "stronglyConnectedComponents should detect strongly connected components in graph@stronglyConnectedComponents.test.js",
    "label": "stronglyConnectedComponents should detect strongly connected components in graph",
    "testNamePattern": "stronglyConnectedComponents should detect strongly connected components in graph",
    "testFilePaths": [
      "src/algorithms/graph/strongly-connected-components/__test__/stronglyConnectedComponents.test.js"
    ],
    "number": 59,
    "pdgs": [
      {
        "pdgTitle": "stronglyConnectedComponents({vertices,edges,isDirected})",
        "uniqueTitle": "stronglyConnectedComponents({vertices,edges,isDirected})#4",
        "contextId": 286,
        "algoLoc": {
          "filePath": "src/algorithms/graph/strongly-connected-components/stronglyConnectedComponents.js",
          "loc": {
            "start": {
              "line": 127,
              "column": 59,
              "index": 4439
            },
            "end": {
              "line": 141,
              "column": 1,
              "index": 5030
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/strongly-connected-components/__test__/stronglyConnectedComponents.test.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 67,
              "index": 1386
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3764
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "topological-sorting",
    "algo": "topological-sorting_topologicalSort",
    "name": "topologicalSort should do topological sorting on graph@topologicalSort.test.js",
    "label": "topologicalSort should do topological sorting on graph",
    "testNamePattern": "topologicalSort should do topological sorting on graph",
    "testFilePaths": [
      "src/algorithms/graph/topological-sorting/__test__/topologicalSort.test.js"
    ],
    "number": 60,
    "pdgs": [
      {
        "pdgTitle": "topologicalSort({vertices,edges,isDirected})",
        "uniqueTitle": "topologicalSort({vertices,edges,isDirected})#2",
        "contextId": 190,
        "algoLoc": {
          "filePath": "src/algorithms/graph/topological-sorting/topologicalSort.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 47,
              "index": 215
            },
            "end": {
              "line": 50,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/topological-sorting/__test__/topologicalSort.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 53,
              "index": 349
            },
            "end": {
              "line": 52,
              "column": 3,
              "index": 1715
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "graph",
    "chapter": "travelling-salesman",
    "algo": "travelling-salesman_bfTravellingSalesman",
    "name": "bfTravellingSalesman should solve problem for simple graph@bfTravellingSalesman.test.js",
    "label": "bfTravellingSalesman should solve problem for simple graph",
    "testNamePattern": "bfTravellingSalesman should solve problem for simple graph",
    "testFilePaths": [
      "src/algorithms/graph/travelling-salesman/__test__/bfTravellingSalesman.test.js"
    ],
    "number": 61,
    "pdgs": [
      {
        "pdgTitle": "bfTravellingSalesman({vertices,edges,isDirected})",
        "uniqueTitle": "bfTravellingSalesman({vertices,edges,isDirected})#2",
        "contextId": 220,
        "algoLoc": {
          "filePath": "src/algorithms/graph/travelling-salesman/bfTravellingSalesman.js",
          "loc": {
            "start": {
              "line": 77,
              "column": 52,
              "index": 2227
            },
            "end": {
              "line": 123,
              "column": 1,
              "index": 3688
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/graph/travelling-salesman/__test__/bfTravellingSalesman.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 52,
              "index": 363
            },
            "end": {
              "line": 50,
              "column": 3,
              "index": 1918
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "image-processing",
    "chapter": "seam-carving",
    "algo": "seam-carving_resizeImageWidth",
    "name": "resizeImageWidth should perform content-aware image width reduction@resizeImageWidth.test.js",
    "label": "resizeImageWidth should perform content-aware image width reduction",
    "testNamePattern": "resizeImageWidth should perform content-aware image width reduction",
    "testFilePaths": [
      "src/algorithms/image-processing/seam-carving/__tests__/resizeImageWidth.test.js"
    ],
    "number": 62,
    "pdgs": {
      "failedReason": "test execution failed: code=1"
    }
  },
  {
    "chapterGroup": "linked-list",
    "chapter": "reverse-traversal",
    "algo": "reverse-traversal_reverseTraversal",
    "name": "reverseTraversal should traverse linked list in reverse order@reverseTraversal.test.js",
    "label": "reverseTraversal should traverse linked list in reverse order",
    "testNamePattern": "reverseTraversal should traverse linked list in reverse order",
    "testFilePaths": [
      "src/algorithms/linked-list/reverse-traversal/__test__/reverseTraversal.test.js"
    ],
    "number": 63,
    "pdgs": [
      {
        "pdgTitle": "reverseTraversal({head,tail,compare}, ƒ (anonymous))",
        "uniqueTitle": "reverseTraversal({head,tail,compare}, ƒ (anonymous))#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/linked-list/reverse-traversal/reverseTraversal.js",
          "loc": {
            "start": {
              "line": 22,
              "column": 63,
              "index": 492
            },
            "end": {
              "line": 24,
              "column": 1,
              "index": 553
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/linked-list/reverse-traversal/__test__/reverseTraversal.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 59,
              "index": 230
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 577
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "linked-list",
    "chapter": "traversal",
    "algo": "traversal_traversal",
    "name": "traversal should traverse linked list@traversal.test.js",
    "label": "traversal should traverse linked list",
    "testNamePattern": "traversal should traverse linked list",
    "testFilePaths": [
      "src/algorithms/linked-list/traversal/__test__/traversal.test.js"
    ],
    "number": 64,
    "pdgs": [
      {
        "pdgTitle": "traversal({head,tail,compare}, ƒ (anonymous))",
        "uniqueTitle": "traversal({head,tail,compare}, ƒ (anonymous))#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/linked-list/traversal/traversal.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 56,
              "index": 243
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 388
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/linked-list/traversal/__test__/traversal.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 192
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 532
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "binary-floating-point",
    "algo": "binary-floating-point_bitsToFloat",
    "name": "bitsToFloat16 should convert floating point binary bits to floating point decimal number@bitsToFloat.test.js",
    "label": "bitsToFloat16 should convert floating point binary bits to floating point decimal number",
    "testNamePattern": "bitsToFloat16 should convert floating point binary bits to floating point decimal number",
    "testFilePaths": [
      "src/algorithms/math/binary-floating-point/__tests__/bitsToFloat.test.js"
    ],
    "number": 65,
    "pdgs": {
      "failedReason": "test execution failed: code=1"
    }
  },
  {
    "chapterGroup": "math",
    "chapter": "binary-floating-point",
    "algo": "binary-floating-point_bitsToFloat",
    "name": "bitsToFloat32 should convert floating point binary bits to floating point decimal number@bitsToFloat.test.js",
    "label": "bitsToFloat32 should convert floating point binary bits to floating point decimal number",
    "testNamePattern": "bitsToFloat32 should convert floating point binary bits to floating point decimal number",
    "testFilePaths": [
      "src/algorithms/math/binary-floating-point/__tests__/bitsToFloat.test.js"
    ],
    "number": 66,
    "pdgs": {
      "failedReason": "test execution failed: code=1"
    }
  },
  {
    "chapterGroup": "math",
    "chapter": "binary-floating-point",
    "algo": "binary-floating-point_bitsToFloat",
    "name": "bitsToFloat64 should convert floating point binary bits to floating point decimal number@bitsToFloat.test.js",
    "label": "bitsToFloat64 should convert floating point binary bits to floating point decimal number",
    "testNamePattern": "bitsToFloat64 should convert floating point binary bits to floating point decimal number",
    "testFilePaths": [
      "src/algorithms/math/binary-floating-point/__tests__/bitsToFloat.test.js"
    ],
    "number": 67,
    "pdgs": {
      "failedReason": "test execution failed: code=1"
    }
  },
  {
    "chapterGroup": "math",
    "chapter": "binary-floating-point",
    "algo": "binary-floating-point_floatAsBinaryString",
    "name": "floatAs32Binary should create a binary representation of the floating numbers@floatAsBinaryString.test.js",
    "label": "floatAs32Binary should create a binary representation of the floating numbers",
    "testNamePattern": "floatAs32Binary should create a binary representation of the floating numbers",
    "testFilePaths": [
      "src/algorithms/math/binary-floating-point/__tests__/floatAsBinaryString.test.js"
    ],
    "number": 68,
    "pdgs": {
      "failedReason": "test execution failed: code=1"
    }
  },
  {
    "chapterGroup": "math",
    "chapter": "binary-floating-point",
    "algo": "binary-floating-point_floatAsBinaryString",
    "name": "floatAs64Binary should create a binary representation of the floating numbers@floatAsBinaryString.test.js",
    "label": "floatAs64Binary should create a binary representation of the floating numbers",
    "testNamePattern": "floatAs64Binary should create a binary representation of the floating numbers",
    "testFilePaths": [
      "src/algorithms/math/binary-floating-point/__tests__/floatAsBinaryString.test.js"
    ],
    "number": 69,
    "pdgs": {
      "failedReason": "test execution failed: code=1"
    }
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_bitLength",
    "name": "bitLength should calculate number of bits that the number is consists of@bitLength.test.js",
    "label": "bitLength should calculate number of bits that the number is consists of",
    "testNamePattern": "bitLength should calculate number of bits that the number is consists of",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/bitLength.test.js"
    ],
    "number": 70,
    "pdgs": [
      {
        "pdgTitle": "bitLength(0)",
        "uniqueTitle": "bitLength(0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitLength.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 42,
              "index": 183
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 306
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 149
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 478
            }
          }
        }
      },
      {
        "pdgTitle": "bitLength(1)",
        "uniqueTitle": "bitLength(1)#3",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitLength.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 42,
              "index": 183
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 306
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 149
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 478
            }
          }
        }
      },
      {
        "pdgTitle": "bitLength(1)",
        "uniqueTitle": "bitLength(1)#4",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitLength.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 42,
              "index": 183
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 306
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 149
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 478
            }
          }
        }
      },
      {
        "pdgTitle": "bitLength(5)",
        "uniqueTitle": "bitLength(5)#3",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitLength.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 42,
              "index": 183
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 306
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 149
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 478
            }
          }
        }
      },
      {
        "pdgTitle": "bitLength(5)",
        "uniqueTitle": "bitLength(5)#4",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitLength.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 42,
              "index": 183
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 306
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 149
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 478
            }
          }
        }
      },
      {
        "pdgTitle": "bitLength(21)",
        "uniqueTitle": "bitLength(21)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitLength.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 42,
              "index": 183
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 306
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 149
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 478
            }
          }
        }
      },
      {
        "pdgTitle": "bitLength(245)",
        "uniqueTitle": "bitLength(245)#3",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitLength.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 42,
              "index": 183
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 306
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 149
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 478
            }
          }
        }
      },
      {
        "pdgTitle": "bitLength(245)",
        "uniqueTitle": "bitLength(245)#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitLength.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 42,
              "index": 183
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 306
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitLength.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 149
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 478
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_isPowerOfTwo",
    "name": "isPowerOfTwo should detect if the number is power of two@isPowerOfTwo.test.js",
    "label": "isPowerOfTwo should detect if the number is power of two",
    "testNamePattern": "isPowerOfTwo should detect if the number is power of two",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js"
    ],
    "number": 71,
    "pdgs": [
      {
        "pdgTitle": "isPowerOfTwo(1)",
        "uniqueTitle": "isPowerOfTwo(1)#3",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(2)",
        "uniqueTitle": "isPowerOfTwo(2)#3",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(3)",
        "uniqueTitle": "isPowerOfTwo(3)#3",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(4)",
        "uniqueTitle": "isPowerOfTwo(4)#3",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(5)",
        "uniqueTitle": "isPowerOfTwo(5)#3",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(6)",
        "uniqueTitle": "isPowerOfTwo(6)#3",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(7)",
        "uniqueTitle": "isPowerOfTwo(7)#3",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(8)",
        "uniqueTitle": "isPowerOfTwo(8)#3",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(9)",
        "uniqueTitle": "isPowerOfTwo(9)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(16)",
        "uniqueTitle": "isPowerOfTwo(16)#3",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(23)",
        "uniqueTitle": "isPowerOfTwo(23)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(32)",
        "uniqueTitle": "isPowerOfTwo(32)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(127)",
        "uniqueTitle": "isPowerOfTwo(127)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(128)",
        "uniqueTitle": "isPowerOfTwo(128)#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 99
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 144
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 58,
              "index": 139
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 733
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_updateBit",
    "name": "updateBit should update bit at specific position@updateBit.test.js",
    "label": "updateBit should update bit at specific position",
    "testNamePattern": "updateBit should update bit at specific position",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/updateBit.test.js"
    ],
    "number": 72,
    "pdgs": [
      {
        "pdgTitle": "updateBit(1, 0, 1)",
        "uniqueTitle": "updateBit(1, 0, 1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/updateBit.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 208
            },
            "end": {
              "line": 16,
              "column": 1,
              "index": 487
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 53,
              "index": 125
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "updateBit(1, 0, 0)",
        "uniqueTitle": "updateBit(1, 0, 0)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/updateBit.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 208
            },
            "end": {
              "line": 16,
              "column": 1,
              "index": 487
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 53,
              "index": 125
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "updateBit(1, 1, 1)",
        "uniqueTitle": "updateBit(1, 1, 1)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/updateBit.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 208
            },
            "end": {
              "line": 16,
              "column": 1,
              "index": 487
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 53,
              "index": 125
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "updateBit(1, 2, 1)",
        "uniqueTitle": "updateBit(1, 2, 1)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/updateBit.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 208
            },
            "end": {
              "line": 16,
              "column": 1,
              "index": 487
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 53,
              "index": 125
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "updateBit(10, 0, 1)",
        "uniqueTitle": "updateBit(10, 0, 1)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/updateBit.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 208
            },
            "end": {
              "line": 16,
              "column": 1,
              "index": 487
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 53,
              "index": 125
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "updateBit(10, 0, 0)",
        "uniqueTitle": "updateBit(10, 0, 0)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/updateBit.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 208
            },
            "end": {
              "line": 16,
              "column": 1,
              "index": 487
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 53,
              "index": 125
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "updateBit(10, 1, 1)",
        "uniqueTitle": "updateBit(10, 1, 1)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/updateBit.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 208
            },
            "end": {
              "line": 16,
              "column": 1,
              "index": 487
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 53,
              "index": 125
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "updateBit(10, 1, 0)",
        "uniqueTitle": "updateBit(10, 1, 0)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/updateBit.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 208
            },
            "end": {
              "line": 16,
              "column": 1,
              "index": 487
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 53,
              "index": 125
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "updateBit(10, 2, 1)",
        "uniqueTitle": "updateBit(10, 2, 1)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/updateBit.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 208
            },
            "end": {
              "line": 16,
              "column": 1,
              "index": 487
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 53,
              "index": 125
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "updateBit(10, 2, 0)",
        "uniqueTitle": "updateBit(10, 2, 0)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/updateBit.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 208
            },
            "end": {
              "line": 16,
              "column": 1,
              "index": 487
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/updateBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 53,
              "index": 125
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 593
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_isPositive",
    "name": "isPositive should detect if a number is positive@isPositive.test.js",
    "label": "isPositive should detect if a number is positive",
    "testNamePattern": "isPositive should detect if a number is positive",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/isPositive.test.js"
    ],
    "number": 73,
    "pdgs": [
      {
        "pdgTitle": "isPositive(1)",
        "uniqueTitle": "isPositive(1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPositive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 43,
              "index": 120
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 360
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 127
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 638
            }
          }
        }
      },
      {
        "pdgTitle": "isPositive(2)",
        "uniqueTitle": "isPositive(2)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPositive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 43,
              "index": 120
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 360
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 127
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 638
            }
          }
        }
      },
      {
        "pdgTitle": "isPositive(3)",
        "uniqueTitle": "isPositive(3)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPositive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 43,
              "index": 120
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 360
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 127
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 638
            }
          }
        }
      },
      {
        "pdgTitle": "isPositive(5665)",
        "uniqueTitle": "isPositive(5665)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPositive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 43,
              "index": 120
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 360
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 127
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 638
            }
          }
        }
      },
      {
        "pdgTitle": "isPositive(56644325)",
        "uniqueTitle": "isPositive(56644325)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPositive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 43,
              "index": 120
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 360
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 127
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 638
            }
          }
        }
      },
      {
        "pdgTitle": "isPositive(0)",
        "uniqueTitle": "isPositive(0)#3",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPositive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 43,
              "index": 120
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 360
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 127
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 638
            }
          }
        }
      },
      {
        "pdgTitle": "isPositive(0)",
        "uniqueTitle": "isPositive(0)#4",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPositive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 43,
              "index": 120
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 360
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 127
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 638
            }
          }
        }
      },
      {
        "pdgTitle": "isPositive(-1)",
        "uniqueTitle": "isPositive(-1)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPositive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 43,
              "index": 120
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 360
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 127
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 638
            }
          }
        }
      },
      {
        "pdgTitle": "isPositive(-2)",
        "uniqueTitle": "isPositive(-2)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPositive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 43,
              "index": 120
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 360
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 127
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 638
            }
          }
        }
      },
      {
        "pdgTitle": "isPositive(-126)",
        "uniqueTitle": "isPositive(-126)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPositive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 43,
              "index": 120
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 360
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 127
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 638
            }
          }
        }
      },
      {
        "pdgTitle": "isPositive(-5665)",
        "uniqueTitle": "isPositive(-5665)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPositive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 43,
              "index": 120
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 360
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 127
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 638
            }
          }
        }
      },
      {
        "pdgTitle": "isPositive(-56644325)",
        "uniqueTitle": "isPositive(-56644325)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isPositive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 43,
              "index": 120
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 360
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isPositive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 127
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 638
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_isEven",
    "name": "isEven should detect if a number is even@isEven.test.js",
    "label": "isEven should detect if a number is even",
    "testNamePattern": "isEven should detect if a number is even",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/isEven.test.js"
    ],
    "number": 74,
    "pdgs": [
      {
        "pdgTitle": "isEven(0)",
        "uniqueTitle": "isEven(0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isEven.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 39,
              "index": 98
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 132
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 111
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 592
            }
          }
        }
      },
      {
        "pdgTitle": "isEven(2)",
        "uniqueTitle": "isEven(2)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isEven.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 39,
              "index": 98
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 132
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 111
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 592
            }
          }
        }
      },
      {
        "pdgTitle": "isEven(-2)",
        "uniqueTitle": "isEven(-2)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isEven.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 39,
              "index": 98
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 132
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 111
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 592
            }
          }
        }
      },
      {
        "pdgTitle": "isEven(1)",
        "uniqueTitle": "isEven(1)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isEven.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 39,
              "index": 98
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 132
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 111
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 592
            }
          }
        }
      },
      {
        "pdgTitle": "isEven(-1)",
        "uniqueTitle": "isEven(-1)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isEven.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 39,
              "index": 98
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 132
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 111
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 592
            }
          }
        }
      },
      {
        "pdgTitle": "isEven(-3)",
        "uniqueTitle": "isEven(-3)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isEven.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 39,
              "index": 98
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 132
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 111
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 592
            }
          }
        }
      },
      {
        "pdgTitle": "isEven(3)",
        "uniqueTitle": "isEven(3)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isEven.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 39,
              "index": 98
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 132
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 111
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 592
            }
          }
        }
      },
      {
        "pdgTitle": "isEven(8)",
        "uniqueTitle": "isEven(8)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isEven.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 39,
              "index": 98
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 132
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 111
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 592
            }
          }
        }
      },
      {
        "pdgTitle": "isEven(9)",
        "uniqueTitle": "isEven(9)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isEven.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 39,
              "index": 98
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 132
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 111
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 592
            }
          }
        }
      },
      {
        "pdgTitle": "isEven(121)",
        "uniqueTitle": "isEven(121)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isEven.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 39,
              "index": 98
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 132
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 111
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 592
            }
          }
        }
      },
      {
        "pdgTitle": "isEven(122)",
        "uniqueTitle": "isEven(122)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isEven.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 39,
              "index": 98
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 132
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 111
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 592
            }
          }
        }
      },
      {
        "pdgTitle": "isEven(1201)",
        "uniqueTitle": "isEven(1201)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isEven.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 39,
              "index": 98
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 132
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 111
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 592
            }
          }
        }
      },
      {
        "pdgTitle": "isEven(1202)",
        "uniqueTitle": "isEven(1202)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/isEven.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 39,
              "index": 98
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 132
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/isEven.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 111
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 592
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_fullAdder",
    "name": "fullAdder should add up two numbers@fullAdder.test.js",
    "label": "fullAdder should add up two numbers",
    "testNamePattern": "fullAdder should add up two numbers",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/fullAdder.test.js"
    ],
    "number": 75,
    "pdgs": [
      {
        "pdgTitle": "fullAdder(0, 0)",
        "uniqueTitle": "fullAdder(0, 0)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/fullAdder.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 40,
              "index": 985
            },
            "end": {
              "line": 70,
              "column": 1,
              "index": 2218
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 40,
              "index": 112
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "fullAdder(2, 0)",
        "uniqueTitle": "fullAdder(2, 0)#2",
        "contextId": 71,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/fullAdder.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 40,
              "index": 985
            },
            "end": {
              "line": 70,
              "column": 1,
              "index": 2218
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 40,
              "index": 112
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "fullAdder(0, 2)",
        "uniqueTitle": "fullAdder(0, 2)#2",
        "contextId": 136,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/fullAdder.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 40,
              "index": 985
            },
            "end": {
              "line": 70,
              "column": 1,
              "index": 2218
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 40,
              "index": 112
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "fullAdder(1, 2)",
        "uniqueTitle": "fullAdder(1, 2)#2",
        "contextId": 201,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/fullAdder.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 40,
              "index": 985
            },
            "end": {
              "line": 70,
              "column": 1,
              "index": 2218
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 40,
              "index": 112
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "fullAdder(2, 1)",
        "uniqueTitle": "fullAdder(2, 1)#2",
        "contextId": 266,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/fullAdder.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 40,
              "index": 985
            },
            "end": {
              "line": 70,
              "column": 1,
              "index": 2218
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 40,
              "index": 112
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "fullAdder(6, 6)",
        "uniqueTitle": "fullAdder(6, 6)#2",
        "contextId": 331,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/fullAdder.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 40,
              "index": 985
            },
            "end": {
              "line": 70,
              "column": 1,
              "index": 2218
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 40,
              "index": 112
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "fullAdder(-2, 4)",
        "uniqueTitle": "fullAdder(-2, 4)#2",
        "contextId": 396,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/fullAdder.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 40,
              "index": 985
            },
            "end": {
              "line": 70,
              "column": 1,
              "index": 2218
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 40,
              "index": 112
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "fullAdder(4, -2)",
        "uniqueTitle": "fullAdder(4, -2)#2",
        "contextId": 461,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/fullAdder.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 40,
              "index": 985
            },
            "end": {
              "line": 70,
              "column": 1,
              "index": 2218
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 40,
              "index": 112
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "fullAdder(-4, -4)",
        "uniqueTitle": "fullAdder(-4, -4)#2",
        "contextId": 526,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/fullAdder.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 40,
              "index": 985
            },
            "end": {
              "line": 70,
              "column": 1,
              "index": 2218
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 40,
              "index": 112
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "fullAdder(4, -5)",
        "uniqueTitle": "fullAdder(4, -5)#2",
        "contextId": 591,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/fullAdder.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 40,
              "index": 985
            },
            "end": {
              "line": 70,
              "column": 1,
              "index": 2218
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 40,
              "index": 112
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "fullAdder(2, 121)",
        "uniqueTitle": "fullAdder(2, 121)#2",
        "contextId": 656,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/fullAdder.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 40,
              "index": 985
            },
            "end": {
              "line": 70,
              "column": 1,
              "index": 2218
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 40,
              "index": 112
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "fullAdder(121, 2)",
        "uniqueTitle": "fullAdder(121, 2)#2",
        "contextId": 721,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/fullAdder.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 40,
              "index": 985
            },
            "end": {
              "line": 70,
              "column": 1,
              "index": 2218
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/fullAdder.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 40,
              "index": 112
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 590
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_countSetBits",
    "name": "countSetBits should return number of set bits@countSetBits.test.js",
    "label": "countSetBits should return number of set bits",
    "testNamePattern": "countSetBits should return number of set bits",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/countSetBits.test.js"
    ],
    "number": 76,
    "pdgs": [
      {
        "pdgTitle": "countSetBits(0)",
        "uniqueTitle": "countSetBits(0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      },
      {
        "pdgTitle": "countSetBits(1)",
        "uniqueTitle": "countSetBits(1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      },
      {
        "pdgTitle": "countSetBits(2)",
        "uniqueTitle": "countSetBits(2)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      },
      {
        "pdgTitle": "countSetBits(3)",
        "uniqueTitle": "countSetBits(3)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      },
      {
        "pdgTitle": "countSetBits(4)",
        "uniqueTitle": "countSetBits(4)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      },
      {
        "pdgTitle": "countSetBits(5)",
        "uniqueTitle": "countSetBits(5)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      },
      {
        "pdgTitle": "countSetBits(21)",
        "uniqueTitle": "countSetBits(21)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      },
      {
        "pdgTitle": "countSetBits(255)",
        "uniqueTitle": "countSetBits(255)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      },
      {
        "pdgTitle": "countSetBits(1023)",
        "uniqueTitle": "countSetBits(1023)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      },
      {
        "pdgTitle": "countSetBits(-1)",
        "uniqueTitle": "countSetBits(-1)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      },
      {
        "pdgTitle": "countSetBits(-21)",
        "uniqueTitle": "countSetBits(-21)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      },
      {
        "pdgTitle": "countSetBits(-255)",
        "uniqueTitle": "countSetBits(-255)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      },
      {
        "pdgTitle": "countSetBits(-1023)",
        "uniqueTitle": "countSetBits(-1023)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      },
      {
        "pdgTitle": "countSetBits(-4294967296)",
        "uniqueTitle": "countSetBits(-4294967296)#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/countSetBits.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 119
            },
            "end": {
              "line": 18,
              "column": 1,
              "index": 412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/countSetBits.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 128
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 697
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_multiplyUnsigned",
    "name": "multiplyUnsigned should multiply two unsigned numbers@multiplyUnsigned.test.js",
    "label": "multiplyUnsigned should multiply two unsigned numbers",
    "testNamePattern": "multiplyUnsigned should multiply two unsigned numbers",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js"
    ],
    "number": 77,
    "pdgs": [
      {
        "pdgTitle": "multiplyUnsigned(0, 2)",
        "uniqueTitle": "multiplyUnsigned(0, 2)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 59,
              "index": 559
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1195
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 144
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 573
            }
          }
        }
      },
      {
        "pdgTitle": "multiplyUnsigned(2, 0)",
        "uniqueTitle": "multiplyUnsigned(2, 0)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 59,
              "index": 559
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1195
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 144
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 573
            }
          }
        }
      },
      {
        "pdgTitle": "multiplyUnsigned(1, 1)",
        "uniqueTitle": "multiplyUnsigned(1, 1)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 59,
              "index": 559
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1195
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 144
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 573
            }
          }
        }
      },
      {
        "pdgTitle": "multiplyUnsigned(1, 2)",
        "uniqueTitle": "multiplyUnsigned(1, 2)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 59,
              "index": 559
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1195
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 144
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 573
            }
          }
        }
      },
      {
        "pdgTitle": "multiplyUnsigned(2, 7)",
        "uniqueTitle": "multiplyUnsigned(2, 7)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 59,
              "index": 559
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1195
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 144
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 573
            }
          }
        }
      },
      {
        "pdgTitle": "multiplyUnsigned(7, 2)",
        "uniqueTitle": "multiplyUnsigned(7, 2)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 59,
              "index": 559
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1195
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 144
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 573
            }
          }
        }
      },
      {
        "pdgTitle": "multiplyUnsigned(30, 2)",
        "uniqueTitle": "multiplyUnsigned(30, 2)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 59,
              "index": 559
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1195
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 144
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 573
            }
          }
        }
      },
      {
        "pdgTitle": "multiplyUnsigned(17, 34)",
        "uniqueTitle": "multiplyUnsigned(17, 34)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 59,
              "index": 559
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1195
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 144
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 573
            }
          }
        }
      },
      {
        "pdgTitle": "multiplyUnsigned(170, 2340)",
        "uniqueTitle": "multiplyUnsigned(170, 2340)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyUnsigned.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 59,
              "index": 559
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1195
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyUnsigned.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 144
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 573
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_getBit",
    "name": "getBit should get bit at specific position@getBit.test.js",
    "label": "getBit should get bit at specific position",
    "testNamePattern": "getBit should get bit at specific position",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/getBit.test.js"
    ],
    "number": 78,
    "pdgs": [
      {
        "pdgTitle": "getBit(1, 0)",
        "uniqueTitle": "getBit(1, 0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/getBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 556
            }
          }
        }
      },
      {
        "pdgTitle": "getBit(1, 1)",
        "uniqueTitle": "getBit(1, 1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/getBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 556
            }
          }
        }
      },
      {
        "pdgTitle": "getBit(2, 0)",
        "uniqueTitle": "getBit(2, 0)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/getBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 556
            }
          }
        }
      },
      {
        "pdgTitle": "getBit(2, 1)",
        "uniqueTitle": "getBit(2, 1)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/getBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 556
            }
          }
        }
      },
      {
        "pdgTitle": "getBit(3, 0)",
        "uniqueTitle": "getBit(3, 0)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/getBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 556
            }
          }
        }
      },
      {
        "pdgTitle": "getBit(3, 1)",
        "uniqueTitle": "getBit(3, 1)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/getBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 556
            }
          }
        }
      },
      {
        "pdgTitle": "getBit(10, 0)",
        "uniqueTitle": "getBit(10, 0)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/getBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 556
            }
          }
        }
      },
      {
        "pdgTitle": "getBit(10, 1)",
        "uniqueTitle": "getBit(10, 1)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/getBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 556
            }
          }
        }
      },
      {
        "pdgTitle": "getBit(10, 2)",
        "uniqueTitle": "getBit(10, 2)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/getBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 556
            }
          }
        }
      },
      {
        "pdgTitle": "getBit(10, 3)",
        "uniqueTitle": "getBit(10, 3)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/getBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/getBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 556
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_multiply",
    "name": "multiply should multiply two numbers@multiply.test.js",
    "label": "multiply should multiply two numbers",
    "testNamePattern": "multiply should multiply two numbers",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/multiply.test.js"
    ],
    "number": 79,
    "pdgs": [
      {
        "pdgTitle": "multiply(0, 0)",
        "uniqueTitle": "multiply(0, 0)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiply.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 39,
              "index": 692
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1351
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 111
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 580
            }
          }
        }
      },
      {
        "pdgTitle": "multiply(2, 0)",
        "uniqueTitle": "multiply(2, 0)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiply.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 39,
              "index": 692
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1351
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 111
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 580
            }
          }
        }
      },
      {
        "pdgTitle": "multiply(0, 2)",
        "uniqueTitle": "multiply(0, 2)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiply.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 39,
              "index": 692
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1351
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 111
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 580
            }
          }
        }
      },
      {
        "pdgTitle": "multiply(1, 2)",
        "uniqueTitle": "multiply(1, 2)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiply.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 39,
              "index": 692
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1351
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 111
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 580
            }
          }
        }
      },
      {
        "pdgTitle": "multiply(2, 1)",
        "uniqueTitle": "multiply(2, 1)#2",
        "contextId": 25,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiply.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 39,
              "index": 692
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1351
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 111
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 580
            }
          }
        }
      },
      {
        "pdgTitle": "multiply(6, 6)",
        "uniqueTitle": "multiply(6, 6)#2",
        "contextId": 33,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiply.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 39,
              "index": 692
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1351
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 111
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 580
            }
          }
        }
      },
      {
        "pdgTitle": "multiply(-2, 4)",
        "uniqueTitle": "multiply(-2, 4)#2",
        "contextId": 53,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiply.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 39,
              "index": 692
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1351
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 111
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 580
            }
          }
        }
      },
      {
        "pdgTitle": "multiply(4, -2)",
        "uniqueTitle": "multiply(4, -2)#2",
        "contextId": 71,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiply.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 39,
              "index": 692
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1351
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 111
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 580
            }
          }
        }
      },
      {
        "pdgTitle": "multiply(-4, -4)",
        "uniqueTitle": "multiply(-4, -4)#2",
        "contextId": 84,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiply.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 39,
              "index": 692
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1351
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 111
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 580
            }
          }
        }
      },
      {
        "pdgTitle": "multiply(4, -5)",
        "uniqueTitle": "multiply(4, -5)#2",
        "contextId": 102,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiply.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 39,
              "index": 692
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1351
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 111
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 580
            }
          }
        }
      },
      {
        "pdgTitle": "multiply(2, 121)",
        "uniqueTitle": "multiply(2, 121)#2",
        "contextId": 122,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiply.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 39,
              "index": 692
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1351
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 111
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 580
            }
          }
        }
      },
      {
        "pdgTitle": "multiply(121, 2)",
        "uniqueTitle": "multiply(121, 2)#2",
        "contextId": 168,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiply.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 39,
              "index": 692
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1351
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiply.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 111
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 580
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_switchSign",
    "name": "switchSign should switch the sign of the number using twos complement approach@switchSign.test.js",
    "label": "switchSign should switch the sign of the number using twos complement approach",
    "testNamePattern": "switchSign should switch the sign of the number using twos complement approach",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/switchSign.test.js"
    ],
    "number": 80,
    "pdgs": [
      {
        "pdgTitle": "switchSign(0)",
        "uniqueTitle": "switchSign(0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/switchSign.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 43,
              "index": 169
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 196
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 82,
              "index": 157
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 429
            }
          }
        }
      },
      {
        "pdgTitle": "switchSign(1)",
        "uniqueTitle": "switchSign(1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/switchSign.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 43,
              "index": 169
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 196
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 82,
              "index": 157
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 429
            }
          }
        }
      },
      {
        "pdgTitle": "switchSign(-1)",
        "uniqueTitle": "switchSign(-1)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/switchSign.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 43,
              "index": 169
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 196
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 82,
              "index": 157
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 429
            }
          }
        }
      },
      {
        "pdgTitle": "switchSign(32)",
        "uniqueTitle": "switchSign(32)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/switchSign.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 43,
              "index": 169
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 196
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 82,
              "index": 157
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 429
            }
          }
        }
      },
      {
        "pdgTitle": "switchSign(-32)",
        "uniqueTitle": "switchSign(-32)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/switchSign.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 43,
              "index": 169
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 196
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 82,
              "index": 157
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 429
            }
          }
        }
      },
      {
        "pdgTitle": "switchSign(23)",
        "uniqueTitle": "switchSign(23)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/switchSign.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 43,
              "index": 169
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 196
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 82,
              "index": 157
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 429
            }
          }
        }
      },
      {
        "pdgTitle": "switchSign(-23)",
        "uniqueTitle": "switchSign(-23)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/switchSign.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 43,
              "index": 169
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 196
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/switchSign.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 82,
              "index": 157
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 429
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_bitsDiff",
    "name": "bitsDiff should calculate bits difference between two numbers@bitsDiff.test.js",
    "label": "bitsDiff should calculate bits difference between two numbers",
    "testNamePattern": "bitsDiff should calculate bits difference between two numbers",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/bitsDiff.test.js"
    ],
    "number": 81,
    "pdgs": [
      {
        "pdgTitle": "bitsDiff(0, 0)",
        "uniqueTitle": "bitsDiff(0, 0)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitsDiff.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 51,
              "index": 285
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 332
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 67,
              "index": 136
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 405
            }
          }
        }
      },
      {
        "pdgTitle": "bitsDiff(1, 1)",
        "uniqueTitle": "bitsDiff(1, 1)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitsDiff.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 51,
              "index": 285
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 332
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 67,
              "index": 136
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 405
            }
          }
        }
      },
      {
        "pdgTitle": "bitsDiff(124, 124)",
        "uniqueTitle": "bitsDiff(124, 124)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitsDiff.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 51,
              "index": 285
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 332
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 67,
              "index": 136
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 405
            }
          }
        }
      },
      {
        "pdgTitle": "bitsDiff(0, 1)",
        "uniqueTitle": "bitsDiff(0, 1)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitsDiff.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 51,
              "index": 285
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 332
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 67,
              "index": 136
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 405
            }
          }
        }
      },
      {
        "pdgTitle": "bitsDiff(1, 0)",
        "uniqueTitle": "bitsDiff(1, 0)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitsDiff.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 51,
              "index": 285
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 332
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 67,
              "index": 136
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 405
            }
          }
        }
      },
      {
        "pdgTitle": "bitsDiff(1, 2)",
        "uniqueTitle": "bitsDiff(1, 2)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitsDiff.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 51,
              "index": 285
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 332
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 67,
              "index": 136
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 405
            }
          }
        }
      },
      {
        "pdgTitle": "bitsDiff(1, 3)",
        "uniqueTitle": "bitsDiff(1, 3)#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/bitsDiff.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 51,
              "index": 285
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 332
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/bitsDiff.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 67,
              "index": 136
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 405
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_multiplyByTwo",
    "name": "multiplyByTwo should multiply numbers by two using bitwise operations@multiplyByTwo.test.js",
    "label": "multiplyByTwo should multiply numbers by two using bitwise operations",
    "testNamePattern": "multiplyByTwo should multiply numbers by two using bitwise operations",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/multiplyByTwo.test.js"
    ],
    "number": 82,
    "pdgs": [
      {
        "pdgTitle": "multiplyByTwo(0)",
        "uniqueTitle": "multiplyByTwo(0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyByTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 104
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyByTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 402
            }
          }
        }
      },
      {
        "pdgTitle": "multiplyByTwo(1)",
        "uniqueTitle": "multiplyByTwo(1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyByTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 104
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyByTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 402
            }
          }
        }
      },
      {
        "pdgTitle": "multiplyByTwo(3)",
        "uniqueTitle": "multiplyByTwo(3)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyByTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 104
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyByTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 402
            }
          }
        }
      },
      {
        "pdgTitle": "multiplyByTwo(10)",
        "uniqueTitle": "multiplyByTwo(10)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyByTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 104
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyByTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 402
            }
          }
        }
      },
      {
        "pdgTitle": "multiplyByTwo(17)",
        "uniqueTitle": "multiplyByTwo(17)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyByTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 104
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyByTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 402
            }
          }
        }
      },
      {
        "pdgTitle": "multiplyByTwo(125)",
        "uniqueTitle": "multiplyByTwo(125)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/multiplyByTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 104
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/multiplyByTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 402
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_clearBit",
    "name": "clearBit should clear bit at specific position@clearBit.test.js",
    "label": "clearBit should clear bit at specific position",
    "testNamePattern": "clearBit should clear bit at specific position",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/clearBit.test.js"
    ],
    "number": 83,
    "pdgs": [
      {
        "pdgTitle": "clearBit(1, 0)",
        "uniqueTitle": "clearBit(1, 0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/clearBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 54,
              "index": 158
            },
            "end": {
              "line": 10,
              "column": 1,
              "index": 226
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/clearBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 121
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 394
            }
          }
        }
      },
      {
        "pdgTitle": "clearBit(1, 1)",
        "uniqueTitle": "clearBit(1, 1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/clearBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 54,
              "index": 158
            },
            "end": {
              "line": 10,
              "column": 1,
              "index": 226
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/clearBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 121
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 394
            }
          }
        }
      },
      {
        "pdgTitle": "clearBit(1, 2)",
        "uniqueTitle": "clearBit(1, 2)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/clearBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 54,
              "index": 158
            },
            "end": {
              "line": 10,
              "column": 1,
              "index": 226
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/clearBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 121
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 394
            }
          }
        }
      },
      {
        "pdgTitle": "clearBit(10, 0)",
        "uniqueTitle": "clearBit(10, 0)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/clearBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 54,
              "index": 158
            },
            "end": {
              "line": 10,
              "column": 1,
              "index": 226
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/clearBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 121
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 394
            }
          }
        }
      },
      {
        "pdgTitle": "clearBit(10, 1)",
        "uniqueTitle": "clearBit(10, 1)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/clearBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 54,
              "index": 158
            },
            "end": {
              "line": 10,
              "column": 1,
              "index": 226
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/clearBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 121
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 394
            }
          }
        }
      },
      {
        "pdgTitle": "clearBit(10, 3)",
        "uniqueTitle": "clearBit(10, 3)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/clearBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 54,
              "index": 158
            },
            "end": {
              "line": 10,
              "column": 1,
              "index": 226
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/clearBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 121
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 394
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_divideByTwo",
    "name": "divideByTwo should divide numbers by two using bitwise operations@divideByTwo.test.js",
    "label": "divideByTwo should divide numbers by two using bitwise operations",
    "testNamePattern": "divideByTwo should divide numbers by two using bitwise operations",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/divideByTwo.test.js"
    ],
    "number": 84,
    "pdgs": [
      {
        "pdgTitle": "divideByTwo(0)",
        "uniqueTitle": "divideByTwo(0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/divideByTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 44,
              "index": 102
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 129
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/divideByTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 146
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 379
            }
          }
        }
      },
      {
        "pdgTitle": "divideByTwo(1)",
        "uniqueTitle": "divideByTwo(1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/divideByTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 44,
              "index": 102
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 129
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/divideByTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 146
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 379
            }
          }
        }
      },
      {
        "pdgTitle": "divideByTwo(3)",
        "uniqueTitle": "divideByTwo(3)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/divideByTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 44,
              "index": 102
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 129
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/divideByTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 146
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 379
            }
          }
        }
      },
      {
        "pdgTitle": "divideByTwo(10)",
        "uniqueTitle": "divideByTwo(10)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/divideByTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 44,
              "index": 102
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 129
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/divideByTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 146
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 379
            }
          }
        }
      },
      {
        "pdgTitle": "divideByTwo(17)",
        "uniqueTitle": "divideByTwo(17)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/divideByTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 44,
              "index": 102
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 129
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/divideByTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 146
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 379
            }
          }
        }
      },
      {
        "pdgTitle": "divideByTwo(125)",
        "uniqueTitle": "divideByTwo(125)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/divideByTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 44,
              "index": 102
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 129
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/divideByTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 146
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 379
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "bits",
    "algo": "bits_setBit",
    "name": "setBit should set bit at specific position@setBit.test.js",
    "label": "setBit should set bit at specific position",
    "testNamePattern": "setBit should set bit at specific position",
    "testFilePaths": [
      "src/algorithms/math/bits/__test__/setBit.test.js"
    ],
    "number": 85,
    "pdgs": [
      {
        "pdgTitle": "setBit(1, 0)",
        "uniqueTitle": "setBit(1, 0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/setBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/setBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 376
            }
          }
        }
      },
      {
        "pdgTitle": "setBit(1, 1)",
        "uniqueTitle": "setBit(1, 1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/setBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/setBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 376
            }
          }
        }
      },
      {
        "pdgTitle": "setBit(1, 2)",
        "uniqueTitle": "setBit(1, 2)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/setBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/setBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 376
            }
          }
        }
      },
      {
        "pdgTitle": "setBit(10, 0)",
        "uniqueTitle": "setBit(10, 0)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/setBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/setBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 376
            }
          }
        }
      },
      {
        "pdgTitle": "setBit(10, 1)",
        "uniqueTitle": "setBit(10, 1)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/setBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/setBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 376
            }
          }
        }
      },
      {
        "pdgTitle": "setBit(10, 2)",
        "uniqueTitle": "setBit(10, 2)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/bits/setBit.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 52,
              "index": 156
            },
            "end": {
              "line": 8,
              "column": 1,
              "index": 199
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/bits/__test__/setBit.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 113
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 376
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "complex-number",
    "algo": "complex-number_ComplexNumber",
    "name": "ComplexNumber should create complex numbers@ComplexNumber.test.js",
    "label": "ComplexNumber should create complex numbers",
    "testNamePattern": "ComplexNumber should create complex numbers",
    "testFilePaths": [
      "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js"
    ],
    "number": 86,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#99",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 44,
              "index": 128
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 469
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor()",
        "uniqueTitle": "ComplexNumber.constructor()#3",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 44,
              "index": 128
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 469
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "complex-number",
    "algo": "complex-number_ComplexNumber",
    "name": "ComplexNumber should add complex numbers@ComplexNumber.test.js",
    "label": "ComplexNumber should add complex numbers",
    "testNamePattern": "ComplexNumber should add complex numbers",
    "testFilePaths": [
      "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js"
    ],
    "number": 87,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#100",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 41,
              "index": 516
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 962
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#101",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 41,
              "index": 516
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 962
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.add({re,im})",
        "uniqueTitle": "ComplexNumber.add({re,im})#5",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 14,
              "index": 631
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 868
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 41,
              "index": 516
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 962
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.add({re,im})",
        "uniqueTitle": "ComplexNumber.add({re,im})#6",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 14,
              "index": 631
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 868
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 41,
              "index": 516
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 962
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "complex-number",
    "algo": "complex-number_ComplexNumber",
    "name": "ComplexNumber should add complex and natural numbers@ComplexNumber.test.js",
    "label": "ComplexNumber should add complex and natural numbers",
    "testNamePattern": "ComplexNumber should add complex and natural numbers",
    "testFilePaths": [
      "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js"
    ],
    "number": 88,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#102",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 30,
              "column": 53,
              "index": 1021
            },
            "end": {
              "line": 46,
              "column": 3,
              "index": 1573
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re})",
        "uniqueTitle": "ComplexNumber.constructor({re})#3",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 30,
              "column": 53,
              "index": 1021
            },
            "end": {
              "line": 46,
              "column": 3,
              "index": 1573
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.add({re,im})",
        "uniqueTitle": "ComplexNumber.add({re,im})#7",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 14,
              "index": 631
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 868
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 30,
              "column": 53,
              "index": 1021
            },
            "end": {
              "line": 46,
              "column": 3,
              "index": 1573
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.add({re,im})",
        "uniqueTitle": "ComplexNumber.add({re,im})#8",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 14,
              "index": 631
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 868
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 30,
              "column": 53,
              "index": 1021
            },
            "end": {
              "line": 46,
              "column": 3,
              "index": 1573
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.add(3)",
        "uniqueTitle": "ComplexNumber.add(3)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 14,
              "index": 631
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 868
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 30,
              "column": 53,
              "index": 1021
            },
            "end": {
              "line": 46,
              "column": 3,
              "index": 1573
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "complex-number",
    "algo": "complex-number_ComplexNumber",
    "name": "ComplexNumber should subtract complex numbers@ComplexNumber.test.js",
    "label": "ComplexNumber should subtract complex numbers",
    "testNamePattern": "ComplexNumber should subtract complex numbers",
    "testFilePaths": [
      "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js"
    ],
    "number": 89,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#103",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 48,
              "column": 46,
              "index": 1625
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 2081
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#104",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 48,
              "column": 46,
              "index": 1625
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 2081
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.subtract({re,im})",
        "uniqueTitle": "ComplexNumber.subtract({re,im})#5",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 23,
              "index": 986
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 1239
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 48,
              "column": 46,
              "index": 1625
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 2081
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.subtract({re,im})",
        "uniqueTitle": "ComplexNumber.subtract({re,im})#6",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 23,
              "index": 986
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 1239
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 48,
              "column": 46,
              "index": 1625
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 2081
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "complex-number",
    "algo": "complex-number_ComplexNumber",
    "name": "ComplexNumber should subtract complex and natural numbers@ComplexNumber.test.js",
    "label": "ComplexNumber should subtract complex and natural numbers",
    "testNamePattern": "ComplexNumber should subtract complex and natural numbers",
    "testFilePaths": [
      "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js"
    ],
    "number": 90,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#105",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 62,
              "column": 58,
              "index": 2145
            },
            "end": {
              "line": 78,
              "column": 3,
              "index": 2713
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re})",
        "uniqueTitle": "ComplexNumber.constructor({re})#4",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 62,
              "column": 58,
              "index": 2145
            },
            "end": {
              "line": 78,
              "column": 3,
              "index": 2713
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.subtract({re,im})",
        "uniqueTitle": "ComplexNumber.subtract({re,im})#7",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 23,
              "index": 986
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 1239
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 62,
              "column": 58,
              "index": 2145
            },
            "end": {
              "line": 78,
              "column": 3,
              "index": 2713
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.subtract({re,im})",
        "uniqueTitle": "ComplexNumber.subtract({re,im})#8",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 23,
              "index": 986
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 1239
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 62,
              "column": 58,
              "index": 2145
            },
            "end": {
              "line": 78,
              "column": 3,
              "index": 2713
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.subtract(3)",
        "uniqueTitle": "ComplexNumber.subtract(3)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 23,
              "index": 986
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 1239
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 62,
              "column": 58,
              "index": 2145
            },
            "end": {
              "line": 78,
              "column": 3,
              "index": 2713
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "complex-number",
    "algo": "complex-number_ComplexNumber",
    "name": "ComplexNumber should multiply complex numbers@ComplexNumber.test.js",
    "label": "ComplexNumber should multiply complex numbers",
    "testNamePattern": "ComplexNumber should multiply complex numbers",
    "testFilePaths": [
      "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js"
    ],
    "number": 91,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#106",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 80,
              "column": 46,
              "index": 2765
            },
            "end": {
              "line": 96,
              "column": 3,
              "index": 3351
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#107",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 80,
              "column": 46,
              "index": 2765
            },
            "end": {
              "line": 96,
              "column": 3,
              "index": 3351
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.multiply({re,im})",
        "uniqueTitle": "ComplexNumber.multiply({re,im})#6",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 54,
              "column": 25,
              "index": 1361
            },
            "end": {
              "line": 62,
              "column": 3,
              "index": 1692
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 80,
              "column": 46,
              "index": 2765
            },
            "end": {
              "line": 96,
              "column": 3,
              "index": 3351
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.multiply({re,im})",
        "uniqueTitle": "ComplexNumber.multiply({re,im})#7",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 54,
              "column": 25,
              "index": 1361
            },
            "end": {
              "line": 62,
              "column": 3,
              "index": 1692
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 80,
              "column": 46,
              "index": 2765
            },
            "end": {
              "line": 96,
              "column": 3,
              "index": 3351
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.multiply(5)",
        "uniqueTitle": "ComplexNumber.multiply(5)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 54,
              "column": 25,
              "index": 1361
            },
            "end": {
              "line": 62,
              "column": 3,
              "index": 1692
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 80,
              "column": 46,
              "index": 2765
            },
            "end": {
              "line": 96,
              "column": 3,
              "index": 3351
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#108",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 98,
              "column": 60,
              "index": 3417
            },
            "end": {
              "line": 105,
              "column": 3,
              "index": 3614
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.multiply({re,im})",
        "uniqueTitle": "ComplexNumber.multiply({re,im})#8",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 54,
              "column": 25,
              "index": 1361
            },
            "end": {
              "line": 62,
              "column": 3,
              "index": 1692
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 98,
              "column": 60,
              "index": 3417
            },
            "end": {
              "line": 105,
              "column": 3,
              "index": 3614
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "complex-number",
    "algo": "complex-number_ComplexNumber",
    "name": "ComplexNumber should multiply complex numbers by themselves@ComplexNumber.test.js",
    "label": "ComplexNumber should multiply complex numbers by themselves",
    "testNamePattern": "ComplexNumber should multiply complex numbers by themselves",
    "testFilePaths": [
      "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js"
    ],
    "number": 92,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#109",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 98,
              "column": 60,
              "index": 3417
            },
            "end": {
              "line": 105,
              "column": 3,
              "index": 3614
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.multiply({re,im})",
        "uniqueTitle": "ComplexNumber.multiply({re,im})#9",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 54,
              "column": 25,
              "index": 1361
            },
            "end": {
              "line": 62,
              "column": 3,
              "index": 1692
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 98,
              "column": 60,
              "index": 3417
            },
            "end": {
              "line": 105,
              "column": 3,
              "index": 3614
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "complex-number",
    "algo": "complex-number_ComplexNumber",
    "name": "ComplexNumber should calculate i in power of two@ComplexNumber.test.js",
    "label": "ComplexNumber should calculate i in power of two",
    "testNamePattern": "ComplexNumber should calculate i in power of two",
    "testFilePaths": [
      "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js"
    ],
    "number": 93,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#110",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 107,
              "column": 49,
              "index": 3669
            },
            "end": {
              "line": 114,
              "column": 3,
              "index": 3867
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.multiply({re,im})",
        "uniqueTitle": "ComplexNumber.multiply({re,im})#10",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 54,
              "column": 25,
              "index": 1361
            },
            "end": {
              "line": 62,
              "column": 3,
              "index": 1692
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 107,
              "column": 49,
              "index": 3669
            },
            "end": {
              "line": 114,
              "column": 3,
              "index": 3867
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "complex-number",
    "algo": "complex-number_ComplexNumber",
    "name": "ComplexNumber should divide complex numbers@ComplexNumber.test.js",
    "label": "ComplexNumber should divide complex numbers",
    "testNamePattern": "ComplexNumber should divide complex numbers",
    "testFilePaths": [
      "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js"
    ],
    "number": 94,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#111",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 116,
              "column": 44,
              "index": 3917
            },
            "end": {
              "line": 128,
              "column": 3,
              "index": 4355
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#112",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 116,
              "column": 44,
              "index": 3917
            },
            "end": {
              "line": 128,
              "column": 3,
              "index": 4355
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.divide({re,im})",
        "uniqueTitle": "ComplexNumber.divide({re,im})#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 68,
              "column": 18,
              "index": 1802
            },
            "end": {
              "line": 85,
              "column": 3,
              "index": 2412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 116,
              "column": 44,
              "index": 3917
            },
            "end": {
              "line": 128,
              "column": 3,
              "index": 4355
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.divide(2)",
        "uniqueTitle": "ComplexNumber.divide(2)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 68,
              "column": 18,
              "index": 1802
            },
            "end": {
              "line": 85,
              "column": 3,
              "index": 2412
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 116,
              "column": 44,
              "index": 3917
            },
            "end": {
              "line": 128,
              "column": 3,
              "index": 4355
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "complex-number",
    "algo": "complex-number_ComplexNumber",
    "name": "ComplexNumber should return complex number in polar form@ComplexNumber.test.js",
    "label": "ComplexNumber should return complex number in polar form",
    "testNamePattern": "ComplexNumber should return complex number in polar form",
    "testFilePaths": [
      "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js"
    ],
    "number": 95,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#113",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#21",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#22",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#51",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#114",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#23",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#24",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#52",
        "contextId": 24,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#115",
        "contextId": 28,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#25",
        "contextId": 29,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#26",
        "contextId": 32,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#53",
        "contextId": 35,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#116",
        "contextId": 39,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#27",
        "contextId": 40,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#28",
        "contextId": 43,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#54",
        "contextId": 46,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#117",
        "contextId": 50,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#29",
        "contextId": 51,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#30",
        "contextId": 54,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#55",
        "contextId": 57,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#118",
        "contextId": 61,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#31",
        "contextId": 62,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#32",
        "contextId": 65,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#56",
        "contextId": 68,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#119",
        "contextId": 72,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#33",
        "contextId": 73,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#34",
        "contextId": 76,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#57",
        "contextId": 79,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor()",
        "uniqueTitle": "ComplexNumber.constructor()#4",
        "contextId": 83,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#35",
        "contextId": 84,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#36",
        "contextId": 87,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#58",
        "contextId": 90,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#120",
        "contextId": 94,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#37",
        "contextId": 95,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#38",
        "contextId": 98,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#59",
        "contextId": 101,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#121",
        "contextId": 105,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#39",
        "contextId": 106,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm()",
        "uniqueTitle": "ComplexNumber.getPolarForm()#40",
        "contextId": 109,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#60",
        "contextId": 112,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/complex-number/__test__/ComplexNumber.test.js",
          "loc": {
            "start": {
              "line": 130,
              "column": 57,
              "index": 4418
            },
            "end": {
              "line": 188,
              "column": 3,
              "index": 7287
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "euclidean-algorithm",
    "algo": "euclidean-algorithm_euclideanAlgorithmIterative",
    "name": "euclideanAlgorithmIterative should calculate GCD iteratively@euclideanAlgorithmIterative.test.js",
    "label": "euclideanAlgorithmIterative should calculate GCD iteratively",
    "testNamePattern": "euclideanAlgorithmIterative should calculate GCD iteratively",
    "testFilePaths": [
      "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithmIterative.test.js"
    ],
    "number": 96,
    "pdgs": {
      "failedReason": "test execution failed: code=1"
    }
  },
  {
    "chapterGroup": "math",
    "chapter": "euclidean-algorithm",
    "algo": "euclidean-algorithm_euclideanAlgorithm",
    "name": "euclideanAlgorithm should calculate GCD recursively@euclideanAlgorithm.test.js",
    "label": "euclideanAlgorithm should calculate GCD recursively",
    "testNamePattern": "euclideanAlgorithm should calculate GCD recursively",
    "testFilePaths": [
      "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js"
    ],
    "number": 97,
    "pdgs": [
      {
        "pdgTitle": "euclideanAlgorithm(0, 0)",
        "uniqueTitle": "euclideanAlgorithm(0, 0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(2, 0)",
        "uniqueTitle": "euclideanAlgorithm(2, 0)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(0, 2)",
        "uniqueTitle": "euclideanAlgorithm(0, 2)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(1, 2)",
        "uniqueTitle": "euclideanAlgorithm(1, 2)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(2, 1)",
        "uniqueTitle": "euclideanAlgorithm(2, 1)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(6, 6)",
        "uniqueTitle": "euclideanAlgorithm(6, 6)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(2, 4)",
        "uniqueTitle": "euclideanAlgorithm(2, 4)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(4, 2)",
        "uniqueTitle": "euclideanAlgorithm(4, 2)#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(12, 4)",
        "uniqueTitle": "euclideanAlgorithm(12, 4)#2",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(4, 12)",
        "uniqueTitle": "euclideanAlgorithm(4, 12)#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(5, 13)",
        "uniqueTitle": "euclideanAlgorithm(5, 13)#2",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(27, 13)",
        "uniqueTitle": "euclideanAlgorithm(27, 13)#2",
        "contextId": 32,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(24, 60)",
        "uniqueTitle": "euclideanAlgorithm(24, 60)#2",
        "contextId": 35,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(60, 24)",
        "uniqueTitle": "euclideanAlgorithm(60, 24)#2",
        "contextId": 39,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(252, 105)",
        "uniqueTitle": "euclideanAlgorithm(252, 105)#2",
        "contextId": 42,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(105, 252)",
        "uniqueTitle": "euclideanAlgorithm(105, 252)#2",
        "contextId": 46,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(1071, 462)",
        "uniqueTitle": "euclideanAlgorithm(1071, 462)#2",
        "contextId": 51,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(462, 1071)",
        "uniqueTitle": "euclideanAlgorithm(462, 1071)#2",
        "contextId": 55,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(462, -1071)",
        "uniqueTitle": "euclideanAlgorithm(462, -1071)#2",
        "contextId": 60,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanAlgorithm(-462, -1071)",
        "uniqueTitle": "euclideanAlgorithm(-462, -1071)#2",
        "contextId": 65,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/euclideanAlgorithm.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 65,
              "index": 243
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-algorithm/__test__/euclideanAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 146
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1140
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "euclidean-distance",
    "algo": "euclidean-distance_euclideanDistance",
    "name": "euclideanDistance should calculate euclidean distance between vectors@euclideanDistance.test.js",
    "label": "euclideanDistance should calculate euclidean distance between vectors",
    "testNamePattern": "euclideanDistance should calculate euclidean distance between vectors",
    "testFilePaths": [
      "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js"
    ],
    "number": 98,
    "pdgs": [
      {
        "pdgTitle": "euclideanDistance([[]], [[]])",
        "uniqueTitle": "euclideanDistance([[]], [[]])#7",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 36,
              "index": 309
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 591
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 66,
              "index": 162
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 676
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanDistance([[]], [[]])",
        "uniqueTitle": "euclideanDistance([[]], [[]])#8",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 36,
              "index": 309
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 591
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 66,
              "index": 162
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 676
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanDistance([[]], [[]])",
        "uniqueTitle": "euclideanDistance([[]], [[]])#9",
        "contextId": 36,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 36,
              "index": 309
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 591
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 66,
              "index": 162
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 676
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanDistance([[],[]], [[],[]])",
        "uniqueTitle": "euclideanDistance([[],[]], [[],[]])#2",
        "contextId": 55,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 36,
              "index": 309
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 591
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 66,
              "index": 162
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 676
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanDistance([[]], [[]])",
        "uniqueTitle": "euclideanDistance([[]], [[]])#10",
        "contextId": 76,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 36,
              "index": 309
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 591
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 66,
              "index": 162
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 676
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanDistance([[],[],[]], [[],[],[]])",
        "uniqueTitle": "euclideanDistance([[],[],[]], [[],[],[]])#3",
        "contextId": 99,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 36,
              "index": 309
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 591
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 66,
              "index": 162
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 676
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanDistance([[],[],[]], [[],[],[]])",
        "uniqueTitle": "euclideanDistance([[],[],[]], [[],[],[]])#4",
        "contextId": 126,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 36,
              "index": 309
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 591
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 66,
              "index": 162
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 676
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "euclidean-distance",
    "algo": "euclidean-distance_euclideanDistance",
    "name": "euclideanDistance should throw an error in case if two matrices are of different shapes@euclideanDistance.test.js",
    "label": "euclideanDistance should throw an error in case if two matrices are of different shapes",
    "testNamePattern": "euclideanDistance should throw an error in case if two matrices are of different shapes",
    "testFilePaths": [
      "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js"
    ],
    "number": 99,
    "pdgs": [
      {
        "pdgTitle": "euclideanDistance([[]], [[]])",
        "uniqueTitle": "euclideanDistance([[]], [[]])#11",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 36,
              "index": 309
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 591
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 17,
              "index": 786
            },
            "end": {
              "line": 17,
              "column": 50,
              "index": 819
            }
          }
        }
      },
      {
        "pdgTitle": "euclideanDistance([[]], [[]])",
        "uniqueTitle": "euclideanDistance([[]], [[]])#12",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/euclideanDistance.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 36,
              "index": 309
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 591
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/euclidean-distance/__tests__/euclideanDistance.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 17,
              "index": 907
            },
            "end": {
              "line": 21,
              "column": 51,
              "index": 941
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "factorial",
    "algo": "factorial_factorialRecursive",
    "name": "factorialRecursive should calculate factorial@factorialRecursive.test.js",
    "label": "factorialRecursive should calculate factorial",
    "testNamePattern": "factorialRecursive should calculate factorial",
    "testFilePaths": [
      "src/algorithms/math/factorial/__test__/factorialRecursive.test.js"
    ],
    "number": 100,
    "pdgs": [
      {
        "pdgTitle": "factorialRecursive(0)",
        "uniqueTitle": "factorialRecursive(0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorialRecursive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 109
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 181
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/factorial/__test__/factorialRecursive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 41,
              "index": 140
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 379
            }
          }
        }
      },
      {
        "pdgTitle": "factorialRecursive(1)",
        "uniqueTitle": "factorialRecursive(1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorialRecursive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 109
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 181
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/factorial/__test__/factorialRecursive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 41,
              "index": 140
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 379
            }
          }
        }
      },
      {
        "pdgTitle": "factorialRecursive(5)",
        "uniqueTitle": "factorialRecursive(5)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorialRecursive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 109
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 181
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/factorial/__test__/factorialRecursive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 41,
              "index": 140
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 379
            }
          }
        }
      },
      {
        "pdgTitle": "factorialRecursive(8)",
        "uniqueTitle": "factorialRecursive(8)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorialRecursive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 109
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 181
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/factorial/__test__/factorialRecursive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 41,
              "index": 140
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 379
            }
          }
        }
      },
      {
        "pdgTitle": "factorialRecursive(10)",
        "uniqueTitle": "factorialRecursive(10)#2",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorialRecursive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 109
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 181
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/factorial/__test__/factorialRecursive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 41,
              "index": 140
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 379
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "factorial",
    "algo": "factorial_factorial",
    "name": "factorial should calculate factorial@factorial.test.js",
    "label": "factorial should calculate factorial",
    "testNamePattern": "factorial should calculate factorial",
    "testFilePaths": [
      "src/algorithms/math/factorial/__test__/factorial.test.js"
    ],
    "number": 101,
    "pdgs": [
      {
        "pdgTitle": "factorial(0)",
        "uniqueTitle": "factorial(0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/factorial/__test__/factorial.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 41,
              "index": 113
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 307
            }
          }
        }
      },
      {
        "pdgTitle": "factorial(1)",
        "uniqueTitle": "factorial(1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/factorial/__test__/factorial.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 41,
              "index": 113
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 307
            }
          }
        }
      },
      {
        "pdgTitle": "factorial(5)",
        "uniqueTitle": "factorial(5)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/factorial/__test__/factorial.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 41,
              "index": 113
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 307
            }
          }
        }
      },
      {
        "pdgTitle": "factorial(8)",
        "uniqueTitle": "factorial(8)#3",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/factorial/__test__/factorial.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 41,
              "index": 113
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 307
            }
          }
        }
      },
      {
        "pdgTitle": "factorial(10)",
        "uniqueTitle": "factorial(10)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/factorial/__test__/factorial.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 41,
              "index": 113
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 307
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "fast-powering",
    "algo": "fast-powering_fastPowering",
    "name": "fastPowering should compute power in log(n) time@fastPowering.test.js",
    "label": "fastPowering should compute power in log(n) time",
    "testNamePattern": "fastPowering should compute power in log.n. time",
    "testFilePaths": [
      "src/algorithms/math/fast-powering/__test__/fastPowering.test.js"
    ],
    "number": 102,
    "pdgs": [
      {
        "pdgTitle": "fastPowering(1, 1)",
        "uniqueTitle": "fastPowering(1, 1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(2, 0)",
        "uniqueTitle": "fastPowering(2, 0)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(2, 2)",
        "uniqueTitle": "fastPowering(2, 2)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(2, 3)",
        "uniqueTitle": "fastPowering(2, 3)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(2, 4)",
        "uniqueTitle": "fastPowering(2, 4)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(2, 5)",
        "uniqueTitle": "fastPowering(2, 5)#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(2, 6)",
        "uniqueTitle": "fastPowering(2, 6)#2",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(2, 7)",
        "uniqueTitle": "fastPowering(2, 7)#2",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(2, 8)",
        "uniqueTitle": "fastPowering(2, 8)#2",
        "contextId": 30,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(3, 4)",
        "uniqueTitle": "fastPowering(3, 4)#2",
        "contextId": 35,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(190, 2)",
        "uniqueTitle": "fastPowering(190, 2)#2",
        "contextId": 39,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(11, 5)",
        "uniqueTitle": "fastPowering(11, 5)#2",
        "contextId": 42,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(13, 11)",
        "uniqueTitle": "fastPowering(13, 11)#2",
        "contextId": 46,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(9, 16)",
        "uniqueTitle": "fastPowering(9, 16)#2",
        "contextId": 51,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(16, 16)",
        "uniqueTitle": "fastPowering(16, 16)#2",
        "contextId": 57,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(7, 21)",
        "uniqueTitle": "fastPowering(7, 21)#2",
        "contextId": 63,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "fastPowering(100, 9)",
        "uniqueTitle": "fastPowering(100, 9)#2",
        "contextId": 69,
        "algoLoc": {
          "filePath": "src/algorithms/math/fast-powering/fastPowering.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 50,
              "index": 325
            },
            "end": {
              "line": 30,
              "column": 1,
              "index": 921
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fast-powering/__test__/fastPowering.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 50,
              "index": 131
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 943
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "fibonacci",
    "algo": "fibonacci_fibonacciNthClosedForm",
    "name": "fibonacciClosedForm should throw an error when trying to calculate fibonacci for not allowed positions@fibonacciNthClosedForm.test.js",
    "label": "fibonacciClosedForm should throw an error when trying to calculate fibonacci for not allowed positions",
    "testNamePattern": "fibonacciClosedForm should throw an error when trying to calculate fibonacci for not allowed positions",
    "testFilePaths": [
      "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js"
    ],
    "number": 103,
    "pdgs": [
      {
        "pdgTitle": "fibonacciClosedForm(76)",
        "uniqueTitle": "fibonacciClosedForm(76)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 367
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 890
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 58,
              "index": 266
            },
            "end": {
              "line": 7,
              "column": 5,
              "index": 309
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "fibonacci",
    "algo": "fibonacci_fibonacciNthClosedForm",
    "name": "fibonacciClosedForm should calculate fibonacci correctly@fibonacciNthClosedForm.test.js",
    "label": "fibonacciClosedForm should calculate fibonacci correctly",
    "testNamePattern": "fibonacciClosedForm should calculate fibonacci correctly",
    "testFilePaths": [
      "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js"
    ],
    "number": 104,
    "pdgs": [
      {
        "pdgTitle": "fibonacciClosedForm(1)",
        "uniqueTitle": "fibonacciClosedForm(1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 367
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 890
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 51,
              "index": 438
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1058
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciClosedForm(2)",
        "uniqueTitle": "fibonacciClosedForm(2)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 367
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 890
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 51,
              "index": 438
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1058
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciClosedForm(3)",
        "uniqueTitle": "fibonacciClosedForm(3)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 367
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 890
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 51,
              "index": 438
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1058
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciClosedForm(4)",
        "uniqueTitle": "fibonacciClosedForm(4)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 367
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 890
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 51,
              "index": 438
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1058
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciClosedForm(5)",
        "uniqueTitle": "fibonacciClosedForm(5)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 367
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 890
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 51,
              "index": 438
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1058
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciClosedForm(6)",
        "uniqueTitle": "fibonacciClosedForm(6)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 367
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 890
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 51,
              "index": 438
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1058
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciClosedForm(7)",
        "uniqueTitle": "fibonacciClosedForm(7)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 367
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 890
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 51,
              "index": 438
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1058
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciClosedForm(8)",
        "uniqueTitle": "fibonacciClosedForm(8)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 367
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 890
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 51,
              "index": 438
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1058
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciClosedForm(20)",
        "uniqueTitle": "fibonacciClosedForm(20)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 367
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 890
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 51,
              "index": 438
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1058
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciClosedForm(30)",
        "uniqueTitle": "fibonacciClosedForm(30)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 367
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 890
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 51,
              "index": 438
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1058
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciClosedForm(50)",
        "uniqueTitle": "fibonacciClosedForm(50)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 367
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 890
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 51,
              "index": 438
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1058
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciClosedForm(70)",
        "uniqueTitle": "fibonacciClosedForm(70)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNthClosedForm.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 367
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 890
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNthClosedForm.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 51,
              "index": 438
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1058
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "fibonacci",
    "algo": "fibonacci_fibonacciNth",
    "name": "fibonacciNth should calculate fibonacci correctly@fibonacciNth.test.js",
    "label": "fibonacciNth should calculate fibonacci correctly",
    "testNamePattern": "fibonacciNth should calculate fibonacci correctly",
    "testFilePaths": [
      "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js"
    ],
    "number": 105,
    "pdgs": [
      {
        "pdgTitle": "fibonacciNth(1)",
        "uniqueTitle": "fibonacciNth(1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(2)",
        "uniqueTitle": "fibonacciNth(2)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(3)",
        "uniqueTitle": "fibonacciNth(3)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(4)",
        "uniqueTitle": "fibonacciNth(4)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(5)",
        "uniqueTitle": "fibonacciNth(5)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(6)",
        "uniqueTitle": "fibonacciNth(6)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(7)",
        "uniqueTitle": "fibonacciNth(7)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(8)",
        "uniqueTitle": "fibonacciNth(8)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(20)",
        "uniqueTitle": "fibonacciNth(20)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(30)",
        "uniqueTitle": "fibonacciNth(30)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(50)",
        "uniqueTitle": "fibonacciNth(50)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(70)",
        "uniqueTitle": "fibonacciNth(70)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(71)",
        "uniqueTitle": "fibonacciNth(71)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(72)",
        "uniqueTitle": "fibonacciNth(72)#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(73)",
        "uniqueTitle": "fibonacciNth(73)#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(74)",
        "uniqueTitle": "fibonacciNth(74)#2",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacciNth(75)",
        "uniqueTitle": "fibonacciNth(75)#2",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacciNth.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 40,
              "index": 176
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 489
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacciNth.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 899
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "fibonacci",
    "algo": "fibonacci_fibonacci",
    "name": "fibonacci should calculate fibonacci correctly@fibonacci.test.js",
    "label": "fibonacci should calculate fibonacci correctly",
    "testNamePattern": "fibonacci should calculate fibonacci correctly",
    "testFilePaths": [
      "src/algorithms/math/fibonacci/__test__/fibonacci.test.js"
    ],
    "number": 106,
    "pdgs": [
      {
        "pdgTitle": "fibonacci(1)",
        "uniqueTitle": "fibonacci(1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 37,
              "index": 132
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 523
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 123
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 675
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacci(2)",
        "uniqueTitle": "fibonacci(2)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 37,
              "index": 132
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 523
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 123
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 675
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacci(3)",
        "uniqueTitle": "fibonacci(3)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 37,
              "index": 132
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 523
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 123
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 675
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacci(4)",
        "uniqueTitle": "fibonacci(4)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 37,
              "index": 132
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 523
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 123
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 675
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacci(5)",
        "uniqueTitle": "fibonacci(5)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 37,
              "index": 132
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 523
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 123
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 675
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacci(6)",
        "uniqueTitle": "fibonacci(6)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 37,
              "index": 132
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 523
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 123
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 675
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacci(7)",
        "uniqueTitle": "fibonacci(7)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 37,
              "index": 132
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 523
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 123
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 675
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacci(8)",
        "uniqueTitle": "fibonacci(8)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 37,
              "index": 132
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 523
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 123
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 675
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacci(9)",
        "uniqueTitle": "fibonacci(9)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 37,
              "index": 132
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 523
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 123
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 675
            }
          }
        }
      },
      {
        "pdgTitle": "fibonacci(10)",
        "uniqueTitle": "fibonacci(10)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/fibonacci/fibonacci.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 37,
              "index": 132
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 523
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fibonacci/__test__/fibonacci.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 123
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 675
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "fourier-transform",
    "algo": "fourier-transform_fastFourierTransform",
    "name": "fastFourierTransform should calculate the radix-2 discrete fourier transform #1@fastFourierTransform.test.js",
    "label": "fastFourierTransform should calculate the radix-2 discrete fourier transform #1",
    "testNamePattern": "fastFourierTransform should calculate the radix-2 discrete fourier transform #1",
    "testFilePaths": [
      "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js"
    ],
    "number": 107,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#122",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 35,
              "column": 73,
              "index": 908
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1349
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#123",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 35,
              "column": 73,
              "index": 908
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1349
            }
          }
        }
      },
      {
        "pdgTitle": "fastFourierTransform([{}])",
        "uniqueTitle": "fastFourierTransform([{}])#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/fastFourierTransform.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 56,
              "index": 867
            },
            "end": {
              "line": 84,
              "column": 1,
              "index": 2373
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 35,
              "column": 73,
              "index": 908
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1349
            }
          }
        }
      },
      {
        "pdgTitle": "fastFourierTransform([{}], true)",
        "uniqueTitle": "fastFourierTransform([{}], true)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/fastFourierTransform.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 56,
              "index": 867
            },
            "end": {
              "line": 84,
              "column": 1,
              "index": 2373
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 35,
              "column": 73,
              "index": 908
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1349
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "fourier-transform",
    "algo": "fourier-transform_fastFourierTransform",
    "name": "fastFourierTransform should calculate the radix-2 discrete fourier transform #2@fastFourierTransform.test.js",
    "label": "fastFourierTransform should calculate the radix-2 discrete fourier transform #2",
    "testNamePattern": "fastFourierTransform should calculate the radix-2 discrete fourier transform #2",
    "testFilePaths": [
      "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js"
    ],
    "number": 108,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#124",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 73,
              "index": 1428
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2128
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#125",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 73,
              "index": 1428
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2128
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#126",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 73,
              "index": 1428
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2128
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#127",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 73,
              "index": 1428
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2128
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#128",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 73,
              "index": 1428
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2128
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#129",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 73,
              "index": 1428
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2128
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#130",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 73,
              "index": 1428
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2128
            }
          }
        }
      },
      {
        "pdgTitle": "fastFourierTransform([{},{},{}])",
        "uniqueTitle": "fastFourierTransform([{},{},{}])#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/fastFourierTransform.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 56,
              "index": 867
            },
            "end": {
              "line": 84,
              "column": 1,
              "index": 2373
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 73,
              "index": 1428
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2128
            }
          }
        }
      },
      {
        "pdgTitle": "fastFourierTransform([{},{},{},{}], true)",
        "uniqueTitle": "fastFourierTransform([{},{},{},{}], true)#2",
        "contextId": 75,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/fastFourierTransform.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 56,
              "index": 867
            },
            "end": {
              "line": 84,
              "column": 1,
              "index": 2373
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 73,
              "index": 1428
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2128
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "fourier-transform",
    "algo": "fourier-transform_fastFourierTransform",
    "name": "fastFourierTransform should calculate the radix-2 discrete fourier transform #3@fastFourierTransform.test.js",
    "label": "fastFourierTransform should calculate the radix-2 discrete fourier transform #3",
    "testNamePattern": "fastFourierTransform should calculate the radix-2 discrete fourier transform #3",
    "testFilePaths": [
      "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js"
    ],
    "number": 109,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#131",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#132",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#133",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#134",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#135",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#136",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#137",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#138",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#139",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#140",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#141",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#142",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#143",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#144",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#145",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#146",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#147",
        "contextId": 24,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#148",
        "contextId": 25,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#149",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#150",
        "contextId": 27,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#151",
        "contextId": 28,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#152",
        "contextId": 29,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#153",
        "contextId": 30,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#154",
        "contextId": 31,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#155",
        "contextId": 32,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#156",
        "contextId": 33,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "fastFourierTransform([{},{},{},{},{},{},{},{},{},{}])",
        "uniqueTitle": "fastFourierTransform([{},{},{},{},{},{},{},{},{},{}])#2",
        "contextId": 34,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/fastFourierTransform.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 56,
              "index": 867
            },
            "end": {
              "line": 84,
              "column": 1,
              "index": 2373
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      },
      {
        "pdgTitle": "fastFourierTransform([{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}], true)",
        "uniqueTitle": "fastFourierTransform([{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}], true)#2",
        "contextId": 461,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/fastFourierTransform.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 56,
              "index": 867
            },
            "end": {
              "line": 84,
              "column": 1,
              "index": 2373
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/fastFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 74,
              "column": 73,
              "index": 2207
            },
            "end": {
              "line": 116,
              "column": 3,
              "index": 4490
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "fourier-transform",
    "algo": "fourier-transform_inverseDiscreteFourierTransform",
    "name": "inverseDiscreteFourierTransform should calculate output signal out of input frequencies@inverseDiscreteFourierTransform.test.js",
    "label": "inverseDiscreteFourierTransform should calculate output signal out of input frequencies",
    "testNamePattern": "inverseDiscreteFourierTransform should calculate output signal out of input frequencies",
    "testFilePaths": [
      "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js"
    ],
    "number": 110,
    "pdgs": [
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#157",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "inverseDiscreteFourierTransform([{}])",
        "uniqueTitle": "inverseDiscreteFourierTransform([{}])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 69,
              "index": 592
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1881
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#158",
        "contextId": 24,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#159",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "inverseDiscreteFourierTransform([{},{}])",
        "uniqueTitle": "inverseDiscreteFourierTransform([{},{}])#3",
        "contextId": 27,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 69,
              "index": 592
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1881
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#160",
        "contextId": 62,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#161",
        "contextId": 64,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "inverseDiscreteFourierTransform([{},{}])",
        "uniqueTitle": "inverseDiscreteFourierTransform([{},{}])#4",
        "contextId": 65,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 69,
              "index": 592
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1881
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#162",
        "contextId": 100,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#163",
        "contextId": 102,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#164",
        "contextId": 104,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "inverseDiscreteFourierTransform([{},{},{}])",
        "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{}])#2",
        "contextId": 105,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 69,
              "index": 592
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1881
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#165",
        "contextId": 177,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#166",
        "contextId": 179,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#167",
        "contextId": 181,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#168",
        "contextId": 183,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
        "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#9",
        "contextId": 184,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 69,
              "index": 592
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1881
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#169",
        "contextId": 307,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#170",
        "contextId": 309,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#171",
        "contextId": 311,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#172",
        "contextId": 313,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
        "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#10",
        "contextId": 314,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 69,
              "index": 592
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1881
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#173",
        "contextId": 437,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#174",
        "contextId": 439,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#175",
        "contextId": 441,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#176",
        "contextId": 443,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
        "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#11",
        "contextId": 444,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 69,
              "index": 592
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1881
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#177",
        "contextId": 567,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#178",
        "contextId": 569,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#179",
        "contextId": 571,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#180",
        "contextId": 573,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
        "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#12",
        "contextId": 574,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 69,
              "index": 592
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1881
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#181",
        "contextId": 697,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#182",
        "contextId": 699,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#183",
        "contextId": 701,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#184",
        "contextId": 703,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
        "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#13",
        "contextId": 704,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 69,
              "index": 592
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1881
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#185",
        "contextId": 827,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#186",
        "contextId": 829,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#187",
        "contextId": 831,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#188",
        "contextId": 833,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
        "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#14",
        "contextId": 834,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 69,
              "index": 592
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1881
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#189",
        "contextId": 957,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#190",
        "contextId": 959,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#191",
        "contextId": 961,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#192",
        "contextId": 963,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
        "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#15",
        "contextId": 964,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 69,
              "index": 592
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1881
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#193",
        "contextId": 1087,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#194",
        "contextId": 1089,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#195",
        "contextId": 1091,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.constructor({re,im})",
        "uniqueTitle": "ComplexNumber.constructor({re,im})#196",
        "contextId": 1093,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 16,
              "index": 241
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 526
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      },
      {
        "pdgTitle": "inverseDiscreteFourierTransform([{},{},{},{}])",
        "uniqueTitle": "inverseDiscreteFourierTransform([{},{},{},{}])#16",
        "contextId": 1094,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/inverseDiscreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 69,
              "index": 592
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1881
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/inverseDiscreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 70,
              "index": 254
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 341
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "fourier-transform",
    "algo": "fourier-transform_discreteFourierTransform",
    "name": "discreteFourierTransform should split signal into frequencies@discreteFourierTransform.test.js",
    "label": "discreteFourierTransform should split signal into frequencies",
    "testNamePattern": "discreteFourierTransform should split signal into frequencies",
    "testFilePaths": [
      "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js"
    ],
    "number": 111,
    "pdgs": [
      {
        "pdgTitle": "dft([1])",
        "uniqueTitle": "dft([1])#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 22,
              "column": 45,
              "index": 990
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2796
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#61",
        "contextId": 32,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "dft([1,0])",
        "uniqueTitle": "dft([1,0])#2",
        "contextId": 39,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 22,
              "column": 45,
              "index": 990
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2796
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#62",
        "contextId": 95,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#63",
        "contextId": 100,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "dft([2,0])",
        "uniqueTitle": "dft([2,0])#2",
        "contextId": 107,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 22,
              "column": 45,
              "index": 990
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2796
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#64",
        "contextId": 163,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#65",
        "contextId": 168,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "dft([1,0,0])",
        "uniqueTitle": "dft([1,0,0])#2",
        "contextId": 176,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 22,
              "column": 45,
              "index": 990
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2796
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#66",
        "contextId": 283,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#67",
        "contextId": 288,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#68",
        "contextId": 293,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "dft([1,0,0,0])",
        "uniqueTitle": "dft([1,0,0,0])#2",
        "contextId": 302,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 22,
              "column": 45,
              "index": 990
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2796
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#69",
        "contextId": 476,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#70",
        "contextId": 481,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#71",
        "contextId": 486,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#72",
        "contextId": 491,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "dft([0,1,0,0])",
        "uniqueTitle": "dft([0,1,0,0])#2",
        "contextId": 500,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 22,
              "column": 45,
              "index": 990
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2796
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#73",
        "contextId": 674,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#74",
        "contextId": 679,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#75",
        "contextId": 684,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#76",
        "contextId": 689,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "dft([0,0,1,0])",
        "uniqueTitle": "dft([0,0,1,0])#2",
        "contextId": 698,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 22,
              "column": 45,
              "index": 990
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2796
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#77",
        "contextId": 872,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#78",
        "contextId": 877,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#79",
        "contextId": 882,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#80",
        "contextId": 887,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "dft([0,0,0,2])",
        "uniqueTitle": "dft([0,0,0,2])#2",
        "contextId": 896,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 22,
              "column": 45,
              "index": 990
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2796
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#81",
        "contextId": 1070,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#82",
        "contextId": 1075,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#83",
        "contextId": 1080,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#84",
        "contextId": 1085,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "dft([0,1,0,2])",
        "uniqueTitle": "dft([0,1,0,2])#2",
        "contextId": 1094,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 22,
              "column": 45,
              "index": 990
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2796
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#85",
        "contextId": 1268,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#86",
        "contextId": 1273,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#87",
        "contextId": 1278,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#88",
        "contextId": 1283,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "dft([4,1,0,2])",
        "uniqueTitle": "dft([4,1,0,2])#2",
        "contextId": 1292,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 22,
              "column": 45,
              "index": 990
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2796
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#89",
        "contextId": 1466,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#90",
        "contextId": 1471,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#91",
        "contextId": 1476,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#92",
        "contextId": 1481,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "dft([4,1,-3,2])",
        "uniqueTitle": "dft([4,1,-3,2])#2",
        "contextId": 1490,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 22,
              "column": 45,
              "index": 990
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2796
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#93",
        "contextId": 1664,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#94",
        "contextId": 1669,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#95",
        "contextId": 1674,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#96",
        "contextId": 1679,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "dft([1,2,3,4])",
        "uniqueTitle": "dft([1,2,3,4])#2",
        "contextId": 1688,
        "algoLoc": {
          "filePath": "src/algorithms/math/fourier-transform/discreteFourierTransform.js",
          "loc": {
            "start": {
              "line": 22,
              "column": 45,
              "index": 990
            },
            "end": {
              "line": 73,
              "column": 1,
              "index": 2796
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#97",
        "contextId": 1862,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#98",
        "contextId": 1867,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#99",
        "contextId": 1872,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      },
      {
        "pdgTitle": "ComplexNumber.getPolarForm(false)",
        "uniqueTitle": "ComplexNumber.getPolarForm(false)#100",
        "contextId": 1877,
        "algoLoc": {
          "filePath": "src/algorithms/math/complex-number/ComplexNumber.js",
          "loc": {
            "start": {
              "line": 147,
              "column": 17,
              "index": 4006
            },
            "end": {
              "line": 154,
              "column": 3,
              "index": 4209
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/fourier-transform/__test__/discreteFourierTransform.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 214
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 293
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "horner-method",
    "algo": "horner-method_hornerMethod",
    "name": "hornerMethod should evaluate the polynomial for the specified value of x correctly@hornerMethod.test.js",
    "label": "hornerMethod should evaluate the polynomial for the specified value of x correctly",
    "testNamePattern": "hornerMethod should evaluate the polynomial for the specified value of x correctly",
    "testFilePaths": [
      "src/algorithms/math/horner-method/__test__/hornerMethod.test.js"
    ],
    "number": 112,
    "pdgs": [
      {
        "pdgTitle": "hornerMethod([8], 0.1)",
        "uniqueTitle": "hornerMethod([8], 0.1)#3",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 291
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 427
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 84,
              "index": 216
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 866
            }
          }
        }
      },
      {
        "pdgTitle": "hornerMethod([2,4,2,5], 0.555)",
        "uniqueTitle": "hornerMethod([2,4,2,5], 0.555)#3",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 291
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 427
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 84,
              "index": 216
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 866
            }
          }
        }
      },
      {
        "pdgTitle": "hornerMethod([2,4,2,5], 0.75)",
        "uniqueTitle": "hornerMethod([2,4,2,5], 0.75)#3",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 291
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 427
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 84,
              "index": 216
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 866
            }
          }
        }
      },
      {
        "pdgTitle": "hornerMethod([1,1,1,1,1], 1.75)",
        "uniqueTitle": "hornerMethod([1,1,1,1,1], 1.75)#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 291
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 427
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 84,
              "index": 216
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 866
            }
          }
        }
      },
      {
        "pdgTitle": "hornerMethod([15,3.5,0,2,1.42,0.41], 0.315)",
        "uniqueTitle": "hornerMethod([15,3.5,0,2,1.42,0.41], 0.315)#2",
        "contextId": 24,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 291
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 427
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 84,
              "index": 216
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 866
            }
          }
        }
      },
      {
        "pdgTitle": "hornerMethod([0,0,2.77,1.42,0.41], 1.35)",
        "uniqueTitle": "hornerMethod([0,0,2.77,1.42,0.41], 1.35)#2",
        "contextId": 31,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 291
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 427
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 84,
              "index": 216
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 866
            }
          }
        }
      },
      {
        "pdgTitle": "hornerMethod([0,0,2.77,1.42,2.3311], 1.35)",
        "uniqueTitle": "hornerMethod([0,0,2.77,1.42,2.3311], 1.35)#2",
        "contextId": 37,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 291
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 427
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 84,
              "index": 216
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 866
            }
          }
        }
      },
      {
        "pdgTitle": "hornerMethod([2,0,0,5.757,5.31412,12.3213], 3.141)",
        "uniqueTitle": "hornerMethod([2,0,0,5.757,5.31412,12.3213], 3.141)#2",
        "contextId": 43,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 291
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 427
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 84,
              "index": 216
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 866
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "horner-method",
    "algo": "horner-method_hornerMethod",
    "name": "hornerMethod should evaluate the same polynomial value as classical approach@hornerMethod.test.js",
    "label": "hornerMethod should evaluate the same polynomial value as classical approach",
    "testNamePattern": "hornerMethod should evaluate the same polynomial value as classical approach",
    "testFilePaths": [
      "src/algorithms/math/horner-method/__test__/hornerMethod.test.js"
    ],
    "number": 113,
    "pdgs": [
      {
        "pdgTitle": "hornerMethod([8], 0.1)",
        "uniqueTitle": "hornerMethod([8], 0.1)#4",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 291
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 427
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 78,
              "index": 950
            },
            "end": {
              "line": 32,
              "column": 3,
              "index": 1233
            }
          }
        }
      },
      {
        "pdgTitle": "classicPolynome([8], 0.1)",
        "uniqueTitle": "classicPolynome([8], 0.1)#3",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 317
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 495
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 78,
              "index": 950
            },
            "end": {
              "line": 32,
              "column": 3,
              "index": 1233
            }
          }
        }
      },
      {
        "pdgTitle": "hornerMethod([2,4,2,5], 0.555)",
        "uniqueTitle": "hornerMethod([2,4,2,5], 0.555)#4",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 291
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 427
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 78,
              "index": 950
            },
            "end": {
              "line": 32,
              "column": 3,
              "index": 1233
            }
          }
        }
      },
      {
        "pdgTitle": "classicPolynome([2,4,2,5], 0.555)",
        "uniqueTitle": "classicPolynome([2,4,2,5], 0.555)#3",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 317
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 495
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 78,
              "index": 950
            },
            "end": {
              "line": 32,
              "column": 3,
              "index": 1233
            }
          }
        }
      },
      {
        "pdgTitle": "hornerMethod([2,4,2,5], 0.75)",
        "uniqueTitle": "hornerMethod([2,4,2,5], 0.75)#4",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/hornerMethod.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 291
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 427
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 78,
              "index": 950
            },
            "end": {
              "line": 32,
              "column": 3,
              "index": 1233
            }
          }
        }
      },
      {
        "pdgTitle": "classicPolynome([2,4,2,5], 0.75)",
        "uniqueTitle": "classicPolynome([2,4,2,5], 0.75)#3",
        "contextId": 25,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 317
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 495
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/hornerMethod.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 78,
              "index": 950
            },
            "end": {
              "line": 32,
              "column": 3,
              "index": 1233
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "horner-method",
    "algo": "horner-method_classicPolynome",
    "name": "classicPolynome should evaluate the polynomial for the specified value of x correctly@classicPolynome.test.js",
    "label": "classicPolynome should evaluate the polynomial for the specified value of x correctly",
    "testNamePattern": "classicPolynome should evaluate the polynomial for the specified value of x correctly",
    "testFilePaths": [
      "src/algorithms/math/horner-method/__test__/classicPolynome.test.js"
    ],
    "number": 114,
    "pdgs": [
      {
        "pdgTitle": "classicPolynome([8], 0.1)",
        "uniqueTitle": "classicPolynome([8], 0.1)#4",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 317
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 495
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 174
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 849
            }
          }
        }
      },
      {
        "pdgTitle": "classicPolynome([2,4,2,5], 0.555)",
        "uniqueTitle": "classicPolynome([2,4,2,5], 0.555)#4",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 317
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 495
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 174
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 849
            }
          }
        }
      },
      {
        "pdgTitle": "classicPolynome([2,4,2,5], 0.75)",
        "uniqueTitle": "classicPolynome([2,4,2,5], 0.75)#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 317
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 495
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 174
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 849
            }
          }
        }
      },
      {
        "pdgTitle": "classicPolynome([1,1,1,1,1], 1.75)",
        "uniqueTitle": "classicPolynome([1,1,1,1,1], 1.75)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 317
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 495
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 174
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 849
            }
          }
        }
      },
      {
        "pdgTitle": "classicPolynome([15,3.5,0,2,1.42,0.41], 0.315)",
        "uniqueTitle": "classicPolynome([15,3.5,0,2,1.42,0.41], 0.315)#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 317
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 495
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 174
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 849
            }
          }
        }
      },
      {
        "pdgTitle": "classicPolynome([0,0,2.77,1.42,0.41], 1.35)",
        "uniqueTitle": "classicPolynome([0,0,2.77,1.42,0.41], 1.35)#2",
        "contextId": 30,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 317
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 495
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 174
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 849
            }
          }
        }
      },
      {
        "pdgTitle": "classicPolynome([0,0,2.77,1.42,2.3311], 1.35)",
        "uniqueTitle": "classicPolynome([0,0,2.77,1.42,2.3311], 1.35)#2",
        "contextId": 36,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 317
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 495
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 174
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 849
            }
          }
        }
      },
      {
        "pdgTitle": "classicPolynome([2,0,0,5.757,5.31412,12.3213], 3.141)",
        "uniqueTitle": "classicPolynome([2,0,0,5.757,5.31412,12.3213], 3.141)#2",
        "contextId": 42,
        "algoLoc": {
          "filePath": "src/algorithms/math/horner-method/classicPolynome.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 317
            },
            "end": {
              "line": 15,
              "column": 1,
              "index": 495
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/horner-method/__test__/classicPolynome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 174
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 849
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "integer-partition",
    "algo": "integer-partition_integerPartition",
    "name": "integerPartition should partition the number@integerPartition.test.js",
    "label": "integerPartition should partition the number",
    "testNamePattern": "integerPartition should partition the number",
    "testFilePaths": [
      "src/algorithms/math/integer-partition/__test__/integerPartition.test.js"
    ],
    "number": 115,
    "pdgs": [
      {
        "pdgTitle": "integerPartition(1)",
        "uniqueTitle": "integerPartition(1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 49,
              "index": 107
            },
            "end": {
              "line": 63,
              "column": 1,
              "index": 2770
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 135
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "integerPartition(2)",
        "uniqueTitle": "integerPartition(2)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 49,
              "index": 107
            },
            "end": {
              "line": 63,
              "column": 1,
              "index": 2770
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 135
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "integerPartition(3)",
        "uniqueTitle": "integerPartition(3)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 49,
              "index": 107
            },
            "end": {
              "line": 63,
              "column": 1,
              "index": 2770
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 135
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "integerPartition(4)",
        "uniqueTitle": "integerPartition(4)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 49,
              "index": 107
            },
            "end": {
              "line": 63,
              "column": 1,
              "index": 2770
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 135
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "integerPartition(5)",
        "uniqueTitle": "integerPartition(5)#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 49,
              "index": 107
            },
            "end": {
              "line": 63,
              "column": 1,
              "index": 2770
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 135
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "integerPartition(6)",
        "uniqueTitle": "integerPartition(6)#2",
        "contextId": 30,
        "algoLoc": {
          "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 49,
              "index": 107
            },
            "end": {
              "line": 63,
              "column": 1,
              "index": 2770
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 135
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "integerPartition(7)",
        "uniqueTitle": "integerPartition(7)#2",
        "contextId": 38,
        "algoLoc": {
          "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 49,
              "index": 107
            },
            "end": {
              "line": 63,
              "column": 1,
              "index": 2770
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 135
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "integerPartition(8)",
        "uniqueTitle": "integerPartition(8)#2",
        "contextId": 47,
        "algoLoc": {
          "filePath": "src/algorithms/math/integer-partition/integerPartition.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 49,
              "index": 107
            },
            "end": {
              "line": 63,
              "column": 1,
              "index": 2770
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/integer-partition/__test__/integerPartition.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 42,
              "index": 135
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 480
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "is-power-of-two",
    "algo": "is-power-of-two_isPowerOfTwoBitwise",
    "name": "isPowerOfTwoBitwise should check if the number is made by multiplying twos@isPowerOfTwoBitwise.test.js",
    "label": "isPowerOfTwoBitwise should check if the number is made by multiplying twos",
    "testNamePattern": "isPowerOfTwoBitwise should check if the number is made by multiplying twos",
    "testFilePaths": [
      "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js"
    ],
    "number": 116,
    "pdgs": [
      {
        "pdgTitle": "isPowerOfTwoBitwise(-1)",
        "uniqueTitle": "isPowerOfTwoBitwise(-1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(0)",
        "uniqueTitle": "isPowerOfTwoBitwise(0)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(1)",
        "uniqueTitle": "isPowerOfTwoBitwise(1)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(2)",
        "uniqueTitle": "isPowerOfTwoBitwise(2)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(3)",
        "uniqueTitle": "isPowerOfTwoBitwise(3)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(4)",
        "uniqueTitle": "isPowerOfTwoBitwise(4)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(5)",
        "uniqueTitle": "isPowerOfTwoBitwise(5)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(6)",
        "uniqueTitle": "isPowerOfTwoBitwise(6)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(7)",
        "uniqueTitle": "isPowerOfTwoBitwise(7)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(8)",
        "uniqueTitle": "isPowerOfTwoBitwise(8)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(10)",
        "uniqueTitle": "isPowerOfTwoBitwise(10)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(12)",
        "uniqueTitle": "isPowerOfTwoBitwise(12)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(16)",
        "uniqueTitle": "isPowerOfTwoBitwise(16)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(31)",
        "uniqueTitle": "isPowerOfTwoBitwise(31)#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(64)",
        "uniqueTitle": "isPowerOfTwoBitwise(64)#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(1024)",
        "uniqueTitle": "isPowerOfTwoBitwise(1024)#2",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwoBitwise(1023)",
        "uniqueTitle": "isPowerOfTwoBitwise(1023)#2",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwoBitwise.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 52,
              "index": 111
            },
            "end": {
              "line": 26,
              "column": 1,
              "index": 699
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwoBitwise.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 1015
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "is-power-of-two",
    "algo": "is-power-of-two_isPowerOfTwo",
    "name": "isPowerOfTwo should check if the number is made by multiplying twos@isPowerOfTwo.test.js",
    "label": "isPowerOfTwo should check if the number is made by multiplying twos",
    "testNamePattern": "isPowerOfTwo should check if the number is made by multiplying twos",
    "testFilePaths": [
      "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js"
    ],
    "number": 117,
    "pdgs": [
      {
        "pdgTitle": "isPowerOfTwo(-1)",
        "uniqueTitle": "isPowerOfTwo(-1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(0)",
        "uniqueTitle": "isPowerOfTwo(0)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(1)",
        "uniqueTitle": "isPowerOfTwo(1)#4",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(2)",
        "uniqueTitle": "isPowerOfTwo(2)#4",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(3)",
        "uniqueTitle": "isPowerOfTwo(3)#4",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(4)",
        "uniqueTitle": "isPowerOfTwo(4)#4",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(5)",
        "uniqueTitle": "isPowerOfTwo(5)#4",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(6)",
        "uniqueTitle": "isPowerOfTwo(6)#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(7)",
        "uniqueTitle": "isPowerOfTwo(7)#4",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(8)",
        "uniqueTitle": "isPowerOfTwo(8)#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(10)",
        "uniqueTitle": "isPowerOfTwo(10)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(12)",
        "uniqueTitle": "isPowerOfTwo(12)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(16)",
        "uniqueTitle": "isPowerOfTwo(16)#4",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(31)",
        "uniqueTitle": "isPowerOfTwo(31)#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(64)",
        "uniqueTitle": "isPowerOfTwo(64)#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(1024)",
        "uniqueTitle": "isPowerOfTwo(1024)#2",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      },
      {
        "pdgTitle": "isPowerOfTwo(1023)",
        "uniqueTitle": "isPowerOfTwo(1023)#2",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/isPowerOfTwo.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 45,
              "index": 104
            },
            "end": {
              "line": 25,
              "column": 1,
              "index": 596
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/is-power-of-two/__test__/isPowerOfTwo.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 150
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 875
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "least-common-multiple",
    "algo": "least-common-multiple_leastCommonMultiple",
    "name": "leastCommonMultiple should find least common multiple@leastCommonMultiple.test.js",
    "label": "leastCommonMultiple should find least common multiple",
    "testNamePattern": "leastCommonMultiple should find least common multiple",
    "testFilePaths": [
      "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js"
    ],
    "number": 118,
    "pdgs": [
      {
        "pdgTitle": "leastCommonMultiple(0, 0)",
        "uniqueTitle": "leastCommonMultiple(0, 0)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 50,
              "index": 206
            },
            "end": {
              "line": 11,
              "column": 1,
              "index": 289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 150
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 759
            }
          }
        }
      },
      {
        "pdgTitle": "leastCommonMultiple(1, 0)",
        "uniqueTitle": "leastCommonMultiple(1, 0)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 50,
              "index": 206
            },
            "end": {
              "line": 11,
              "column": 1,
              "index": 289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 150
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 759
            }
          }
        }
      },
      {
        "pdgTitle": "leastCommonMultiple(0, 1)",
        "uniqueTitle": "leastCommonMultiple(0, 1)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 50,
              "index": 206
            },
            "end": {
              "line": 11,
              "column": 1,
              "index": 289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 150
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 759
            }
          }
        }
      },
      {
        "pdgTitle": "leastCommonMultiple(4, 6)",
        "uniqueTitle": "leastCommonMultiple(4, 6)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 50,
              "index": 206
            },
            "end": {
              "line": 11,
              "column": 1,
              "index": 289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 150
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 759
            }
          }
        }
      },
      {
        "pdgTitle": "leastCommonMultiple(6, 21)",
        "uniqueTitle": "leastCommonMultiple(6, 21)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 50,
              "index": 206
            },
            "end": {
              "line": 11,
              "column": 1,
              "index": 289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 150
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 759
            }
          }
        }
      },
      {
        "pdgTitle": "leastCommonMultiple(7, 2)",
        "uniqueTitle": "leastCommonMultiple(7, 2)#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 50,
              "index": 206
            },
            "end": {
              "line": 11,
              "column": 1,
              "index": 289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 150
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 759
            }
          }
        }
      },
      {
        "pdgTitle": "leastCommonMultiple(3, 5)",
        "uniqueTitle": "leastCommonMultiple(3, 5)#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 50,
              "index": 206
            },
            "end": {
              "line": 11,
              "column": 1,
              "index": 289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 150
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 759
            }
          }
        }
      },
      {
        "pdgTitle": "leastCommonMultiple(7, 3)",
        "uniqueTitle": "leastCommonMultiple(7, 3)#2",
        "contextId": 29,
        "algoLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 50,
              "index": 206
            },
            "end": {
              "line": 11,
              "column": 1,
              "index": 289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 150
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 759
            }
          }
        }
      },
      {
        "pdgTitle": "leastCommonMultiple(1000000, 2)",
        "uniqueTitle": "leastCommonMultiple(1000000, 2)#2",
        "contextId": 33,
        "algoLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 50,
              "index": 206
            },
            "end": {
              "line": 11,
              "column": 1,
              "index": 289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 150
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 759
            }
          }
        }
      },
      {
        "pdgTitle": "leastCommonMultiple(-9, -18)",
        "uniqueTitle": "leastCommonMultiple(-9, -18)#2",
        "contextId": 36,
        "algoLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 50,
              "index": 206
            },
            "end": {
              "line": 11,
              "column": 1,
              "index": 289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 150
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 759
            }
          }
        }
      },
      {
        "pdgTitle": "leastCommonMultiple(-7, -9)",
        "uniqueTitle": "leastCommonMultiple(-7, -9)#2",
        "contextId": 40,
        "algoLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 50,
              "index": 206
            },
            "end": {
              "line": 11,
              "column": 1,
              "index": 289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 150
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 759
            }
          }
        }
      },
      {
        "pdgTitle": "leastCommonMultiple(-7, 9)",
        "uniqueTitle": "leastCommonMultiple(-7, 9)#2",
        "contextId": 46,
        "algoLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/leastCommonMultiple.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 50,
              "index": 206
            },
            "end": {
              "line": 11,
              "column": 1,
              "index": 289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/least-common-multiple/__test__/leastCommonMultiple.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 150
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 759
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "liu-hui",
    "algo": "liu-hui_liuHui",
    "name": "liuHui should calculate π based on 12-gon@liuHui.test.js",
    "label": "liuHui should calculate π based on 12-gon",
    "testNamePattern": "liuHui should calculate . based on 12-gon",
    "testFilePaths": [
      "src/algorithms/math/liu-hui/__test__/liuHui.test.js"
    ],
    "number": 119,
    "pdgs": [
      {
        "pdgTitle": "liuHui(1)",
        "uniqueTitle": "liuHui(1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/liu-hui/liuHui.js",
          "loc": {
            "start": {
              "line": 46,
              "column": 33,
              "index": 1350
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1803
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/liu-hui/__test__/liuHui.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 49,
              "index": 112
            },
            "end": {
              "line": 6,
              "column": 3,
              "index": 150
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "liu-hui",
    "algo": "liu-hui_liuHui",
    "name": "liuHui should calculate π based on 24-gon@liuHui.test.js",
    "label": "liuHui should calculate π based on 24-gon",
    "testNamePattern": "liuHui should calculate . based on 24-gon",
    "testFilePaths": [
      "src/algorithms/math/liu-hui/__test__/liuHui.test.js"
    ],
    "number": 120,
    "pdgs": [
      {
        "pdgTitle": "liuHui(2)",
        "uniqueTitle": "liuHui(2)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/liu-hui/liuHui.js",
          "loc": {
            "start": {
              "line": 46,
              "column": 33,
              "index": 1350
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1803
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/liu-hui/__test__/liuHui.test.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 49,
              "index": 205
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 259
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "liu-hui",
    "algo": "liu-hui_liuHui",
    "name": "liuHui should calculate π based on 6144-gon@liuHui.test.js",
    "label": "liuHui should calculate π based on 6144-gon",
    "testNamePattern": "liuHui should calculate . based on 6144-gon",
    "testFilePaths": [
      "src/algorithms/math/liu-hui/__test__/liuHui.test.js"
    ],
    "number": 121,
    "pdgs": [
      {
        "pdgTitle": "liuHui(10)",
        "uniqueTitle": "liuHui(10)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/liu-hui/liuHui.js",
          "loc": {
            "start": {
              "line": 46,
              "column": 33,
              "index": 1350
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1803
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/liu-hui/__test__/liuHui.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 51,
              "index": 316
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 372
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "liu-hui",
    "algo": "liu-hui_liuHui",
    "name": "liuHui should calculate π based on 201326592-gon@liuHui.test.js",
    "label": "liuHui should calculate π based on 201326592-gon",
    "testNamePattern": "liuHui should calculate . based on 201326592-gon",
    "testFilePaths": [
      "src/algorithms/math/liu-hui/__test__/liuHui.test.js"
    ],
    "number": 122,
    "pdgs": [
      {
        "pdgTitle": "liuHui(25)",
        "uniqueTitle": "liuHui(25)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/liu-hui/liuHui.js",
          "loc": {
            "start": {
              "line": 46,
              "column": 33,
              "index": 1350
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1803
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/liu-hui/__test__/liuHui.test.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 56,
              "index": 434
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 489
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should throw when trying to add matrices of invalid shapes@Matrix.test.js",
    "label": "Matrix should throw when trying to add matrices of invalid shapes",
    "testNamePattern": "Matrix should throw when trying to add matrices of invalid shapes",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 123,
    "pdgs": [
      {
        "pdgTitle": "dot([0], [1])",
        "uniqueTitle": "dot([0], [1])#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 122,
              "column": 29,
              "index": 2817
            },
            "end": {
              "line": 149,
              "column": 1,
              "index": 3513
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 17,
              "index": 159
            },
            "end": {
              "line": 5,
              "column": 35,
              "index": 177
            }
          }
        }
      },
      {
        "pdgTitle": "dot([[]], [1])",
        "uniqueTitle": "dot([[]], [1])#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 122,
              "column": 29,
              "index": 2817
            },
            "end": {
              "line": 149,
              "column": 1,
              "index": 3513
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 17,
              "index": 236
            },
            "end": {
              "line": 6,
              "column": 37,
              "index": 256
            }
          }
        }
      },
      {
        "pdgTitle": "dot([[]], [[]])",
        "uniqueTitle": "dot([[]], [[]])#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 122,
              "column": 29,
              "index": 2817
            },
            "end": {
              "line": 149,
              "column": 1,
              "index": 3513
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 17,
              "index": 315
            },
            "end": {
              "line": 7,
              "column": 41,
              "index": 339
            }
          }
        }
      },
      {
        "pdgTitle": "dot([[]], [[],[]])",
        "uniqueTitle": "dot([[]], [[],[]])#2",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 122,
              "column": 29,
              "index": 2817
            },
            "end": {
              "line": 149,
              "column": 1,
              "index": 3513
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 10,
              "column": 17,
              "index": 416
            },
            "end": {
              "line": 10,
              "column": 44,
              "index": 443
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should calculate matrices dimensions@Matrix.test.js",
    "label": "Matrix should calculate matrices dimensions",
    "testNamePattern": "Matrix should calculate matrices dimensions",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 124,
    "pdgs": [
      {
        "pdgTitle": "shape([])",
        "uniqueTitle": "shape([])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 51,
              "index": 589
            },
            "end": {
              "line": 83,
              "column": 3,
              "index": 1799
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[]])",
        "uniqueTitle": "shape([[]])#5",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 51,
              "index": 589
            },
            "end": {
              "line": 83,
              "column": 3,
              "index": 1799
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[]])",
        "uniqueTitle": "shape([[]])#6",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 51,
              "index": 589
            },
            "end": {
              "line": 83,
              "column": 3,
              "index": 1799
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[]])",
        "uniqueTitle": "shape([[]])#7",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 51,
              "index": 589
            },
            "end": {
              "line": 83,
              "column": 3,
              "index": 1799
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[],[]])",
        "uniqueTitle": "shape([[],[]])#6",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 51,
              "index": 589
            },
            "end": {
              "line": 83,
              "column": 3,
              "index": 1799
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[],[]])",
        "uniqueTitle": "shape([[],[]])#7",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 51,
              "index": 589
            },
            "end": {
              "line": 83,
              "column": 3,
              "index": 1799
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[],[],[]])",
        "uniqueTitle": "shape([[],[],[]])#6",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 51,
              "index": 589
            },
            "end": {
              "line": 83,
              "column": 3,
              "index": 1799
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[],[],[]])",
        "uniqueTitle": "shape([[],[],[]])#7",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 51,
              "index": 589
            },
            "end": {
              "line": 83,
              "column": 3,
              "index": 1799
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[],[],[]])",
        "uniqueTitle": "shape([[],[],[]])#8",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 51,
              "index": 589
            },
            "end": {
              "line": 83,
              "column": 3,
              "index": 1799
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[],[],[]])",
        "uniqueTitle": "shape([[],[],[]])#9",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 51,
              "index": 589
            },
            "end": {
              "line": 83,
              "column": 3,
              "index": 1799
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[],[],[]])",
        "uniqueTitle": "shape([[],[],[]])#10",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 51,
              "index": 589
            },
            "end": {
              "line": 83,
              "column": 3,
              "index": 1799
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should generate the matrix of zeros@Matrix.test.js",
    "label": "Matrix should generate the matrix of zeros",
    "testNamePattern": "Matrix should generate the matrix of zeros",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 125,
    "pdgs": [
      {
        "pdgTitle": "zeros([1,0])",
        "uniqueTitle": "zeros([1,0])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 112,
              "column": 33,
              "index": 2649
            },
            "end": {
              "line": 114,
              "column": 1,
              "index": 2690
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 85,
              "column": 50,
              "index": 1855
            },
            "end": {
              "line": 103,
              "column": 3,
              "index": 2249
            }
          }
        }
      },
      {
        "pdgTitle": "zeros([1,1])",
        "uniqueTitle": "zeros([1,1])#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 112,
              "column": 33,
              "index": 2649
            },
            "end": {
              "line": 114,
              "column": 1,
              "index": 2690
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 85,
              "column": 50,
              "index": 1855
            },
            "end": {
              "line": 103,
              "column": 3,
              "index": 2249
            }
          }
        }
      },
      {
        "pdgTitle": "zeros([1,3])",
        "uniqueTitle": "zeros([1,3])#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 112,
              "column": 33,
              "index": 2649
            },
            "end": {
              "line": 114,
              "column": 1,
              "index": 2690
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 85,
              "column": 50,
              "index": 1855
            },
            "end": {
              "line": 103,
              "column": 3,
              "index": 2249
            }
          }
        }
      },
      {
        "pdgTitle": "zeros([3,3])",
        "uniqueTitle": "zeros([3,3])#2",
        "contextId": 25,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 112,
              "column": 33,
              "index": 2649
            },
            "end": {
              "line": 114,
              "column": 1,
              "index": 2690
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 85,
              "column": 50,
              "index": 1855
            },
            "end": {
              "line": 103,
              "column": 3,
              "index": 2249
            }
          }
        }
      },
      {
        "pdgTitle": "zeros([3,3,1])",
        "uniqueTitle": "zeros([3,3,1])#2",
        "contextId": 49,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 112,
              "column": 33,
              "index": 2649
            },
            "end": {
              "line": 114,
              "column": 1,
              "index": 2690
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 85,
              "column": 50,
              "index": 1855
            },
            "end": {
              "line": 103,
              "column": 3,
              "index": 2249
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should generate the matrix with custom values@Matrix.test.js",
    "label": "Matrix should generate the matrix with custom values",
    "testNamePattern": "Matrix should generate the matrix with custom values",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 126,
    "pdgs": [
      {
        "pdgTitle": "generate([1,0], ƒ (anonymous))",
        "uniqueTitle": "generate([1,0], ƒ (anonymous))#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 82,
              "column": 42,
              "index": 1835
            },
            "end": {
              "line": 104,
              "column": 1,
              "index": 2473
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 105,
              "column": 60,
              "index": 2315
            },
            "end": {
              "line": 123,
              "column": 3,
              "index": 2769
            }
          }
        }
      },
      {
        "pdgTitle": "generate([1,1], ƒ (anonymous))",
        "uniqueTitle": "generate([1,1], ƒ (anonymous))#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 82,
              "column": 42,
              "index": 1835
            },
            "end": {
              "line": 104,
              "column": 1,
              "index": 2473
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 105,
              "column": 60,
              "index": 2315
            },
            "end": {
              "line": 123,
              "column": 3,
              "index": 2769
            }
          }
        }
      },
      {
        "pdgTitle": "generate([1,3], ƒ (anonymous))",
        "uniqueTitle": "generate([1,3], ƒ (anonymous))#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 82,
              "column": 42,
              "index": 1835
            },
            "end": {
              "line": 104,
              "column": 1,
              "index": 2473
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 105,
              "column": 60,
              "index": 2315
            },
            "end": {
              "line": 123,
              "column": 3,
              "index": 2769
            }
          }
        }
      },
      {
        "pdgTitle": "generate([3,3], ƒ (anonymous))",
        "uniqueTitle": "generate([3,3], ƒ (anonymous))#2",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 82,
              "column": 42,
              "index": 1835
            },
            "end": {
              "line": 104,
              "column": 1,
              "index": 2473
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 105,
              "column": 60,
              "index": 2315
            },
            "end": {
              "line": 123,
              "column": 3,
              "index": 2769
            }
          }
        }
      },
      {
        "pdgTitle": "generate([3,3,1], ƒ (anonymous))",
        "uniqueTitle": "generate([3,3,1], ƒ (anonymous))#2",
        "contextId": 45,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 82,
              "column": 42,
              "index": 1835
            },
            "end": {
              "line": 104,
              "column": 1,
              "index": 2473
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 105,
              "column": 60,
              "index": 2315
            },
            "end": {
              "line": 123,
              "column": 3,
              "index": 2769
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should generate a custom matrix based on specific cell indices@Matrix.test.js",
    "label": "Matrix should generate a custom matrix based on specific cell indices",
    "testNamePattern": "Matrix should generate a custom matrix based on specific cell indices",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 127,
    "pdgs": [
      {
        "pdgTitle": "generate([3,3], ƒ mockConstructor)",
        "uniqueTitle": "generate([3,3], ƒ mockConstructor)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 82,
              "column": 42,
              "index": 1835
            },
            "end": {
              "line": 104,
              "column": 1,
              "index": 2473
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 125,
              "column": 77,
              "index": 2852
            },
            "end": {
              "line": 146,
              "column": 3,
              "index": 3740
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should multiply two matrices@Matrix.test.js",
    "label": "Matrix should multiply two matrices",
    "testNamePattern": "Matrix should multiply two matrices",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 128,
    "pdgs": [
      {
        "pdgTitle": "dot([[],[]], [[],[]])",
        "uniqueTitle": "dot([[],[]], [[],[]])#3",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 122,
              "column": 29,
              "index": 2817
            },
            "end": {
              "line": 149,
              "column": 1,
              "index": 3513
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 148,
              "column": 43,
              "index": 3789
            },
            "end": {
              "line": 211,
              "column": 3,
              "index": 4748
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[],[]])",
        "uniqueTitle": "shape([[],[]])#8",
        "contextId": 27,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 148,
              "column": 43,
              "index": 3789
            },
            "end": {
              "line": 211,
              "column": 3,
              "index": 4748
            }
          }
        }
      },
      {
        "pdgTitle": "dot([[],[]], [[],[]])",
        "uniqueTitle": "dot([[],[]], [[],[]])#4",
        "contextId": 28,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 122,
              "column": 29,
              "index": 2817
            },
            "end": {
              "line": 149,
              "column": 1,
              "index": 3513
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 148,
              "column": 43,
              "index": 3789
            },
            "end": {
              "line": 211,
              "column": 3,
              "index": 4748
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[],[]])",
        "uniqueTitle": "shape([[],[]])#9",
        "contextId": 46,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 148,
              "column": 43,
              "index": 3789
            },
            "end": {
              "line": 211,
              "column": 3,
              "index": 4748
            }
          }
        }
      },
      {
        "pdgTitle": "dot([[],[]], [[],[],[]])",
        "uniqueTitle": "dot([[],[]], [[],[],[]])#2",
        "contextId": 47,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 122,
              "column": 29,
              "index": 2817
            },
            "end": {
              "line": 149,
              "column": 1,
              "index": 3513
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 148,
              "column": 43,
              "index": 3789
            },
            "end": {
              "line": 211,
              "column": 3,
              "index": 4748
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[],[]])",
        "uniqueTitle": "shape([[],[]])#10",
        "contextId": 69,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 148,
              "column": 43,
              "index": 3789
            },
            "end": {
              "line": 211,
              "column": 3,
              "index": 4748
            }
          }
        }
      },
      {
        "pdgTitle": "dot([[]], [[],[],[]])",
        "uniqueTitle": "dot([[]], [[],[],[]])#2",
        "contextId": 70,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 122,
              "column": 29,
              "index": 2817
            },
            "end": {
              "line": 149,
              "column": 1,
              "index": 3513
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 148,
              "column": 43,
              "index": 3789
            },
            "end": {
              "line": 211,
              "column": 3,
              "index": 4748
            }
          }
        }
      },
      {
        "pdgTitle": "shape([[]])",
        "uniqueTitle": "shape([[]])#8",
        "contextId": 91,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 28,
              "index": 261
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 485
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 148,
              "column": 43,
              "index": 3789
            },
            "end": {
              "line": 211,
              "column": 3,
              "index": 4748
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should transpose matrices@Matrix.test.js",
    "label": "Matrix should transpose matrices",
    "testNamePattern": "Matrix should transpose matrices",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 129,
    "pdgs": [
      {
        "pdgTitle": "t([[]])",
        "uniqueTitle": "t([[]])#3",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 158,
              "column": 24,
              "index": 3645
            },
            "end": {
              "line": 168,
              "column": 1,
              "index": 3928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 213,
              "column": 40,
              "index": 4794
            },
            "end": {
              "line": 240,
              "column": 3,
              "index": 5253
            }
          }
        }
      },
      {
        "pdgTitle": "t([[],[],[]])",
        "uniqueTitle": "t([[],[],[]])#3",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 158,
              "column": 24,
              "index": 3645
            },
            "end": {
              "line": 168,
              "column": 1,
              "index": 3928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 213,
              "column": 40,
              "index": 4794
            },
            "end": {
              "line": 240,
              "column": 3,
              "index": 5253
            }
          }
        }
      },
      {
        "pdgTitle": "t([[],[]])",
        "uniqueTitle": "t([[],[]])#2",
        "contextId": 37,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 158,
              "column": 24,
              "index": 3645
            },
            "end": {
              "line": 168,
              "column": 1,
              "index": 3928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 213,
              "column": 40,
              "index": 4794
            },
            "end": {
              "line": 240,
              "column": 3,
              "index": 5253
            }
          }
        }
      },
      {
        "pdgTitle": "t([[],[],[]])",
        "uniqueTitle": "t([[],[],[]])#4",
        "contextId": 60,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 158,
              "column": 24,
              "index": 3645
            },
            "end": {
              "line": 168,
              "column": 1,
              "index": 3928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 213,
              "column": 40,
              "index": 4794
            },
            "end": {
              "line": 240,
              "column": 3,
              "index": 5253
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should throw when trying to transpose non 2D matrix@Matrix.test.js",
    "label": "Matrix should throw when trying to transpose non 2D matrix",
    "testNamePattern": "Matrix should throw when trying to transpose non 2D matrix",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 130,
    "pdgs": [
      {
        "pdgTitle": "t([[]])",
        "uniqueTitle": "t([[]])#4",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 158,
              "column": 24,
              "index": 3645
            },
            "end": {
              "line": 168,
              "column": 1,
              "index": 3928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 243,
              "column": 17,
              "index": 5345
            },
            "end": {
              "line": 245,
              "column": 5,
              "index": 5377
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should add two matrices@Matrix.test.js",
    "label": "Matrix should add two matrices",
    "testNamePattern": "Matrix should add two matrices",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 131,
    "pdgs": [
      {
        "pdgTitle": "add([[]], [[]])",
        "uniqueTitle": "add([[]], [[]])#5",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 245,
              "column": 29,
              "index": 6282
            },
            "end": {
              "line": 259,
              "column": 1,
              "index": 6667
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 248,
              "column": 38,
              "index": 5470
            },
            "end": {
              "line": 294,
              "column": 3,
              "index": 6374
            }
          }
        }
      },
      {
        "pdgTitle": "add([[]], [[]])",
        "uniqueTitle": "add([[]], [[]])#6",
        "contextId": 37,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 245,
              "column": 29,
              "index": 6282
            },
            "end": {
              "line": 259,
              "column": 1,
              "index": 6667
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 248,
              "column": 38,
              "index": 5470
            },
            "end": {
              "line": 294,
              "column": 3,
              "index": 6374
            }
          }
        }
      },
      {
        "pdgTitle": "add([[],[],[]], [[],[],[]])",
        "uniqueTitle": "add([[],[],[]], [[],[],[]])#4",
        "contextId": 91,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 245,
              "column": 29,
              "index": 6282
            },
            "end": {
              "line": 259,
              "column": 1,
              "index": 6667
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 248,
              "column": 38,
              "index": 5470
            },
            "end": {
              "line": 294,
              "column": 3,
              "index": 6374
            }
          }
        }
      },
      {
        "pdgTitle": "add([[],[],[]], [[],[],[]])",
        "uniqueTitle": "add([[],[],[]], [[],[],[]])#5",
        "contextId": 155,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 245,
              "column": 29,
              "index": 6282
            },
            "end": {
              "line": 259,
              "column": 1,
              "index": 6667
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 248,
              "column": 38,
              "index": 5470
            },
            "end": {
              "line": 294,
              "column": 3,
              "index": 6374
            }
          }
        }
      },
      {
        "pdgTitle": "add([[],[],[]], [[],[],[]])",
        "uniqueTitle": "add([[],[],[]], [[],[],[]])#6",
        "contextId": 285,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 245,
              "column": 29,
              "index": 6282
            },
            "end": {
              "line": 259,
              "column": 1,
              "index": 6667
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 248,
              "column": 38,
              "index": 5470
            },
            "end": {
              "line": 294,
              "column": 3,
              "index": 6374
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should throw when trying to add matrices of different shape@Matrix.test.js",
    "label": "Matrix should throw when trying to add matrices of different shape",
    "testNamePattern": "Matrix should throw when trying to add matrices of different shape",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 132,
    "pdgs": [
      {
        "pdgTitle": "add([[]], [[]])",
        "uniqueTitle": "add([[]], [[]])#7",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 245,
              "column": 29,
              "index": 6282
            },
            "end": {
              "line": 259,
              "column": 1,
              "index": 6667
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 297,
              "column": 17,
              "index": 6474
            },
            "end": {
              "line": 297,
              "column": 41,
              "index": 6498
            }
          }
        }
      },
      {
        "pdgTitle": "add([[]], [[]])",
        "uniqueTitle": "add([[]], [[]])#8",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 245,
              "column": 29,
              "index": 6282
            },
            "end": {
              "line": 259,
              "column": 1,
              "index": 6667
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 301,
              "column": 17,
              "index": 6586
            },
            "end": {
              "line": 301,
              "column": 42,
              "index": 6611
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should do element wise multiplication two matrices@Matrix.test.js",
    "label": "Matrix should do element wise multiplication two matrices",
    "testNamePattern": "Matrix should do element wise multiplication two matrices",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 133,
    "pdgs": [
      {
        "pdgTitle": "mul([[]], [[]])",
        "uniqueTitle": "mul([[]], [[]])#5",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 268,
              "column": 29,
              "index": 6822
            },
            "end": {
              "line": 282,
              "column": 1,
              "index": 7207
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 306,
              "column": 65,
              "index": 6750
            },
            "end": {
              "line": 350,
              "column": 3,
              "index": 7467
            }
          }
        }
      },
      {
        "pdgTitle": "mul([[]], [[]])",
        "uniqueTitle": "mul([[]], [[]])#6",
        "contextId": 37,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 268,
              "column": 29,
              "index": 6822
            },
            "end": {
              "line": 282,
              "column": 1,
              "index": 7207
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 306,
              "column": 65,
              "index": 6750
            },
            "end": {
              "line": 350,
              "column": 3,
              "index": 7467
            }
          }
        }
      },
      {
        "pdgTitle": "mul([[],[],[]], [[],[],[]])",
        "uniqueTitle": "mul([[],[],[]], [[],[],[]])#2",
        "contextId": 91,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 268,
              "column": 29,
              "index": 6822
            },
            "end": {
              "line": 282,
              "column": 1,
              "index": 7207
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 306,
              "column": 65,
              "index": 6750
            },
            "end": {
              "line": 350,
              "column": 3,
              "index": 7467
            }
          }
        }
      },
      {
        "pdgTitle": "mul([[],[]], [[],[]])",
        "uniqueTitle": "mul([[],[]], [[],[]])#3",
        "contextId": 155,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 268,
              "column": 29,
              "index": 6822
            },
            "end": {
              "line": 282,
              "column": 1,
              "index": 7207
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 306,
              "column": 65,
              "index": 6750
            },
            "end": {
              "line": 350,
              "column": 3,
              "index": 7467
            }
          }
        }
      },
      {
        "pdgTitle": "mul([[],[]], [[],[]])",
        "uniqueTitle": "mul([[],[]], [[],[]])#4",
        "contextId": 225,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 268,
              "column": 29,
              "index": 6822
            },
            "end": {
              "line": 282,
              "column": 1,
              "index": 7207
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 306,
              "column": 65,
              "index": 6750
            },
            "end": {
              "line": 350,
              "column": 3,
              "index": 7467
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should throw when trying to multiply matrices element-wise of different shape@Matrix.test.js",
    "label": "Matrix should throw when trying to multiply matrices element-wise of different shape",
    "testNamePattern": "Matrix should throw when trying to multiply matrices element-wise of different shape",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 134,
    "pdgs": [
      {
        "pdgTitle": "mul([[]], [[]])",
        "uniqueTitle": "mul([[]], [[]])#7",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 268,
              "column": 29,
              "index": 6822
            },
            "end": {
              "line": 282,
              "column": 1,
              "index": 7207
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 353,
              "column": 17,
              "index": 7585
            },
            "end": {
              "line": 353,
              "column": 41,
              "index": 7609
            }
          }
        }
      },
      {
        "pdgTitle": "mul([[]], [[]])",
        "uniqueTitle": "mul([[]], [[]])#8",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 268,
              "column": 29,
              "index": 6822
            },
            "end": {
              "line": 282,
              "column": 1,
              "index": 7207
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 357,
              "column": 17,
              "index": 7697
            },
            "end": {
              "line": 357,
              "column": 42,
              "index": 7722
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should do element wise subtraction two matrices@Matrix.test.js",
    "label": "Matrix should do element wise subtraction two matrices",
    "testNamePattern": "Matrix should do element wise subtraction two matrices",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 135,
    "pdgs": [
      {
        "pdgTitle": "sub([[]], [[]])",
        "uniqueTitle": "sub([[]], [[]])#6",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 291,
              "column": 29,
              "index": 7360
            },
            "end": {
              "line": 305,
              "column": 1,
              "index": 7745
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 362,
              "column": 62,
              "index": 7858
            },
            "end": {
              "line": 404,
              "column": 3,
              "index": 8577
            }
          }
        }
      },
      {
        "pdgTitle": "sub([[]], [[]])",
        "uniqueTitle": "sub([[]], [[]])#7",
        "contextId": 37,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 291,
              "column": 29,
              "index": 7360
            },
            "end": {
              "line": 305,
              "column": 1,
              "index": 7745
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 362,
              "column": 62,
              "index": 7858
            },
            "end": {
              "line": 404,
              "column": 3,
              "index": 8577
            }
          }
        }
      },
      {
        "pdgTitle": "sub([[]], [[]])",
        "uniqueTitle": "sub([[]], [[]])#8",
        "contextId": 91,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 291,
              "column": 29,
              "index": 7360
            },
            "end": {
              "line": 305,
              "column": 1,
              "index": 7745
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 362,
              "column": 62,
              "index": 7858
            },
            "end": {
              "line": 404,
              "column": 3,
              "index": 8577
            }
          }
        }
      },
      {
        "pdgTitle": "sub([[],[]], [[],[]])",
        "uniqueTitle": "sub([[],[]], [[],[]])#3",
        "contextId": 160,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 291,
              "column": 29,
              "index": 7360
            },
            "end": {
              "line": 305,
              "column": 1,
              "index": 7745
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 362,
              "column": 62,
              "index": 7858
            },
            "end": {
              "line": 404,
              "column": 3,
              "index": 8577
            }
          }
        }
      },
      {
        "pdgTitle": "sub([[],[]], [[],[]])",
        "uniqueTitle": "sub([[],[]], [[],[]])#4",
        "contextId": 230,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 291,
              "column": 29,
              "index": 7360
            },
            "end": {
              "line": 305,
              "column": 1,
              "index": 7745
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 362,
              "column": 62,
              "index": 7858
            },
            "end": {
              "line": 404,
              "column": 3,
              "index": 8577
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "matrix",
    "algo": "matrix_Matrix",
    "name": "Matrix should throw when trying to subtract matrices element-wise of different shape@Matrix.test.js",
    "label": "Matrix should throw when trying to subtract matrices element-wise of different shape",
    "testNamePattern": "Matrix should throw when trying to subtract matrices element-wise of different shape",
    "testFilePaths": [
      "src/algorithms/math/matrix/__tests__/Matrix.test.js"
    ],
    "number": 136,
    "pdgs": [
      {
        "pdgTitle": "sub([[]], [[]])",
        "uniqueTitle": "sub([[]], [[]])#9",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 291,
              "column": 29,
              "index": 7360
            },
            "end": {
              "line": 305,
              "column": 1,
              "index": 7745
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 407,
              "column": 17,
              "index": 8695
            },
            "end": {
              "line": 407,
              "column": 41,
              "index": 8719
            }
          }
        }
      },
      {
        "pdgTitle": "sub([[]], [[]])",
        "uniqueTitle": "sub([[]], [[]])#10",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/matrix/Matrix.js",
          "loc": {
            "start": {
              "line": 291,
              "column": 29,
              "index": 7360
            },
            "end": {
              "line": 305,
              "column": 1,
              "index": 7745
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/matrix/__tests__/Matrix.test.js",
          "loc": {
            "start": {
              "line": 411,
              "column": 17,
              "index": 8807
            },
            "end": {
              "line": 411,
              "column": 42,
              "index": 8832
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "pascal-triangle",
    "algo": "pascal-triangle_pascalTriangleRecursive",
    "name": "pascalTriangleRecursive should calculate Pascal Triangle coefficients for specific line number@pascalTriangleRecursive.test.js",
    "label": "pascalTriangleRecursive should calculate Pascal Triangle coefficients for specific line number",
    "testNamePattern": "pascalTriangleRecursive should calculate Pascal Triangle coefficients for specific line number",
    "testFilePaths": [
      "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js"
    ],
    "number": 137,
    "pdgs": [
      {
        "pdgTitle": "pascalTriangleRecursive(0)",
        "uniqueTitle": "pascalTriangleRecursive(0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 60,
              "index": 138
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1031
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 199
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 730
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangleRecursive(1)",
        "uniqueTitle": "pascalTriangleRecursive(1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 60,
              "index": 138
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1031
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 199
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 730
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangleRecursive(2)",
        "uniqueTitle": "pascalTriangleRecursive(2)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 60,
              "index": 138
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1031
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 199
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 730
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangleRecursive(3)",
        "uniqueTitle": "pascalTriangleRecursive(3)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 60,
              "index": 138
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1031
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 199
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 730
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangleRecursive(4)",
        "uniqueTitle": "pascalTriangleRecursive(4)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 60,
              "index": 138
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1031
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 199
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 730
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangleRecursive(5)",
        "uniqueTitle": "pascalTriangleRecursive(5)#2",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 60,
              "index": 138
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1031
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 199
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 730
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangleRecursive(6)",
        "uniqueTitle": "pascalTriangleRecursive(6)#2",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 60,
              "index": 138
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1031
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 199
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 730
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangleRecursive(7)",
        "uniqueTitle": "pascalTriangleRecursive(7)#2",
        "contextId": 33,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangleRecursive.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 60,
              "index": 138
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1031
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangleRecursive.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 199
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 730
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "pascal-triangle",
    "algo": "pascal-triangle_pascalTriangle",
    "name": "pascalTriangle should calculate Pascal Triangle coefficients for specific line number@pascalTriangle.test.js",
    "label": "pascalTriangle should calculate Pascal Triangle coefficients for specific line number",
    "testNamePattern": "pascalTriangle should calculate Pascal Triangle coefficients for specific line number",
    "testFilePaths": [
      "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js"
    ],
    "number": 138,
    "pdgs": [
      {
        "pdgTitle": "pascalTriangle(0)",
        "uniqueTitle": "pascalTriangle(0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 129
            },
            "end": {
              "line": 17,
              "column": 1,
              "index": 466
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 172
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 631
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangle(1)",
        "uniqueTitle": "pascalTriangle(1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 129
            },
            "end": {
              "line": 17,
              "column": 1,
              "index": 466
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 172
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 631
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangle(2)",
        "uniqueTitle": "pascalTriangle(2)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 129
            },
            "end": {
              "line": 17,
              "column": 1,
              "index": 466
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 172
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 631
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangle(3)",
        "uniqueTitle": "pascalTriangle(3)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 129
            },
            "end": {
              "line": 17,
              "column": 1,
              "index": 466
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 172
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 631
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangle(4)",
        "uniqueTitle": "pascalTriangle(4)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 129
            },
            "end": {
              "line": 17,
              "column": 1,
              "index": 466
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 172
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 631
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangle(5)",
        "uniqueTitle": "pascalTriangle(5)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 129
            },
            "end": {
              "line": 17,
              "column": 1,
              "index": 466
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 172
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 631
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangle(6)",
        "uniqueTitle": "pascalTriangle(6)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 129
            },
            "end": {
              "line": 17,
              "column": 1,
              "index": 466
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 172
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 631
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangle(7)",
        "uniqueTitle": "pascalTriangle(7)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 129
            },
            "end": {
              "line": 17,
              "column": 1,
              "index": 466
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/__test__/pascalTriangle.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 172
            },
            "end": {
              "line": 13,
              "column": 3,
              "index": 631
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "primality-test",
    "algo": "primality-test_trialDivision",
    "name": "trialDivision should detect prime numbers@trialDivision.test.js",
    "label": "trialDivision should detect prime numbers",
    "testNamePattern": "trialDivision should detect prime numbers",
    "testFilePaths": [
      "src/algorithms/math/primality-test/__test__/trialDivision.test.js"
    ],
    "number": 139,
    "pdgs": [
      {
        "pdgTitle": "trialDivision(1)",
        "uniqueTitle": "trialDivision(1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(2)",
        "uniqueTitle": "trialDivision(2)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(3)",
        "uniqueTitle": "trialDivision(3)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(5)",
        "uniqueTitle": "trialDivision(5)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(11)",
        "uniqueTitle": "trialDivision(11)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(191)",
        "uniqueTitle": "trialDivision(191)#3",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(191)",
        "uniqueTitle": "trialDivision(191)#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(199)",
        "uniqueTitle": "trialDivision(199)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(-1)",
        "uniqueTitle": "trialDivision(-1)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(0)",
        "uniqueTitle": "trialDivision(0)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(4)",
        "uniqueTitle": "trialDivision(4)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(6)",
        "uniqueTitle": "trialDivision(6)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(12)",
        "uniqueTitle": "trialDivision(12)#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(14)",
        "uniqueTitle": "trialDivision(14)#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(25)",
        "uniqueTitle": "trialDivision(25)#2",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(192)",
        "uniqueTitle": "trialDivision(192)#2",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(200)",
        "uniqueTitle": "trialDivision(200)#2",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(400)",
        "uniqueTitle": "trialDivision(400)#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(0.5)",
        "uniqueTitle": "trialDivision(0.5)#2",
        "contextId": 24,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(1.3)",
        "uniqueTitle": "trialDivision(1.3)#2",
        "contextId": 25,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      },
      {
        "pdgTitle": "trialDivision(10.5)",
        "uniqueTitle": "trialDivision(10.5)#2",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/math/primality-test/trialDivision.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 46,
              "index": 105
            },
            "end": {
              "line": 35,
              "column": 1,
              "index": 836
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/primality-test/__test__/trialDivision.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 37,
              "index": 142
            },
            "end": {
              "line": 31,
              "column": 1,
              "index": 1046
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "prime-factors",
    "algo": "prime-factors_primeFactors",
    "name": "primeFactors should find prime factors@primeFactors.test.js",
    "label": "primeFactors should find prime factors",
    "testNamePattern": "primeFactors should find prime factors",
    "testFilePaths": [
      "src/algorithms/math/prime-factors/__test__/primeFactors.test.js"
    ],
    "number": 140,
    "pdgs": [
      {
        "pdgTitle": "primeFactors(1)",
        "uniqueTitle": "primeFactors(1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(2)",
        "uniqueTitle": "primeFactors(2)#3",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(3)",
        "uniqueTitle": "primeFactors(3)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(4)",
        "uniqueTitle": "primeFactors(4)#3",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(14)",
        "uniqueTitle": "primeFactors(14)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(40)",
        "uniqueTitle": "primeFactors(40)#3",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(54)",
        "uniqueTitle": "primeFactors(54)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(100)",
        "uniqueTitle": "primeFactors(100)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(156)",
        "uniqueTitle": "primeFactors(156)#3",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(273)",
        "uniqueTitle": "primeFactors(273)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(300)",
        "uniqueTitle": "primeFactors(300)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(980)",
        "uniqueTitle": "primeFactors(980)#3",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(1000)",
        "uniqueTitle": "primeFactors(1000)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(52734)",
        "uniqueTitle": "primeFactors(52734)#3",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(343434)",
        "uniqueTitle": "primeFactors(343434)#3",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(456745)",
        "uniqueTitle": "primeFactors(456745)#3",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(510510)",
        "uniqueTitle": "primeFactors(510510)#3",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(8735463)",
        "uniqueTitle": "primeFactors(8735463)#3",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(873452453)",
        "uniqueTitle": "primeFactors(873452453)#3",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 14,
              "column": 40,
              "index": 491
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1543
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "prime-factors",
    "algo": "prime-factors_primeFactors",
    "name": "primeFactors should give approximate prime factors count using Hardy-Ramanujan theorem@primeFactors.test.js",
    "label": "primeFactors should give approximate prime factors count using Hardy-Ramanujan theorem",
    "testNamePattern": "primeFactors should give approximate prime factors count using Hardy-Ramanujan theorem",
    "testFilePaths": [
      "src/algorithms/math/prime-factors/__test__/primeFactors.test.js"
    ],
    "number": 141,
    "pdgs": [
      {
        "pdgTitle": "hardyRamanujan(2)",
        "uniqueTitle": "hardyRamanujan(2)#7",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 88,
              "index": 1637
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 2277
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(4)",
        "uniqueTitle": "hardyRamanujan(4)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 88,
              "index": 1637
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 2277
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(40)",
        "uniqueTitle": "hardyRamanujan(40)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 88,
              "index": 1637
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 2277
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(156)",
        "uniqueTitle": "hardyRamanujan(156)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 88,
              "index": 1637
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 2277
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(980)",
        "uniqueTitle": "hardyRamanujan(980)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 88,
              "index": 1637
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 2277
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(52734)",
        "uniqueTitle": "hardyRamanujan(52734)#3",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 88,
              "index": 1637
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 2277
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(343434)",
        "uniqueTitle": "hardyRamanujan(343434)#3",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 88,
              "index": 1637
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 2277
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(456745)",
        "uniqueTitle": "hardyRamanujan(456745)#3",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 88,
              "index": 1637
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 2277
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(510510)",
        "uniqueTitle": "hardyRamanujan(510510)#3",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 88,
              "index": 1637
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 2277
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(8735463)",
        "uniqueTitle": "hardyRamanujan(8735463)#3",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 88,
              "index": 1637
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 2277
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(873452453)",
        "uniqueTitle": "hardyRamanujan(873452453)#3",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 88,
              "index": 1637
            },
            "end": {
              "line": 48,
              "column": 3,
              "index": 2277
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "prime-factors",
    "algo": "prime-factors_primeFactors",
    "name": "primeFactors should give correct deviation between exact and approx counts@primeFactors.test.js",
    "label": "primeFactors should give correct deviation between exact and approx counts",
    "testNamePattern": "primeFactors should give correct deviation between exact and approx counts",
    "testFilePaths": [
      "src/algorithms/math/prime-factors/__test__/primeFactors.test.js"
    ],
    "number": 142,
    "pdgs": [
      {
        "pdgTitle": "primeFactors(2)",
        "uniqueTitle": "primeFactors(2)#4",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(2)",
        "uniqueTitle": "hardyRamanujan(2)#8",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(4)",
        "uniqueTitle": "primeFactors(4)#4",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(2)",
        "uniqueTitle": "hardyRamanujan(2)#9",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(40)",
        "uniqueTitle": "primeFactors(40)#4",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(2)",
        "uniqueTitle": "hardyRamanujan(2)#10",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(156)",
        "uniqueTitle": "primeFactors(156)#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(2)",
        "uniqueTitle": "hardyRamanujan(2)#11",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(980)",
        "uniqueTitle": "primeFactors(980)#4",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(2)",
        "uniqueTitle": "hardyRamanujan(2)#12",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(52734)",
        "uniqueTitle": "primeFactors(52734)#4",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(52734)",
        "uniqueTitle": "hardyRamanujan(52734)#4",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(343434)",
        "uniqueTitle": "primeFactors(343434)#4",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(343434)",
        "uniqueTitle": "hardyRamanujan(343434)#4",
        "contextId": 24,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(456745)",
        "uniqueTitle": "primeFactors(456745)#4",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(456745)",
        "uniqueTitle": "hardyRamanujan(456745)#4",
        "contextId": 27,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(510510)",
        "uniqueTitle": "primeFactors(510510)#4",
        "contextId": 29,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(510510)",
        "uniqueTitle": "hardyRamanujan(510510)#4",
        "contextId": 30,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(8735463)",
        "uniqueTitle": "primeFactors(8735463)#4",
        "contextId": 32,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(8735463)",
        "uniqueTitle": "hardyRamanujan(8735463)#4",
        "contextId": 33,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "primeFactors(873452453)",
        "uniqueTitle": "primeFactors(873452453)#4",
        "contextId": 35,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 32,
              "index": 214
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 933
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      },
      {
        "pdgTitle": "hardyRamanujan(873452453)",
        "uniqueTitle": "hardyRamanujan(873452453)#4",
        "contextId": 36,
        "algoLoc": {
          "filePath": "src/algorithms/math/prime-factors/primeFactors.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 34,
              "index": 1126
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1163
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/prime-factors/__test__/primeFactors.test.js",
          "loc": {
            "start": {
              "line": 50,
              "column": 76,
              "index": 2359
            },
            "end": {
              "line": 97,
              "column": 3,
              "index": 3728
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "radian",
    "algo": "radian_radianToDegree",
    "name": "radianToDegree should convert radian to degree@radianToDegree.test.js",
    "label": "radianToDegree should convert radian to degree",
    "testNamePattern": "radianToDegree should convert radian to degree",
    "testFilePaths": [
      "src/algorithms/math/radian/__test__/radianToDegree.test.js"
    ],
    "number": 143,
    "pdgs": [
      {
        "pdgTitle": "radianToDegree(0)",
        "uniqueTitle": "radianToDegree(0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/radian/radianToDegree.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 47,
              "index": 105
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 145
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/radian/__test__/radianToDegree.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 46,
              "index": 133
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 439
            }
          }
        }
      },
      {
        "pdgTitle": "radianToDegree(0.7853981633974483)",
        "uniqueTitle": "radianToDegree(0.7853981633974483)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/radian/radianToDegree.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 47,
              "index": 105
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 145
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/radian/__test__/radianToDegree.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 46,
              "index": 133
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 439
            }
          }
        }
      },
      {
        "pdgTitle": "radianToDegree(1.5707963267948966)",
        "uniqueTitle": "radianToDegree(1.5707963267948966)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/radian/radianToDegree.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 47,
              "index": 105
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 145
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/radian/__test__/radianToDegree.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 46,
              "index": 133
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 439
            }
          }
        }
      },
      {
        "pdgTitle": "radianToDegree(3.141592653589793)",
        "uniqueTitle": "radianToDegree(3.141592653589793)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/radian/radianToDegree.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 47,
              "index": 105
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 145
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/radian/__test__/radianToDegree.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 46,
              "index": 133
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 439
            }
          }
        }
      },
      {
        "pdgTitle": "radianToDegree(4.71238898038469)",
        "uniqueTitle": "radianToDegree(4.71238898038469)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/radian/radianToDegree.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 47,
              "index": 105
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 145
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/radian/__test__/radianToDegree.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 46,
              "index": 133
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 439
            }
          }
        }
      },
      {
        "pdgTitle": "radianToDegree(6.283185307179586)",
        "uniqueTitle": "radianToDegree(6.283185307179586)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/radian/radianToDegree.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 47,
              "index": 105
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 145
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/radian/__test__/radianToDegree.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 46,
              "index": 133
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 439
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "radian",
    "algo": "radian_degreeToRadian",
    "name": "degreeToRadian should convert degree to radian@degreeToRadian.test.js",
    "label": "degreeToRadian should convert degree to radian",
    "testNamePattern": "degreeToRadian should convert degree to radian",
    "testFilePaths": [
      "src/algorithms/math/radian/__test__/degreeToRadian.test.js"
    ],
    "number": 144,
    "pdgs": [
      {
        "pdgTitle": "degreeToRadian(0)",
        "uniqueTitle": "degreeToRadian(0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/radian/degreeToRadian.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 47,
              "index": 105
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 145
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/radian/__test__/degreeToRadian.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 46,
              "index": 133
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 439
            }
          }
        }
      },
      {
        "pdgTitle": "degreeToRadian(45)",
        "uniqueTitle": "degreeToRadian(45)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/radian/degreeToRadian.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 47,
              "index": 105
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 145
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/radian/__test__/degreeToRadian.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 46,
              "index": 133
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 439
            }
          }
        }
      },
      {
        "pdgTitle": "degreeToRadian(90)",
        "uniqueTitle": "degreeToRadian(90)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/radian/degreeToRadian.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 47,
              "index": 105
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 145
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/radian/__test__/degreeToRadian.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 46,
              "index": 133
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 439
            }
          }
        }
      },
      {
        "pdgTitle": "degreeToRadian(180)",
        "uniqueTitle": "degreeToRadian(180)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/radian/degreeToRadian.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 47,
              "index": 105
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 145
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/radian/__test__/degreeToRadian.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 46,
              "index": 133
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 439
            }
          }
        }
      },
      {
        "pdgTitle": "degreeToRadian(270)",
        "uniqueTitle": "degreeToRadian(270)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/radian/degreeToRadian.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 47,
              "index": 105
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 145
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/radian/__test__/degreeToRadian.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 46,
              "index": 133
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 439
            }
          }
        }
      },
      {
        "pdgTitle": "degreeToRadian(360)",
        "uniqueTitle": "degreeToRadian(360)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/radian/degreeToRadian.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 47,
              "index": 105
            },
            "end": {
              "line": 7,
              "column": 1,
              "index": 145
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/radian/__test__/degreeToRadian.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 46,
              "index": 133
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 439
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "sieve-of-eratosthenes",
    "algo": "sieve-of-eratosthenes_sieveOfEratosthenes",
    "name": "sieveOfEratosthenes should find all primes less than or equal to n@sieveOfEratosthenes.test.js",
    "label": "sieveOfEratosthenes should find all primes less than or equal to n",
    "testNamePattern": "sieveOfEratosthenes should find all primes less than or equal to n",
    "testFilePaths": [
      "src/algorithms/math/sieve-of-eratosthenes/__test__/sieveOfEratosthenes.test.js"
    ],
    "number": 145,
    "pdgs": [
      {
        "pdgTitle": "sieveOfEratosthenes(5)",
        "uniqueTitle": "sieveOfEratosthenes(5)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/sieve-of-eratosthenes/sieveOfEratosthenes.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 55,
              "index": 118
            },
            "end": {
              "line": 36,
              "column": 1,
              "index": 1020
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/sieve-of-eratosthenes/__test__/sieveOfEratosthenes.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 61,
              "index": 163
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 452
            }
          }
        }
      },
      {
        "pdgTitle": "sieveOfEratosthenes(10)",
        "uniqueTitle": "sieveOfEratosthenes(10)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/sieve-of-eratosthenes/sieveOfEratosthenes.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 55,
              "index": 118
            },
            "end": {
              "line": 36,
              "column": 1,
              "index": 1020
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/sieve-of-eratosthenes/__test__/sieveOfEratosthenes.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 61,
              "index": 163
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 452
            }
          }
        }
      },
      {
        "pdgTitle": "sieveOfEratosthenes(100)",
        "uniqueTitle": "sieveOfEratosthenes(100)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/sieve-of-eratosthenes/sieveOfEratosthenes.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 55,
              "index": 118
            },
            "end": {
              "line": 36,
              "column": 1,
              "index": 1020
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/sieve-of-eratosthenes/__test__/sieveOfEratosthenes.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 61,
              "index": 163
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 452
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "square-root",
    "algo": "square-root_squareRoot",
    "name": "squareRoot should throw for negative numbers@squareRoot.test.js",
    "label": "squareRoot should throw for negative numbers",
    "testNamePattern": "squareRoot should throw for negative numbers",
    "testFilePaths": [
      "src/algorithms/math/square-root/__test__/squareRoot.test.js"
    ],
    "number": 146,
    "pdgs": [
      {
        "pdgTitle": "squareRoot(-5)",
        "uniqueTitle": "squareRoot(-5)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 33,
              "index": 159
            },
            "end": {
              "line": 7,
              "column": 5,
              "index": 190
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "square-root",
    "algo": "square-root_squareRoot",
    "name": "squareRoot should correctly calculate square root with default tolerance@squareRoot.test.js",
    "label": "squareRoot should correctly calculate square root with default tolerance",
    "testNamePattern": "squareRoot should correctly calculate square root with default tolerance",
    "testFilePaths": [
      "src/algorithms/math/square-root/__test__/squareRoot.test.js"
    ],
    "number": 147,
    "pdgs": [
      {
        "pdgTitle": "squareRoot(0)",
        "uniqueTitle": "squareRoot(0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 76,
              "index": 319
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 699
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(1)",
        "uniqueTitle": "squareRoot(1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 76,
              "index": 319
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 699
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(2)",
        "uniqueTitle": "squareRoot(2)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 76,
              "index": 319
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 699
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(3)",
        "uniqueTitle": "squareRoot(3)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 76,
              "index": 319
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 699
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(4)",
        "uniqueTitle": "squareRoot(4)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 76,
              "index": 319
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 699
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(15)",
        "uniqueTitle": "squareRoot(15)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 76,
              "index": 319
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 699
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(16)",
        "uniqueTitle": "squareRoot(16)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 76,
              "index": 319
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 699
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(256)",
        "uniqueTitle": "squareRoot(256)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 76,
              "index": 319
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 699
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(473)",
        "uniqueTitle": "squareRoot(473)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 76,
              "index": 319
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 699
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(14723)",
        "uniqueTitle": "squareRoot(14723)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 76,
              "index": 319
            },
            "end": {
              "line": 22,
              "column": 3,
              "index": 699
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "math",
    "chapter": "square-root",
    "algo": "square-root_squareRoot",
    "name": "squareRoot should correctly calculate square root for integers with custom tolerance@squareRoot.test.js",
    "label": "squareRoot should correctly calculate square root for integers with custom tolerance",
    "testNamePattern": "squareRoot should correctly calculate square root for integers with custom tolerance",
    "testFilePaths": [
      "src/algorithms/math/square-root/__test__/squareRoot.test.js"
    ],
    "number": 148,
    "pdgs": [
      {
        "pdgTitle": "squareRoot(0, 1)",
        "uniqueTitle": "squareRoot(0, 1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(1, 1)",
        "uniqueTitle": "squareRoot(1, 1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(2, 1)",
        "uniqueTitle": "squareRoot(2, 1)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(3, 1)",
        "uniqueTitle": "squareRoot(3, 1)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(4, 1)",
        "uniqueTitle": "squareRoot(4, 1)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(15, 1)",
        "uniqueTitle": "squareRoot(15, 1)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(16, 1)",
        "uniqueTitle": "squareRoot(16, 1)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(256, 1)",
        "uniqueTitle": "squareRoot(256, 1)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(473, 1)",
        "uniqueTitle": "squareRoot(473, 1)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(14723, 1)",
        "uniqueTitle": "squareRoot(14723, 1)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(0, 3)",
        "uniqueTitle": "squareRoot(0, 3)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(1, 3)",
        "uniqueTitle": "squareRoot(1, 3)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(2, 3)",
        "uniqueTitle": "squareRoot(2, 3)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(3, 3)",
        "uniqueTitle": "squareRoot(3, 3)#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(4, 3)",
        "uniqueTitle": "squareRoot(4, 3)#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(15, 3)",
        "uniqueTitle": "squareRoot(15, 3)#2",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(16, 3)",
        "uniqueTitle": "squareRoot(16, 3)#2",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(256, 3)",
        "uniqueTitle": "squareRoot(256, 3)#2",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(473, 3)",
        "uniqueTitle": "squareRoot(473, 3)#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(14723, 3)",
        "uniqueTitle": "squareRoot(14723, 3)#2",
        "contextId": 24,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(0, 10)",
        "uniqueTitle": "squareRoot(0, 10)#2",
        "contextId": 25,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(1, 10)",
        "uniqueTitle": "squareRoot(1, 10)#2",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(2, 10)",
        "uniqueTitle": "squareRoot(2, 10)#2",
        "contextId": 27,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(3, 10)",
        "uniqueTitle": "squareRoot(3, 10)#2",
        "contextId": 28,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(4, 10)",
        "uniqueTitle": "squareRoot(4, 10)#2",
        "contextId": 29,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(15, 10)",
        "uniqueTitle": "squareRoot(15, 10)#2",
        "contextId": 30,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(16, 10)",
        "uniqueTitle": "squareRoot(16, 10)#2",
        "contextId": 31,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(256, 10)",
        "uniqueTitle": "squareRoot(256, 10)#2",
        "contextId": 32,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(473, 10)",
        "uniqueTitle": "squareRoot(473, 10)#2",
        "contextId": 33,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(14723, 10)",
        "uniqueTitle": "squareRoot(14723, 10)#2",
        "contextId": 34,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 24,
              "column": 88,
              "index": 793
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 2411
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(4.5, 10)",
        "uniqueTitle": "squareRoot(4.5, 10)#2",
        "contextId": 36,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 88,
              "index": 2505
            },
            "end": {
              "line": 68,
              "column": 3,
              "index": 2622
            }
          }
        }
      },
      {
        "pdgTitle": "squareRoot(217.534, 10)",
        "uniqueTitle": "squareRoot(217.534, 10)#2",
        "contextId": 37,
        "algoLoc": {
          "filePath": "src/algorithms/math/square-root/squareRoot.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 43,
              "index": 343
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1621
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/math/square-root/__test__/squareRoot.test.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 88,
              "index": 2505
            },
            "end": {
              "line": 68,
              "column": 3,
              "index": 2622
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "ml",
    "chapter": "k-means",
    "algo": "k-means_kMeans",
    "name": "kMeans should throw an error on invalid data@kMeans.test.js",
    "label": "kMeans should throw an error on invalid data",
    "testNamePattern": "kMeans should throw an error on invalid data",
    "testFilePaths": [
      "src/algorithms/ml/k-means/__test__/kMeans.test.js"
    ],
    "number": 149,
    "pdgs": [
      {
        "pdgTitle": "KMeans()",
        "uniqueTitle": "KMeans()#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/ml/k-means/kMeans.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 37,
              "index": 425
            },
            "end": {
              "line": 94,
              "column": 1,
              "index": 3494
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 17,
              "index": 135
            },
            "end": {
              "line": 7,
              "column": 5,
              "index": 160
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "ml",
    "chapter": "k-means",
    "algo": "k-means_kMeans",
    "name": "kMeans should throw an error on inconsistent data@kMeans.test.js",
    "label": "kMeans should throw an error on inconsistent data",
    "testNamePattern": "kMeans should throw an error on inconsistent data",
    "testFilePaths": [
      "src/algorithms/ml/k-means/__test__/kMeans.test.js"
    ],
    "number": 150,
    "pdgs": [
      {
        "pdgTitle": "KMeans([[],[]], 2)",
        "uniqueTitle": "KMeans([[],[]], 2)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/ml/k-means/kMeans.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 37,
              "index": 425
            },
            "end": {
              "line": 94,
              "column": 1,
              "index": 3494
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 17,
              "index": 284
            },
            "end": {
              "line": 13,
              "column": 5,
              "index": 325
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "ml",
    "chapter": "k-means",
    "algo": "k-means_kMeans",
    "name": "kMeans should find the nearest neighbour@kMeans.test.js",
    "label": "kMeans should find the nearest neighbour",
    "testNamePattern": "kMeans should find the nearest neighbour",
    "testFilePaths": [
      "src/algorithms/ml/k-means/__test__/kMeans.test.js"
    ],
    "number": 151,
    "pdgs": [
      {
        "pdgTitle": "KMeans([[],[],[],[],[],[],[]], 2)",
        "uniqueTitle": "KMeans([[],[],[],[],[],[],[]], 2)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/ml/k-means/kMeans.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 37,
              "index": 425
            },
            "end": {
              "line": 94,
              "column": 1,
              "index": 3494
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 48,
              "index": 433
            },
            "end": {
              "line": 40,
              "column": 3,
              "index": 858
            }
          }
        }
      },
      {
        "pdgTitle": "KMeans([[],[],[]], 2)",
        "uniqueTitle": "KMeans([[],[],[]], 2)#4",
        "contextId": 578,
        "algoLoc": {
          "filePath": "src/algorithms/ml/k-means/kMeans.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 37,
              "index": 425
            },
            "end": {
              "line": 94,
              "column": 1,
              "index": 3494
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 48,
              "index": 433
            },
            "end": {
              "line": 40,
              "column": 3,
              "index": 858
            }
          }
        }
      },
      {
        "pdgTitle": "KMeans([[],[],[]], 2)",
        "uniqueTitle": "KMeans([[],[],[]], 2)#5",
        "contextId": 940,
        "algoLoc": {
          "filePath": "src/algorithms/ml/k-means/kMeans.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 37,
              "index": 425
            },
            "end": {
              "line": 94,
              "column": 1,
              "index": 3494
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
          "loc": {
            "start": {
              "line": 53,
              "column": 60,
              "index": 1188
            },
            "end": {
              "line": 62,
              "column": 3,
              "index": 1395
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "ml",
    "chapter": "k-means",
    "algo": "k-means_kMeans",
    "name": "kMeans should find the clusters with equal distances@kMeans.test.js",
    "label": "kMeans should find the clusters with equal distances",
    "testNamePattern": "kMeans should find the clusters with equal distances",
    "testFilePaths": [
      "src/algorithms/ml/k-means/__test__/kMeans.test.js"
    ],
    "number": 152,
    "pdgs": [
      {
        "pdgTitle": "KMeans([[],[],[]], 3)",
        "uniqueTitle": "KMeans([[],[],[]], 3)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/ml/k-means/kMeans.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 37,
              "index": 425
            },
            "end": {
              "line": 94,
              "column": 1,
              "index": 3494
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
          "loc": {
            "start": {
              "line": 42,
              "column": 60,
              "index": 924
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1122
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "ml",
    "chapter": "k-means",
    "algo": "k-means_kMeans",
    "name": "kMeans should find the nearest neighbour in 3D space@kMeans.test.js",
    "label": "kMeans should find the nearest neighbour in 3D space",
    "testNamePattern": "kMeans should find the nearest neighbour in 3D space",
    "testFilePaths": [
      "src/algorithms/ml/k-means/__test__/kMeans.test.js"
    ],
    "number": 153,
    "pdgs": [
      {
        "pdgTitle": "KMeans([[],[],[]], 2)",
        "uniqueTitle": "KMeans([[],[],[]], 2)#6",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/ml/k-means/kMeans.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 37,
              "index": 425
            },
            "end": {
              "line": 94,
              "column": 1,
              "index": 3494
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/k-means/__test__/kMeans.test.js",
          "loc": {
            "start": {
              "line": 53,
              "column": 60,
              "index": 1188
            },
            "end": {
              "line": 62,
              "column": 3,
              "index": 1395
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "ml",
    "chapter": "knn",
    "algo": "knn_knn",
    "name": "kNN should throw an error on invalid data@knn.test.js",
    "label": "kNN should throw an error on invalid data",
    "testNamePattern": "kNN should throw an error on invalid data",
    "testFilePaths": [
      "src/algorithms/ml/knn/__test__/knn.test.js"
    ],
    "number": 154,
    "pdgs": [
      {
        "pdgTitle": "kNN()",
        "uniqueTitle": "kNN()#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/ml/knn/kNN.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 57,
              "index": 633
            },
            "end": {
              "line": 58,
              "column": 1,
              "index": 2073
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 17,
              "index": 126
            },
            "end": {
              "line": 7,
              "column": 5,
              "index": 148
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "ml",
    "chapter": "knn",
    "algo": "knn_knn",
    "name": "kNN should throw an error on invalid labels@knn.test.js",
    "label": "kNN should throw an error on invalid labels",
    "testNamePattern": "kNN should throw an error on invalid labels",
    "testFilePaths": [
      "src/algorithms/ml/knn/__test__/knn.test.js"
    ],
    "number": 155,
    "pdgs": [
      {
        "pdgTitle": "kNN([[]])",
        "uniqueTitle": "kNN([[]])#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/ml/knn/kNN.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 57,
              "index": 633
            },
            "end": {
              "line": 58,
              "column": 1,
              "index": 2073
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 27,
              "index": 313
            },
            "end": {
              "line": 13,
              "column": 5,
              "index": 343
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "ml",
    "chapter": "knn",
    "algo": "knn_knn",
    "name": "kNN should throw an error on not giving classification vector@knn.test.js",
    "label": "kNN should throw an error on not giving classification vector",
    "testNamePattern": "kNN should throw an error on not giving classification vector",
    "testFilePaths": [
      "src/algorithms/ml/knn/__test__/knn.test.js"
    ],
    "number": 156,
    "pdgs": [
      {
        "pdgTitle": "kNN([[]], [1])",
        "uniqueTitle": "kNN([[]], [1])#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/ml/knn/kNN.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 57,
              "index": 633
            },
            "end": {
              "line": 58,
              "column": 1,
              "index": 2073
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 35,
              "index": 570
            },
            "end": {
              "line": 22,
              "column": 5,
              "index": 605
            }
          }
        }
      },
      {
        "pdgTitle": "kNN([[]], [1], [1])",
        "uniqueTitle": "kNN([[]], [1], [1])#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/ml/knn/kNN.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 57,
              "index": 633
            },
            "end": {
              "line": 58,
              "column": 1,
              "index": 2073
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
          "loc": {
            "start": {
              "line": 29,
              "column": 31,
              "index": 836
            },
            "end": {
              "line": 31,
              "column": 5,
              "index": 876
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "ml",
    "chapter": "knn",
    "algo": "knn_knn",
    "name": "kNN should find the nearest neighbour@knn.test.js",
    "label": "kNN should find the nearest neighbour",
    "testNamePattern": "kNN should find the nearest neighbour",
    "testFilePaths": [
      "src/algorithms/ml/knn/__test__/knn.test.js"
    ],
    "number": 157,
    "pdgs": [
      {
        "pdgTitle": "kNN([[],[]], [1,2], [1,1])",
        "uniqueTitle": "kNN([[],[]], [1,2], [1,1])#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/ml/knn/kNN.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 57,
              "index": 633
            },
            "end": {
              "line": 58,
              "column": 1,
              "index": 2073
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
          "loc": {
            "start": {
              "line": 35,
              "column": 48,
              "index": 1010
            },
            "end": {
              "line": 77,
              "column": 3,
              "index": 1879
            }
          }
        }
      },
      {
        "pdgTitle": "kNN([[],[],[],[],[],[],[]], [1,2,1,2,1,2,1], [1.25,1.25])",
        "uniqueTitle": "kNN([[],[],[],[],[],[],[]], [1,2,1,2,1,2,1], [1.25,1.25])#2",
        "contextId": 47,
        "algoLoc": {
          "filePath": "src/algorithms/ml/knn/kNN.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 57,
              "index": 633
            },
            "end": {
              "line": 58,
              "column": 1,
              "index": 2073
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
          "loc": {
            "start": {
              "line": 35,
              "column": 48,
              "index": 1010
            },
            "end": {
              "line": 77,
              "column": 3,
              "index": 1879
            }
          }
        }
      },
      {
        "pdgTitle": "kNN([[],[],[],[],[],[],[]], [1,2,1,2,1,2,1], [1.25,1.25], 5)",
        "uniqueTitle": "kNN([[],[],[],[],[],[],[]], [1,2,1,2,1,2,1], [1.25,1.25], 5)#2",
        "contextId": 193,
        "algoLoc": {
          "filePath": "src/algorithms/ml/knn/kNN.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 57,
              "index": 633
            },
            "end": {
              "line": 58,
              "column": 1,
              "index": 2073
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
          "loc": {
            "start": {
              "line": 35,
              "column": 48,
              "index": 1010
            },
            "end": {
              "line": 77,
              "column": 3,
              "index": 1879
            }
          }
        }
      },
      {
        "pdgTitle": "kNN([[],[],[]], [1,3,3], [0,1])",
        "uniqueTitle": "kNN([[],[],[]], [1,3,3], [0,1])#3",
        "contextId": 340,
        "algoLoc": {
          "filePath": "src/algorithms/ml/knn/kNN.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 57,
              "index": 633
            },
            "end": {
              "line": 58,
              "column": 1,
              "index": 2073
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
          "loc": {
            "start": {
              "line": 79,
              "column": 69,
              "index": 1954
            },
            "end": {
              "line": 89,
              "column": 3,
              "index": 2196
            }
          }
        }
      },
      {
        "pdgTitle": "kNN([[],[],[]], [1,3,3], [0,0,1])",
        "uniqueTitle": "kNN([[],[],[]], [1,3,3], [0,0,1])#3",
        "contextId": 401,
        "algoLoc": {
          "filePath": "src/algorithms/ml/knn/kNN.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 57,
              "index": 633
            },
            "end": {
              "line": 58,
              "column": 1,
              "index": 2073
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
          "loc": {
            "start": {
              "line": 91,
              "column": 60,
              "index": 2262
            },
            "end": {
              "line": 101,
              "column": 3,
              "index": 2516
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "ml",
    "chapter": "knn",
    "algo": "knn_knn",
    "name": "kNN should find the nearest neighbour with equal distances@knn.test.js",
    "label": "kNN should find the nearest neighbour with equal distances",
    "testNamePattern": "kNN should find the nearest neighbour with equal distances",
    "testFilePaths": [
      "src/algorithms/ml/knn/__test__/knn.test.js"
    ],
    "number": 158,
    "pdgs": [
      {
        "pdgTitle": "kNN([[],[],[]], [1,3,3], [0,1])",
        "uniqueTitle": "kNN([[],[],[]], [1,3,3], [0,1])#4",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/ml/knn/kNN.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 57,
              "index": 633
            },
            "end": {
              "line": 58,
              "column": 1,
              "index": 2073
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
          "loc": {
            "start": {
              "line": 79,
              "column": 69,
              "index": 1954
            },
            "end": {
              "line": 89,
              "column": 3,
              "index": 2196
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "ml",
    "chapter": "knn",
    "algo": "knn_knn",
    "name": "kNN should find the nearest neighbour in 3D space@knn.test.js",
    "label": "kNN should find the nearest neighbour in 3D space",
    "testNamePattern": "kNN should find the nearest neighbour in 3D space",
    "testFilePaths": [
      "src/algorithms/ml/knn/__test__/knn.test.js"
    ],
    "number": 159,
    "pdgs": [
      {
        "pdgTitle": "kNN([[],[],[]], [1,3,3], [0,0,1])",
        "uniqueTitle": "kNN([[],[],[]], [1,3,3], [0,0,1])#4",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/ml/knn/kNN.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 57,
              "index": 633
            },
            "end": {
              "line": 58,
              "column": 1,
              "index": 2073
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/ml/knn/__test__/knn.test.js",
          "loc": {
            "start": {
              "line": 91,
              "column": 60,
              "index": 2262
            },
            "end": {
              "line": 101,
              "column": 3,
              "index": 2516
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "search",
    "chapter": "binary-search",
    "algo": "binary-search_binarySearch",
    "name": "binarySearch should search number in sorted array@binarySearch.test.js",
    "label": "binarySearch should search number in sorted array",
    "testNamePattern": "binarySearch should search number in sorted array",
    "testFilePaths": [
      "src/algorithms/search/binary-search/__test__/binarySearch.test.js"
    ],
    "number": 160,
    "pdgs": [
      {
        "pdgTitle": "binarySearch([], 1)",
        "uniqueTitle": "binarySearch([], 1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 658
            }
          }
        }
      },
      {
        "pdgTitle": "binarySearch([1], 1)",
        "uniqueTitle": "binarySearch([1], 1)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 658
            }
          }
        }
      },
      {
        "pdgTitle": "binarySearch([1,2], 1)",
        "uniqueTitle": "binarySearch([1,2], 1)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 658
            }
          }
        }
      },
      {
        "pdgTitle": "binarySearch([1,2], 2)",
        "uniqueTitle": "binarySearch([1,2], 2)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 658
            }
          }
        }
      },
      {
        "pdgTitle": "binarySearch([1,5,10,12], 1)",
        "uniqueTitle": "binarySearch([1,5,10,12], 1)#2",
        "contextId": 24,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 658
            }
          }
        }
      },
      {
        "pdgTitle": "binarySearch([1,5,10,12,14,17,22,100], 17)",
        "uniqueTitle": "binarySearch([1,5,10,12,14,17,22,100], 17)#2",
        "contextId": 32,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 658
            }
          }
        }
      },
      {
        "pdgTitle": "binarySearch([1,5,10,12,14,17,22,100], 1)",
        "uniqueTitle": "binarySearch([1,5,10,12,14,17,22,100], 1)#2",
        "contextId": 40,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 658
            }
          }
        }
      },
      {
        "pdgTitle": "binarySearch([1,5,10,12,14,17,22,100], 100)",
        "uniqueTitle": "binarySearch([1,5,10,12,14,17,22,100], 100)#2",
        "contextId": 52,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 658
            }
          }
        }
      },
      {
        "pdgTitle": "binarySearch([1,5,10,12,14,17,22,100], 0)",
        "uniqueTitle": "binarySearch([1,5,10,12,14,17,22,100], 0)#2",
        "contextId": 68,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 132
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 658
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "search",
    "chapter": "binary-search",
    "algo": "binary-search_binarySearch",
    "name": "binarySearch should search object in sorted array@binarySearch.test.js",
    "label": "binarySearch should search object in sorted array",
    "testNamePattern": "binarySearch should search object in sorted array",
    "testFilePaths": [
      "src/algorithms/search/binary-search/__test__/binarySearch.test.js"
    ],
    "number": 161,
    "pdgs": [
      {
        "pdgTitle": "binarySearch([], {key}, ƒ (anonymous))",
        "uniqueTitle": "binarySearch([], {key}, ƒ (anonymous))#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 51,
              "index": 715
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1386
            }
          }
        }
      },
      {
        "pdgTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))",
        "uniqueTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))#5",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 51,
              "index": 715
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1386
            }
          }
        }
      },
      {
        "pdgTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))",
        "uniqueTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))#6",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 51,
              "index": 715
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1386
            }
          }
        }
      },
      {
        "pdgTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))",
        "uniqueTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))#7",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 51,
              "index": 715
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1386
            }
          }
        }
      },
      {
        "pdgTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))",
        "uniqueTitle": "binarySearch([{},{},{}], {key}, ƒ (anonymous))#8",
        "contextId": 30,
        "algoLoc": {
          "filePath": "src/algorithms/search/binary-search/binarySearch.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 2,
              "index": 337
            },
            "end": {
              "line": 48,
              "column": 1,
              "index": 1548
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/binary-search/__test__/binarySearch.test.js",
          "loc": {
            "start": {
              "line": 16,
              "column": 51,
              "index": 715
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1386
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "search",
    "chapter": "interpolation-search",
    "algo": "interpolation-search_interpolationSearch",
    "name": "interpolationSearch should search elements in sorted array of numbers@interpolationSearch.test.js",
    "label": "interpolationSearch should search elements in sorted array of numbers",
    "testNamePattern": "interpolationSearch should search elements in sorted array of numbers",
    "testFilePaths": [
      "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js"
    ],
    "number": 162,
    "pdgs": [
      {
        "pdgTitle": "interpolationSearch([], 1)",
        "uniqueTitle": "interpolationSearch([], 1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1], 1)",
        "uniqueTitle": "interpolationSearch([1], 1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1], 0)",
        "uniqueTitle": "interpolationSearch([1], 0)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1,1], 1)",
        "uniqueTitle": "interpolationSearch([1,1], 1)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1,2], 1)",
        "uniqueTitle": "interpolationSearch([1,2], 1)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1,2], 2)",
        "uniqueTitle": "interpolationSearch([1,2], 2)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([10,20,30,40,50], 40)",
        "uniqueTitle": "interpolationSearch([10,20,30,40,50], 40)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 14)",
        "uniqueTitle": "interpolationSearch([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], 14)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1,6,7,8,12,13,14,19,21,23,24,24,24,300], 24)",
        "uniqueTitle": "interpolationSearch([1,6,7,8,12,13,14,19,21,23,24,24,24,300], 24)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 600)",
        "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 600)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 1)",
        "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 1)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 2)",
        "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 2)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 3)",
        "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 3)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 700)",
        "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 700)#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 800)",
        "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,1900], 800)#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([0,2,3,700,800,1200,1300,1400,1900], 1200)",
        "uniqueTitle": "interpolationSearch([0,2,3,700,800,1200,1300,1400,1900], 1200)#2",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,19000], 800)",
        "uniqueTitle": "interpolationSearch([1,2,3,700,800,1200,1300,1400,19000], 800)#2",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      },
      {
        "pdgTitle": "interpolationSearch([0,10,11,12,13,14,15], 10)",
        "uniqueTitle": "interpolationSearch([0,10,11,12,13,14,15], 10)#2",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/search/interpolation-search/interpolationSearch.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 70,
              "index": 251
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1807
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/interpolation-search/__test__/interpolationSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 166
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1754
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "search",
    "chapter": "jump-search",
    "algo": "jump-search_jumpSearch",
    "name": "jumpSearch should search for an element in sorted array@jumpSearch.test.js",
    "label": "jumpSearch should search for an element in sorted array",
    "testNamePattern": "jumpSearch should search for an element in sorted array",
    "testFilePaths": [
      "src/algorithms/search/jump-search/__test__/jumpSearch.test.js"
    ],
    "number": 163,
    "pdgs": [
      {
        "pdgTitle": "jumpSearch([], 1)",
        "uniqueTitle": "jumpSearch([], 1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([1], 2)",
        "uniqueTitle": "jumpSearch([1], 2)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([1], 1)",
        "uniqueTitle": "jumpSearch([1], 1)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([1,2], 1)",
        "uniqueTitle": "jumpSearch([1,2], 1)#3",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([1,2], 1)",
        "uniqueTitle": "jumpSearch([1,2], 1)#4",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([1,1,1], 1)",
        "uniqueTitle": "jumpSearch([1,1,1], 1)#2",
        "contextId": 32,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 2)",
        "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 2)#2",
        "contextId": 38,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 0)",
        "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 0)#3",
        "contextId": 46,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 0)",
        "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 0)#4",
        "contextId": 56,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 7)",
        "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 7)#2",
        "contextId": 66,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 5)",
        "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 5)#2",
        "contextId": 78,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 20)",
        "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 20)#2",
        "contextId": 88,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 30)",
        "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 30)#2",
        "contextId": 98,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 48)",
        "uniqueTitle": "jumpSearch([1,2,5,10,20,21,24,30,48], 48)#2",
        "contextId": 110,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 134
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 973
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "search",
    "chapter": "jump-search",
    "algo": "jump-search_jumpSearch",
    "name": "jumpSearch should search object in sorted array@jumpSearch.test.js",
    "label": "jumpSearch should search object in sorted array",
    "testNamePattern": "jumpSearch should search object in sorted array",
    "testFilePaths": [
      "src/algorithms/search/jump-search/__test__/jumpSearch.test.js"
    ],
    "number": 164,
    "pdgs": [
      {
        "pdgTitle": "jumpSearch([], {key}, ƒ (anonymous))",
        "uniqueTitle": "jumpSearch([], {key}, ƒ (anonymous))#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 51,
              "index": 1030
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1691
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))",
        "uniqueTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))#5",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 51,
              "index": 1030
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1691
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))",
        "uniqueTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))#6",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 51,
              "index": 1030
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1691
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))",
        "uniqueTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))#7",
        "contextId": 24,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 51,
              "index": 1030
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1691
            }
          }
        }
      },
      {
        "pdgTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))",
        "uniqueTitle": "jumpSearch([{},{},{}], {key}, ƒ (anonymous))#8",
        "contextId": 32,
        "algoLoc": {
          "filePath": "src/algorithms/search/jump-search/jumpSearch.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 2,
              "index": 339
            },
            "end": {
              "line": 60,
              "column": 1,
              "index": 1635
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/jump-search/__test__/jumpSearch.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 51,
              "index": 1030
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1691
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "search",
    "chapter": "linear-search",
    "algo": "linear-search_linearSearch",
    "name": "linearSearch should search all numbers in array@linearSearch.test.js",
    "label": "linearSearch should search all numbers in array",
    "testNamePattern": "linearSearch should search all numbers in array",
    "testFilePaths": [
      "src/algorithms/search/linear-search/__test__/linearSearch.test.js"
    ],
    "number": 165,
    "pdgs": [
      {
        "pdgTitle": "linearSearch([1,2,4,6,2], 10)",
        "uniqueTitle": "linearSearch([1,2,4,6,2], 10)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/search/linear-search/linearSearch.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 77,
              "index": 313
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 568
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 49,
              "index": 130
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 327
            }
          }
        }
      },
      {
        "pdgTitle": "linearSearch([1,2,4,6,2], 1)",
        "uniqueTitle": "linearSearch([1,2,4,6,2], 1)#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/search/linear-search/linearSearch.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 77,
              "index": 313
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 568
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 49,
              "index": 130
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 327
            }
          }
        }
      },
      {
        "pdgTitle": "linearSearch([1,2,4,6,2], 2)",
        "uniqueTitle": "linearSearch([1,2,4,6,2], 2)#2",
        "contextId": 40,
        "algoLoc": {
          "filePath": "src/algorithms/search/linear-search/linearSearch.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 77,
              "index": 313
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 568
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 49,
              "index": 130
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 327
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "search",
    "chapter": "linear-search",
    "algo": "linear-search_linearSearch",
    "name": "linearSearch should search all strings in array@linearSearch.test.js",
    "label": "linearSearch should search all strings in array",
    "testNamePattern": "linearSearch should search all strings in array",
    "testFilePaths": [
      "src/algorithms/search/linear-search/__test__/linearSearch.test.js"
    ],
    "number": 166,
    "pdgs": [
      {
        "pdgTitle": "linearSearch([\"a\",\"b\",\"a\"], c)",
        "uniqueTitle": "linearSearch([\"a\",\"b\",\"a\"], c)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/search/linear-search/linearSearch.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 77,
              "index": 313
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 568
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 49,
              "index": 382
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 584
            }
          }
        }
      },
      {
        "pdgTitle": "linearSearch([\"a\",\"b\",\"a\"], b)",
        "uniqueTitle": "linearSearch([\"a\",\"b\",\"a\"], b)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/search/linear-search/linearSearch.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 77,
              "index": 313
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 568
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 49,
              "index": 382
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 584
            }
          }
        }
      },
      {
        "pdgTitle": "linearSearch([\"a\",\"b\",\"a\"], a)",
        "uniqueTitle": "linearSearch([\"a\",\"b\",\"a\"], a)#2",
        "contextId": 28,
        "algoLoc": {
          "filePath": "src/algorithms/search/linear-search/linearSearch.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 77,
              "index": 313
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 568
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 49,
              "index": 382
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 584
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "search",
    "chapter": "linear-search",
    "algo": "linear-search_linearSearch",
    "name": "linearSearch should search through objects as well@linearSearch.test.js",
    "label": "linearSearch should search through objects as well",
    "testNamePattern": "linearSearch should search through objects as well",
    "testFilePaths": [
      "src/algorithms/search/linear-search/__test__/linearSearch.test.js"
    ],
    "number": 167,
    "pdgs": [
      {
        "pdgTitle": "linearSearch([{},{},{},{}], {key}, ƒ (anonymous))",
        "uniqueTitle": "linearSearch([{},{},{},{}], {key}, ƒ (anonymous))#4",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/search/linear-search/linearSearch.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 77,
              "index": 313
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 568
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 52,
              "index": 642
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1112
            }
          }
        }
      },
      {
        "pdgTitle": "linearSearch([{},{},{},{}], {key}, ƒ (anonymous))",
        "uniqueTitle": "linearSearch([{},{},{},{}], {key}, ƒ (anonymous))#5",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/search/linear-search/linearSearch.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 77,
              "index": 313
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 568
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 52,
              "index": 642
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1112
            }
          }
        }
      },
      {
        "pdgTitle": "linearSearch([{},{},{},{}], {key}, ƒ (anonymous))",
        "uniqueTitle": "linearSearch([{},{},{},{}], {key}, ƒ (anonymous))#6",
        "contextId": 34,
        "algoLoc": {
          "filePath": "src/algorithms/search/linear-search/linearSearch.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 77,
              "index": 313
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 568
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/search/linear-search/__test__/linearSearch.test.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 52,
              "index": 642
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1112
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "cartesian-product",
    "algo": "cartesian-product_cartesianProduct",
    "name": "cartesianProduct should return null if there is not enough info for calculation@cartesianProduct.test.js",
    "label": "cartesianProduct should return null if there is not enough info for calculation",
    "testNamePattern": "cartesianProduct should return null if there is not enough info for calculation",
    "testFilePaths": [
      "src/algorithms/sets/cartesian-product/__test__/cartesianProduct.test.js"
    ],
    "number": 168,
    "pdgs": [
      {
        "pdgTitle": "cartesianProduct([1], null)",
        "uniqueTitle": "cartesianProduct([1], null)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/sets/cartesian-product/cartesianProduct.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 53,
              "index": 170
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 824
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/cartesian-product/__test__/cartesianProduct.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 170
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 347
            }
          }
        }
      },
      {
        "pdgTitle": "cartesianProduct([], null)",
        "uniqueTitle": "cartesianProduct([], null)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/sets/cartesian-product/cartesianProduct.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 53,
              "index": 170
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 824
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/cartesian-product/__test__/cartesianProduct.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 170
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 347
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "cartesian-product",
    "algo": "cartesian-product_cartesianProduct",
    "name": "cartesianProduct should calculate the product of two sets@cartesianProduct.test.js",
    "label": "cartesianProduct should calculate the product of two sets",
    "testNamePattern": "cartesianProduct should calculate the product of two sets",
    "testFilePaths": [
      "src/algorithms/sets/cartesian-product/__test__/cartesianProduct.test.js"
    ],
    "number": 169,
    "pdgs": [
      {
        "pdgTitle": "cartesianProduct([1], [1])",
        "uniqueTitle": "cartesianProduct([1], [1])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/sets/cartesian-product/cartesianProduct.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 53,
              "index": 170
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 824
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/cartesian-product/__test__/cartesianProduct.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 55,
              "index": 408
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 664
            }
          }
        }
      },
      {
        "pdgTitle": "cartesianProduct([1,2], [3,5])",
        "uniqueTitle": "cartesianProduct([1,2], [3,5])#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/sets/cartesian-product/cartesianProduct.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 53,
              "index": 170
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 824
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/cartesian-product/__test__/cartesianProduct.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 55,
              "index": 408
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 664
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "combination-sum",
    "algo": "combination-sum_combinationSum",
    "name": "combinationSum should find all combinations with specific sum@combinationSum.test.js",
    "label": "combinationSum should find all combinations with specific sum",
    "testNamePattern": "combinationSum should find all combinations with specific sum",
    "testFilePaths": [
      "src/algorithms/sets/combination-sum/__test__/combinationSum.test.js"
    ],
    "number": 170,
    "pdgs": [
      {
        "pdgTitle": "combinationSum([1], 4)",
        "uniqueTitle": "combinationSum([1], 4)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combination-sum/combinationSum.js",
          "loc": {
            "start": {
              "line": 67,
              "column": 59,
              "index": 2342
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2401
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combination-sum/__test__/combinationSum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 61,
              "index": 148
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 510
            }
          }
        }
      },
      {
        "pdgTitle": "combinationSum([2,3,6,7], 7)",
        "uniqueTitle": "combinationSum([2,3,6,7], 7)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combination-sum/combinationSum.js",
          "loc": {
            "start": {
              "line": 67,
              "column": 59,
              "index": 2342
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2401
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combination-sum/__test__/combinationSum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 61,
              "index": 148
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 510
            }
          }
        }
      },
      {
        "pdgTitle": "combinationSum([2,3,5], 8)",
        "uniqueTitle": "combinationSum([2,3,5], 8)#2",
        "contextId": 40,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combination-sum/combinationSum.js",
          "loc": {
            "start": {
              "line": 67,
              "column": 59,
              "index": 2342
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2401
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combination-sum/__test__/combinationSum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 61,
              "index": 148
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 510
            }
          }
        }
      },
      {
        "pdgTitle": "combinationSum([2,5], 3)",
        "uniqueTitle": "combinationSum([2,5], 3)#2",
        "contextId": 64,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combination-sum/combinationSum.js",
          "loc": {
            "start": {
              "line": 67,
              "column": 59,
              "index": 2342
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2401
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combination-sum/__test__/combinationSum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 61,
              "index": 148
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 510
            }
          }
        }
      },
      {
        "pdgTitle": "combinationSum([], 3)",
        "uniqueTitle": "combinationSum([], 3)#2",
        "contextId": 70,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combination-sum/combinationSum.js",
          "loc": {
            "start": {
              "line": 67,
              "column": 59,
              "index": 2342
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2401
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combination-sum/__test__/combinationSum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 61,
              "index": 148
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 510
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "combinations",
    "algo": "combinations_combineWithoutRepetitions",
    "name": "combineWithoutRepetitions should combine string without repetitions@combineWithoutRepetitions.test.js",
    "label": "combineWithoutRepetitions should combine string without repetitions",
    "testNamePattern": "combineWithoutRepetitions should combine string without repetitions",
    "testFilePaths": [
      "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js"
    ],
    "number": 171,
    "pdgs": [
      {
        "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\"], 3)",
        "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\"], 3)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 77,
              "index": 167
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1074
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 312
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 1994
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\"], 1)",
        "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\"], 1)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 77,
              "index": 167
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1074
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 312
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 1994
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithoutRepetitions([\"A\"], 1)",
        "uniqueTitle": "combineWithoutRepetitions([\"A\"], 1)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 77,
              "index": 167
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1074
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 312
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 1994
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\"], 2)",
        "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\"], 2)#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 77,
              "index": 167
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1074
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 312
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 1994
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\"], 2)",
        "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\"], 2)#2",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 77,
              "index": 167
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1074
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 312
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 1994
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\"], 3)",
        "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\"], 3)#2",
        "contextId": 39,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 77,
              "index": 167
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1074
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 312
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 1994
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\",\"D\"], 3)",
        "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\",\"D\"], 3)#2",
        "contextId": 55,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 77,
              "index": 167
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1074
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 312
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 1994
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\"], 3)",
        "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\"], 3)#2",
        "contextId": 88,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 77,
              "index": 167
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1074
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 312
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 1994
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\"], 4)",
        "uniqueTitle": "combineWithoutRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\"], 4)#2",
        "contextId": 149,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 77,
              "index": 167
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1074
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 312
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 1994
            }
          }
        }
      },
      {
        "pdgTitle": "factorial(8)",
        "uniqueTitle": "factorial(8)#4",
        "contextId": 614,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 312
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 1994
            }
          }
        }
      },
      {
        "pdgTitle": "factorial(4)",
        "uniqueTitle": "factorial(4)#5",
        "contextId": 615,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 312
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 1994
            }
          }
        }
      },
      {
        "pdgTitle": "factorial(4)",
        "uniqueTitle": "factorial(4)#6",
        "contextId": 616,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 312
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 1994
            }
          }
        }
      },
      {
        "pdgTitle": "pascalTriangle(8)",
        "uniqueTitle": "pascalTriangle(8)#2",
        "contextId": 617,
        "algoLoc": {
          "filePath": "src/algorithms/math/pascal-triangle/pascalTriangle.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 129
            },
            "end": {
              "line": 17,
              "column": 1,
              "index": 466
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 56,
              "index": 312
            },
            "end": {
              "line": 60,
              "column": 3,
              "index": 1994
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "combinations",
    "algo": "combinations_combineWithRepetitions",
    "name": "combineWithRepetitions should combine string with repetitions@combineWithRepetitions.test.js",
    "label": "combineWithRepetitions should combine string with repetitions",
    "testNamePattern": "combineWithRepetitions should combine string with repetitions",
    "testFilePaths": [
      "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js"
    ],
    "number": 172,
    "pdgs": [
      {
        "pdgTitle": "combineWithRepetitions([\"A\"], 1)",
        "uniqueTitle": "combineWithRepetitions([\"A\"], 1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 74,
              "index": 164
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1046
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 224
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1666
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithRepetitions([\"A\",\"B\"], 1)",
        "uniqueTitle": "combineWithRepetitions([\"A\",\"B\"], 1)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 74,
              "index": 164
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1046
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 224
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1666
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithRepetitions([\"A\",\"B\"], 2)",
        "uniqueTitle": "combineWithRepetitions([\"A\",\"B\"], 2)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 74,
              "index": 164
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1046
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 224
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1666
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithRepetitions([\"A\",\"B\"], 3)",
        "uniqueTitle": "combineWithRepetitions([\"A\",\"B\"], 3)#2",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 74,
              "index": 164
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1046
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 224
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1666
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithRepetitions([\"A\",\"B\",\"C\"], 2)",
        "uniqueTitle": "combineWithRepetitions([\"A\",\"B\",\"C\"], 2)#2",
        "contextId": 45,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 74,
              "index": 164
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1046
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 224
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1666
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithRepetitions([\"A\",\"B\",\"C\"], 3)",
        "uniqueTitle": "combineWithRepetitions([\"A\",\"B\",\"C\"], 3)#2",
        "contextId": 64,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 74,
              "index": 164
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1046
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 224
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1666
            }
          }
        }
      },
      {
        "pdgTitle": "combineWithRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\"], 4)",
        "uniqueTitle": "combineWithRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\"], 4)#2",
        "contextId": 113,
        "algoLoc": {
          "filePath": "src/algorithms/sets/combinations/combineWithRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 74,
              "index": 164
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 1046
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 224
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1666
            }
          }
        }
      },
      {
        "pdgTitle": "factorial(11)",
        "uniqueTitle": "factorial(11)#2",
        "contextId": 1762,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 224
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1666
            }
          }
        }
      },
      {
        "pdgTitle": "factorial(4)",
        "uniqueTitle": "factorial(4)#7",
        "contextId": 1763,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 224
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1666
            }
          }
        }
      },
      {
        "pdgTitle": "factorial(7)",
        "uniqueTitle": "factorial(7)#2",
        "contextId": 1764,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/combinations/__test__/combineWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 53,
              "index": 224
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1666
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "fisher-yates",
    "algo": "fisher-yates_fisherYates",
    "name": "fisherYates should shuffle small arrays@fisherYates.test.js",
    "label": "fisherYates should shuffle small arrays",
    "testNamePattern": "fisherYates should shuffle small arrays",
    "testFilePaths": [
      "src/algorithms/sets/fisher-yates/__test__/fisherYates.test.js"
    ],
    "number": 173,
    "pdgs": [
      {
        "pdgTitle": "fisherYates([])",
        "uniqueTitle": "fisherYates([])#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/sets/fisher-yates/fisherYates.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 110
            },
            "end": {
              "line": 17,
              "column": 1,
              "index": 492
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/fisher-yates/__test__/fisherYates.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 42,
              "index": 242
            },
            "end": {
              "line": 9,
              "column": 3,
              "index": 334
            }
          }
        }
      },
      {
        "pdgTitle": "fisherYates([1])",
        "uniqueTitle": "fisherYates([1])#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/sets/fisher-yates/fisherYates.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 110
            },
            "end": {
              "line": 17,
              "column": 1,
              "index": 492
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/fisher-yates/__test__/fisherYates.test.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 42,
              "index": 242
            },
            "end": {
              "line": 9,
              "column": 3,
              "index": 334
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "fisher-yates",
    "algo": "fisher-yates_fisherYates",
    "name": "fisherYates should shuffle array randomly@fisherYates.test.js",
    "label": "fisherYates should shuffle array randomly",
    "testNamePattern": "fisherYates should shuffle array randomly",
    "testFilePaths": [
      "src/algorithms/sets/fisher-yates/__test__/fisherYates.test.js"
    ],
    "number": 174,
    "pdgs": [
      {
        "pdgTitle": "fisherYates([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "fisherYates([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/sets/fisher-yates/fisherYates.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 110
            },
            "end": {
              "line": 17,
              "column": 1,
              "index": 492
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/fisher-yates/__test__/fisherYates.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 44,
              "index": 384
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 649
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([17,7,10,16,4,18,3,14,9,8,5,13,11,6,19,12,2,15,1,20])",
        "uniqueTitle": "QuickSort.sort([17,7,10,16,4,18,3,14,9,8,5,13,11,6,19,12,2,15,1,20])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/fisher-yates/__test__/fisherYates.test.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 44,
              "index": 384
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 649
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "knapsack-problem",
    "algo": "knapsack-problem_Knapsack",
    "name": "Knapsack should solve 0/1 knapsack problem@Knapsack.test.js",
    "label": "Knapsack should solve 0/1 knapsack problem",
    "testNamePattern": "Knapsack should solve 0/1 knapsack problem",
    "testFilePaths": [
      "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js"
    ],
    "number": 175,
    "pdgs": [
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#39",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 48,
              "index": 162
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 853
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#40",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 48,
              "index": 162
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 853
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#41",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 48,
              "index": 162
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 853
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#42",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 48,
              "index": 162
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 853
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.constructor([{},{},{},{}], 7)",
        "uniqueTitle": "Knapsack.constructor([{},{},{},{}], 7)#6",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 42,
              "index": 230
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 48,
              "index": 162
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 853
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
        "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()#8",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 64,
              "column": 32,
              "index": 1691
            },
            "end": {
              "line": 175,
              "column": 3,
              "index": 5939
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 48,
              "index": 162
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 853
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#77",
        "contextId": 110,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 48,
              "index": 162
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 853
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#78",
        "contextId": 112,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 48,
              "index": 162
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 853
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#79",
        "contextId": 115,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 48,
              "index": 162
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 853
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#80",
        "contextId": 117,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 48,
              "index": 162
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 853
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#42",
        "contextId": 119,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 48,
              "index": 162
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 853
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#43",
        "contextId": 120,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 48,
              "index": 162
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 853
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#43",
        "contextId": 122,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#44",
        "contextId": 123,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#45",
        "contextId": 124,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#46",
        "contextId": 125,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.constructor([{},{},{},{}], 7)",
        "uniqueTitle": "Knapsack.constructor([{},{},{},{}], 7)#7",
        "contextId": 126,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 42,
              "index": 230
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
        "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()#9",
        "contextId": 127,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 64,
              "column": 32,
              "index": 1691
            },
            "end": {
              "line": 175,
              "column": 3,
              "index": 5939
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#81",
        "contextId": 223,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#82",
        "contextId": 225,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#83",
        "contextId": 228,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#84",
        "contextId": 230,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#44",
        "contextId": 232,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#45",
        "contextId": 233,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#47",
        "contextId": 235,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 74,
              "index": 1704
            },
            "end": {
              "line": 64,
              "column": 3,
              "index": 2261
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#48",
        "contextId": 236,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 74,
              "index": 1704
            },
            "end": {
              "line": 64,
              "column": 3,
              "index": 2261
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#49",
        "contextId": 237,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 74,
              "index": 1704
            },
            "end": {
              "line": 64,
              "column": 3,
              "index": 2261
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#50",
        "contextId": 238,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 74,
              "index": 1704
            },
            "end": {
              "line": 64,
              "column": 3,
              "index": 2261
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.constructor([{},{},{},{}], 7)",
        "uniqueTitle": "Knapsack.constructor([{},{},{},{}], 7)#8",
        "contextId": 239,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 42,
              "index": 230
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 74,
              "index": 1704
            },
            "end": {
              "line": 64,
              "column": 3,
              "index": 2261
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
        "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()#10",
        "contextId": 240,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 64,
              "column": 32,
              "index": 1691
            },
            "end": {
              "line": 175,
              "column": 3,
              "index": 5939
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 74,
              "index": 1704
            },
            "end": {
              "line": 64,
              "column": 3,
              "index": 2261
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#51",
        "contextId": 338,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#52",
        "contextId": 339,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#53",
        "contextId": 340,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#54",
        "contextId": 341,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#55",
        "contextId": 342,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#56",
        "contextId": 343,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.constructor([{},{},{},{},{},{}], 3)",
        "uniqueTitle": "Knapsack.constructor([{},{},{},{},{},{}], 3)#3",
        "contextId": 344,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 42,
              "index": 230
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
        "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()#11",
        "contextId": 345,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 64,
              "column": 32,
              "index": 1691
            },
            "end": {
              "line": 175,
              "column": 3,
              "index": 5939
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#85",
        "contextId": 511,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#86",
        "contextId": 513,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#87",
        "contextId": 515,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#88",
        "contextId": 518,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#89",
        "contextId": 520,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#90",
        "contextId": 522,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#46",
        "contextId": 524,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#47",
        "contextId": 525,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#48",
        "contextId": 526,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "knapsack-problem",
    "algo": "knapsack-problem_Knapsack",
    "name": "Knapsack should solve 0/1 knapsack problem regardless of items order@Knapsack.test.js",
    "label": "Knapsack should solve 0/1 knapsack problem regardless of items order",
    "testNamePattern": "Knapsack should solve 0/1 knapsack problem regardless of items order",
    "testFilePaths": [
      "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js"
    ],
    "number": 176,
    "pdgs": [
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#57",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#58",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#59",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#60",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.constructor([{},{},{},{}], 7)",
        "uniqueTitle": "Knapsack.constructor([{},{},{},{}], 7)#9",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 42,
              "index": 230
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
        "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()#12",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 64,
              "column": 32,
              "index": 1691
            },
            "end": {
              "line": 175,
              "column": 3,
              "index": 5939
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#91",
        "contextId": 110,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#92",
        "contextId": 112,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#93",
        "contextId": 115,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#94",
        "contextId": 117,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#49",
        "contextId": 119,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#50",
        "contextId": 120,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 74,
              "index": 933
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1624
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "knapsack-problem",
    "algo": "knapsack-problem_Knapsack",
    "name": "Knapsack should solve 0/1 knapsack problem with impossible items set@Knapsack.test.js",
    "label": "Knapsack should solve 0/1 knapsack problem with impossible items set",
    "testNamePattern": "Knapsack should solve 0/1 knapsack problem with impossible items set",
    "testFilePaths": [
      "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js"
    ],
    "number": 177,
    "pdgs": [
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#61",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 74,
              "index": 1704
            },
            "end": {
              "line": 64,
              "column": 3,
              "index": 2261
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#62",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 74,
              "index": 1704
            },
            "end": {
              "line": 64,
              "column": 3,
              "index": 2261
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#63",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 74,
              "index": 1704
            },
            "end": {
              "line": 64,
              "column": 3,
              "index": 2261
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#64",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 74,
              "index": 1704
            },
            "end": {
              "line": 64,
              "column": 3,
              "index": 2261
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.constructor([{},{},{},{}], 7)",
        "uniqueTitle": "Knapsack.constructor([{},{},{},{}], 7)#10",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 42,
              "index": 230
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 74,
              "index": 1704
            },
            "end": {
              "line": 64,
              "column": 3,
              "index": 2261
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
        "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()#13",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 64,
              "column": 32,
              "index": 1691
            },
            "end": {
              "line": 175,
              "column": 3,
              "index": 5939
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 74,
              "index": 1704
            },
            "end": {
              "line": 64,
              "column": 3,
              "index": 2261
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "knapsack-problem",
    "algo": "knapsack-problem_Knapsack",
    "name": "Knapsack should solve 0/1 knapsack problem with all equal weights@Knapsack.test.js",
    "label": "Knapsack should solve 0/1 knapsack problem with all equal weights",
    "testNamePattern": "Knapsack should solve 0/1 knapsack problem with all equal weights",
    "testFilePaths": [
      "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js"
    ],
    "number": 178,
    "pdgs": [
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#65",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#66",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#67",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#68",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#69",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#70",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.constructor([{},{},{},{},{},{}], 3)",
        "uniqueTitle": "Knapsack.constructor([{},{},{},{},{},{}], 3)#4",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 42,
              "index": 230
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.solveZeroOneKnapsackProblem()",
        "uniqueTitle": "Knapsack.solveZeroOneKnapsackProblem()#14",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 64,
              "column": 32,
              "index": 1691
            },
            "end": {
              "line": 175,
              "column": 3,
              "index": 5939
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#95",
        "contextId": 182,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#96",
        "contextId": 184,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#97",
        "contextId": 186,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#98",
        "contextId": 189,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#99",
        "contextId": 191,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#100",
        "contextId": 193,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#51",
        "contextId": 195,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#52",
        "contextId": 196,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#53",
        "contextId": 197,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 66,
              "column": 71,
              "index": 2338
            },
            "end": {
              "line": 88,
              "column": 3,
              "index": 3199
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "knapsack-problem",
    "algo": "knapsack-problem_Knapsack",
    "name": "Knapsack should solve unbound knapsack problem@Knapsack.test.js",
    "label": "Knapsack should solve unbound knapsack problem",
    "testNamePattern": "Knapsack should solve unbound knapsack problem",
    "testFilePaths": [
      "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js"
    ],
    "number": 179,
    "pdgs": [
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#71",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#72",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#73",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#74",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#75",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.constructor([{},{},{},{},{}], 15)",
        "uniqueTitle": "Knapsack.constructor([{},{},{},{},{}], 15)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 42,
              "index": 230
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.solveUnboundedKnapsackProblem()",
        "uniqueTitle": "Knapsack.solveUnboundedKnapsackProblem()#7",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 179,
              "column": 34,
              "index": 6040
            },
            "end": {
              "line": 210,
              "column": 3,
              "index": 7178
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#101",
        "contextId": 217,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#102",
        "contextId": 219,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#103",
        "contextId": 221,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#104",
        "contextId": 223,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#105",
        "contextId": 225,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#106",
        "contextId": 228,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#107",
        "contextId": 230,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#108",
        "contextId": 232,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#109",
        "contextId": 234,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#110",
        "contextId": 236,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#54",
        "contextId": 238,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#55",
        "contextId": 239,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#56",
        "contextId": 240,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#57",
        "contextId": 241,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#58",
        "contextId": 242,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 90,
              "column": 52,
              "index": 3257
            },
            "end": {
              "line": 113,
              "column": 3,
              "index": 4332
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#26",
        "contextId": 244,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#27",
        "contextId": 245,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#28",
        "contextId": 246,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#29",
        "contextId": 247,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#30",
        "contextId": 248,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.constructor([{},{},{},{},{}], 17)",
        "uniqueTitle": "Knapsack.constructor([{},{},{},{},{}], 17)#3",
        "contextId": 249,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 42,
              "index": 230
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.solveUnboundedKnapsackProblem()",
        "uniqueTitle": "Knapsack.solveUnboundedKnapsackProblem()#8",
        "contextId": 250,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 179,
              "column": 34,
              "index": 6040
            },
            "end": {
              "line": 210,
              "column": 3,
              "index": 7178
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#111",
        "contextId": 434,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#112",
        "contextId": 436,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#113",
        "contextId": 438,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#114",
        "contextId": 441,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#115",
        "contextId": 443,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#116",
        "contextId": 445,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#59",
        "contextId": 447,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#60",
        "contextId": 448,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#61",
        "contextId": 449,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#31",
        "contextId": 451,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#32",
        "contextId": 452,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#33",
        "contextId": 453,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#34",
        "contextId": 454,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#35",
        "contextId": 455,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.constructor([{},{},{},{},{}], 60)",
        "uniqueTitle": "Knapsack.constructor([{},{},{},{},{}], 60)#4",
        "contextId": 456,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 42,
              "index": 230
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.solveUnboundedKnapsackProblem()",
        "uniqueTitle": "Knapsack.solveUnboundedKnapsackProblem()#9",
        "contextId": 457,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 179,
              "column": 34,
              "index": 6040
            },
            "end": {
              "line": 210,
              "column": 3,
              "index": 7178
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#117",
        "contextId": 659,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#118",
        "contextId": 661,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#119",
        "contextId": 663,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#120",
        "contextId": 665,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#121",
        "contextId": 667,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#122",
        "contextId": 670,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#123",
        "contextId": 672,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#124",
        "contextId": 674,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#125",
        "contextId": 676,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#126",
        "contextId": 678,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#62",
        "contextId": 680,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#63",
        "contextId": 681,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#64",
        "contextId": 682,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#65",
        "contextId": 683,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#66",
        "contextId": 684,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "knapsack-problem",
    "algo": "knapsack-problem_Knapsack",
    "name": "Knapsack should solve unbound knapsack problem with items in stock@Knapsack.test.js",
    "label": "Knapsack should solve unbound knapsack problem with items in stock",
    "testNamePattern": "Knapsack should solve unbound knapsack problem with items in stock",
    "testFilePaths": [
      "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js"
    ],
    "number": 180,
    "pdgs": [
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#36",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#37",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#38",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#39",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#40",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.constructor([{},{},{},{},{}], 17)",
        "uniqueTitle": "Knapsack.constructor([{},{},{},{},{}], 17)#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 42,
              "index": 230
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.solveUnboundedKnapsackProblem()",
        "uniqueTitle": "Knapsack.solveUnboundedKnapsackProblem()#10",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 179,
              "column": 34,
              "index": 6040
            },
            "end": {
              "line": 210,
              "column": 3,
              "index": 7178
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#127",
        "contextId": 199,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#128",
        "contextId": 201,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#129",
        "contextId": 203,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#130",
        "contextId": 206,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#131",
        "contextId": 208,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#132",
        "contextId": 210,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#67",
        "contextId": 212,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#68",
        "contextId": 213,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#69",
        "contextId": 214,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 115,
              "column": 72,
              "index": 4410
            },
            "end": {
              "line": 136,
              "column": 3,
              "index": 5427
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#41",
        "contextId": 216,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#42",
        "contextId": 217,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#43",
        "contextId": 218,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#44",
        "contextId": 219,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#45",
        "contextId": 220,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.constructor([{},{},{},{},{}], 60)",
        "uniqueTitle": "Knapsack.constructor([{},{},{},{},{}], 60)#5",
        "contextId": 221,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 42,
              "index": 230
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.solveUnboundedKnapsackProblem()",
        "uniqueTitle": "Knapsack.solveUnboundedKnapsackProblem()#11",
        "contextId": 222,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 179,
              "column": 34,
              "index": 6040
            },
            "end": {
              "line": 210,
              "column": 3,
              "index": 7178
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#133",
        "contextId": 424,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#134",
        "contextId": 426,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#135",
        "contextId": 428,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#136",
        "contextId": 430,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#137",
        "contextId": 432,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#138",
        "contextId": 435,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#139",
        "contextId": 437,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#140",
        "contextId": 439,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#141",
        "contextId": 441,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#142",
        "contextId": 443,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#70",
        "contextId": 445,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#71",
        "contextId": 446,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#72",
        "contextId": 447,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#73",
        "contextId": 448,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#74",
        "contextId": 449,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "knapsack-problem",
    "algo": "knapsack-problem_Knapsack",
    "name": "Knapsack should solve unbound knapsack problem with items in stock and max weight more than sum of all items@Knapsack.test.js",
    "label": "Knapsack should solve unbound knapsack problem with items in stock and max weight more than sum of all items",
    "testNamePattern": "Knapsack should solve unbound knapsack problem with items in stock and max weight more than sum of all items",
    "testFilePaths": [
      "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js"
    ],
    "number": 181,
    "pdgs": [
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#46",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#47",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#48",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#49",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight,itemsInStock})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight,itemsInStock})#50",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.constructor([{},{},{},{},{}], 60)",
        "uniqueTitle": "Knapsack.constructor([{},{},{},{},{}], 60)#6",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 42,
              "index": 230
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "Knapsack.solveUnboundedKnapsackProblem()",
        "uniqueTitle": "Knapsack.solveUnboundedKnapsackProblem()#12",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 179,
              "column": 34,
              "index": 6040
            },
            "end": {
              "line": 210,
              "column": 3,
              "index": 7178
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#143",
        "contextId": 217,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#144",
        "contextId": 219,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#145",
        "contextId": 221,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#146",
        "contextId": 223,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#147",
        "contextId": 225,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 214,
              "column": 60,
              "index": 7301
            },
            "end": {
              "line": 216,
              "column": 5,
              "index": 7354
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#148",
        "contextId": 228,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#149",
        "contextId": 230,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#150",
        "contextId": 232,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#151",
        "contextId": 234,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)",
        "uniqueTitle": "[cb] this.selectedItems.reduce(ƒ (anonymous), 0)#152",
        "contextId": 236,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/Knapsack.js",
          "loc": {
            "start": {
              "line": 221,
              "column": 60,
              "index": 7488
            },
            "end": {
              "line": 223,
              "column": 5,
              "index": 7542
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#75",
        "contextId": 238,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#76",
        "contextId": 239,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#77",
        "contextId": 240,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#78",
        "contextId": 241,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#79",
        "contextId": 242,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/Knapsack.test.js",
          "loc": {
            "start": {
              "line": 138,
              "column": 114,
              "index": 5547
            },
            "end": {
              "line": 161,
              "column": 3,
              "index": 6762
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "knapsack-problem",
    "algo": "knapsack-problem_KnapsackItem",
    "name": "KnapsackItem should create knapsack item and count its total weight and value@KnapsackItem.test.js",
    "label": "KnapsackItem should create knapsack item and count its total weight and value",
    "testNamePattern": "KnapsackItem should create knapsack item and count its total weight and value",
    "testFilePaths": [
      "src/algorithms/sets/knapsack-problem/__test__/KnapsackItem.test.js"
    ],
    "number": 182,
    "pdgs": [
      {
        "pdgTitle": "KnapsackItem.constructor({value,weight})",
        "uniqueTitle": "KnapsackItem.constructor({value,weight})#76",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 20,
              "index": 350
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 721
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/KnapsackItem.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 79,
              "index": 160
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1308
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#80",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/KnapsackItem.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 79,
              "index": 160
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1308
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#81",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/KnapsackItem.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 79,
              "index": 160
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1308
            }
          }
        }
      },
      {
        "pdgTitle": "KnapsackItem.toString()",
        "uniqueTitle": "KnapsackItem.toString()#82",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/KnapsackItem.js",
          "loc": {
            "start": {
              "line": 34,
              "column": 13,
              "index": 1044
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1115
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/knapsack-problem/__test__/KnapsackItem.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 79,
              "index": 160
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1308
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "longest-common-subsequence",
    "algo": "longest-common-subsequence_longestCommonSubsequence",
    "name": "longestCommonSubsequence should find longest common subsequence for two strings@longestCommonSubsequence.test.js",
    "label": "longestCommonSubsequence should find longest common subsequence for two strings",
    "testNamePattern": "longestCommonSubsequence should find longest common subsequence for two strings",
    "testFilePaths": [
      "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js"
    ],
    "number": 183,
    "pdgs": [
      {
        "pdgTitle": "longestCommonSubsequence([\"\"], [\"\"])",
        "uniqueTitle": "longestCommonSubsequence([\"\"], [\"\"])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 61,
              "index": 148
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 1948
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 186
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 1044
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubsequence([\"\"], [\"A\",\"B\",\"C\"])",
        "uniqueTitle": "longestCommonSubsequence([\"\"], [\"A\",\"B\",\"C\"])#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 61,
              "index": 148
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 1948
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 186
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 1044
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\"], [\"\"])",
        "uniqueTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\"], [\"\"])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 61,
              "index": 148
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 1948
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 186
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 1044
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\"], [\"D\",\"E\",\"F\",\"G\"])",
        "uniqueTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\"], [\"D\",\"E\",\"F\",\"G\"])#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 61,
              "index": 148
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 1948
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 186
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 1044
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\",\"D\",\"G\",\"H\"], [\"A\",\"E\",\"D\",\"F\",\"H\",\"R\"])",
        "uniqueTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\",\"D\",\"G\",\"H\"], [\"A\",\"E\",\"D\",\"F\",\"H\",\"R\"])#2",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 61,
              "index": 148
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 1948
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 186
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 1044
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubsequence([\"A\",\"G\",\"G\",\"T\",\"A\",\"B\"], [\"G\",\"X\",\"T\",\"X\",\"A\",\"Y\",\"B\"])",
        "uniqueTitle": "longestCommonSubsequence([\"A\",\"G\",\"G\",\"T\",\"A\",\"B\"], [\"G\",\"X\",\"T\",\"X\",\"A\",\"Y\",\"B\"])#2",
        "contextId": 30,
        "algoLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 61,
              "index": 148
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 1948
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 186
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 1044
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\",\"D\",\"A\",\"F\"], [\"A\",\"C\",\"B\",\"C\",\"F\"])",
        "uniqueTitle": "longestCommonSubsequence([\"A\",\"B\",\"C\",\"D\",\"A\",\"F\"], [\"A\",\"C\",\"B\",\"C\",\"F\"])#2",
        "contextId": 39,
        "algoLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/longestCommonSubsequence.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 61,
              "index": 148
            },
            "end": {
              "line": 65,
              "column": 1,
              "index": 1948
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/longest-common-subsequence/__test__/longestCommonSubsequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 69,
              "index": 186
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 1044
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "longest-increasing-subsequence",
    "algo": "longest-increasing-subsequence_dpLongestIncreasingSubsequence",
    "name": "dpLongestIncreasingSubsequence should find longest increasing subsequence length@dpLongestIncreasingSubsequence.test.js",
    "label": "dpLongestIncreasingSubsequence should find longest increasing subsequence length",
    "testNamePattern": "dpLongestIncreasingSubsequence should find longest increasing subsequence length",
    "testFilePaths": [
      "src/algorithms/sets/longest-increasing-subsequence/__test__/dpLongestIncreasingSubsequence.test.js"
    ],
    "number": 184,
    "pdgs": [
      {
        "pdgTitle": "dpLongestIncreasingSubsequence([9,8,7,6,5,4,3,2,1,0])",
        "uniqueTitle": "dpLongestIncreasingSubsequence([9,8,7,6,5,4,3,2,1,0])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/sets/longest-increasing-subsequence/dpLongestIncreasingSubsequence.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 65,
              "index": 229
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1976
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/longest-increasing-subsequence/__test__/dpLongestIncreasingSubsequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 199
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "dpLongestIncreasingSubsequence([0,1,2,3,4,5,6,7,8,9])",
        "uniqueTitle": "dpLongestIncreasingSubsequence([0,1,2,3,4,5,6,7,8,9])#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/sets/longest-increasing-subsequence/dpLongestIncreasingSubsequence.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 65,
              "index": 229
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1976
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/longest-increasing-subsequence/__test__/dpLongestIncreasingSubsequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 199
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "dpLongestIncreasingSubsequence([3,4,-1,0,6,2,3])",
        "uniqueTitle": "dpLongestIncreasingSubsequence([3,4,-1,0,6,2,3])#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/sets/longest-increasing-subsequence/dpLongestIncreasingSubsequence.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 65,
              "index": 229
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1976
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/longest-increasing-subsequence/__test__/dpLongestIncreasingSubsequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 199
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 943
            }
          }
        }
      },
      {
        "pdgTitle": "dpLongestIncreasingSubsequence([0,8,4,12,2,10,6,14,1,9,5,13,3,11,7,15])",
        "uniqueTitle": "dpLongestIncreasingSubsequence([0,8,4,12,2,10,6,14,1,9,5,13,3,11,7,15])#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/sets/longest-increasing-subsequence/dpLongestIncreasingSubsequence.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 65,
              "index": 229
            },
            "end": {
              "line": 53,
              "column": 1,
              "index": 1976
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/longest-increasing-subsequence/__test__/dpLongestIncreasingSubsequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 64,
              "index": 199
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 943
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "maximum-subarray",
    "algo": "maximum-subarray_dpMaximumSubarray",
    "name": "dpMaximumSubarray should find maximum subarray using the dynamic programming algorithm@dpMaximumSubarray.test.js",
    "label": "dpMaximumSubarray should find maximum subarray using the dynamic programming algorithm",
    "testNamePattern": "dpMaximumSubarray should find maximum subarray using the dynamic programming algorithm",
    "testFilePaths": [
      "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js"
    ],
    "number": 185,
    "pdgs": [
      {
        "pdgTitle": "dpMaximumSubarray([])",
        "uniqueTitle": "dpMaximumSubarray([])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 179
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1520
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 83,
              "index": 179
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 965
            }
          }
        }
      },
      {
        "pdgTitle": "dpMaximumSubarray([0,0])",
        "uniqueTitle": "dpMaximumSubarray([0,0])#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 179
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1520
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 83,
              "index": 179
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 965
            }
          }
        }
      },
      {
        "pdgTitle": "dpMaximumSubarray([0,0,1])",
        "uniqueTitle": "dpMaximumSubarray([0,0,1])#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 179
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1520
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 83,
              "index": 179
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 965
            }
          }
        }
      },
      {
        "pdgTitle": "dpMaximumSubarray([0,0,1,2])",
        "uniqueTitle": "dpMaximumSubarray([0,0,1,2])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 179
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1520
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 83,
              "index": 179
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 965
            }
          }
        }
      },
      {
        "pdgTitle": "dpMaximumSubarray([0,0,-1,2])",
        "uniqueTitle": "dpMaximumSubarray([0,0,-1,2])#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 179
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1520
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 83,
              "index": 179
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 965
            }
          }
        }
      },
      {
        "pdgTitle": "dpMaximumSubarray([-1,-2,-3,-4,-5])",
        "uniqueTitle": "dpMaximumSubarray([-1,-2,-3,-4,-5])#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 179
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1520
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 83,
              "index": 179
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 965
            }
          }
        }
      },
      {
        "pdgTitle": "dpMaximumSubarray([1,2,3,2,3,4,5])",
        "uniqueTitle": "dpMaximumSubarray([1,2,3,2,3,4,5])#2",
        "contextId": 29,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 179
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1520
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 83,
              "index": 179
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 965
            }
          }
        }
      },
      {
        "pdgTitle": "dpMaximumSubarray([-2,1,-3,4,-1,2,1,-5,4])",
        "uniqueTitle": "dpMaximumSubarray([-2,1,-3,4,-1,2,1,-5,4])#2",
        "contextId": 37,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 179
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1520
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 83,
              "index": 179
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 965
            }
          }
        }
      },
      {
        "pdgTitle": "dpMaximumSubarray([-2,-3,4,-1,-2,1,5,-3])",
        "uniqueTitle": "dpMaximumSubarray([-2,-3,4,-1,-2,1,5,-3])#2",
        "contextId": 47,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 179
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1520
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 83,
              "index": 179
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 965
            }
          }
        }
      },
      {
        "pdgTitle": "dpMaximumSubarray([1,-3,2,-5,7,6,-1,4,11,-23])",
        "uniqueTitle": "dpMaximumSubarray([1,-3,2,-5,7,6,-1,4,11,-23])#2",
        "contextId": 56,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dpMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 179
            },
            "end": {
              "line": 45,
              "column": 1,
              "index": 1520
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dpMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 83,
              "index": 179
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 965
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "maximum-subarray",
    "algo": "maximum-subarray_bfMaximumSubarray",
    "name": "bfMaximumSubarray should find maximum subarray using the brute force algorithm@bfMaximumSubarray.test.js",
    "label": "bfMaximumSubarray should find maximum subarray using the brute force algorithm",
    "testNamePattern": "bfMaximumSubarray should find maximum subarray using the brute force algorithm",
    "testFilePaths": [
      "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js"
    ],
    "number": 186,
    "pdgs": [
      {
        "pdgTitle": "bfMaximumSubarray([])",
        "uniqueTitle": "bfMaximumSubarray([])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 173
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 888
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 171
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 957
            }
          }
        }
      },
      {
        "pdgTitle": "bfMaximumSubarray([0,0])",
        "uniqueTitle": "bfMaximumSubarray([0,0])#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 173
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 888
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 171
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 957
            }
          }
        }
      },
      {
        "pdgTitle": "bfMaximumSubarray([0,0,1])",
        "uniqueTitle": "bfMaximumSubarray([0,0,1])#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 173
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 888
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 171
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 957
            }
          }
        }
      },
      {
        "pdgTitle": "bfMaximumSubarray([0,0,1,2])",
        "uniqueTitle": "bfMaximumSubarray([0,0,1,2])#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 173
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 888
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 171
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 957
            }
          }
        }
      },
      {
        "pdgTitle": "bfMaximumSubarray([0,0,-1,2])",
        "uniqueTitle": "bfMaximumSubarray([0,0,-1,2])#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 173
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 888
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 171
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 957
            }
          }
        }
      },
      {
        "pdgTitle": "bfMaximumSubarray([-1,-2,-3,-4,-5])",
        "uniqueTitle": "bfMaximumSubarray([-1,-2,-3,-4,-5])#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 173
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 888
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 171
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 957
            }
          }
        }
      },
      {
        "pdgTitle": "bfMaximumSubarray([1,2,3,2,3,4,5])",
        "uniqueTitle": "bfMaximumSubarray([1,2,3,2,3,4,5])#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 173
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 888
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 171
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 957
            }
          }
        }
      },
      {
        "pdgTitle": "bfMaximumSubarray([-2,1,-3,4,-1,2,1,-5,4])",
        "uniqueTitle": "bfMaximumSubarray([-2,1,-3,4,-1,2,1,-5,4])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 173
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 888
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 171
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 957
            }
          }
        }
      },
      {
        "pdgTitle": "bfMaximumSubarray([-2,-3,4,-1,-2,1,5,-3])",
        "uniqueTitle": "bfMaximumSubarray([-2,-3,4,-1,-2,1,5,-3])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 173
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 888
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 171
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 957
            }
          }
        }
      },
      {
        "pdgTitle": "bfMaximumSubarray([1,-3,2,-5,7,6,-1,4,11,-23])",
        "uniqueTitle": "bfMaximumSubarray([1,-3,2,-5,7,6,-1,4,11,-23])#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/bfMaximumSubarray.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 54,
              "index": 173
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 888
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/bfMaximumSubarray.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 171
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 957
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "maximum-subarray",
    "algo": "maximum-subarray_dcMaximumSubarraySum",
    "name": "dcMaximumSubarraySum should find maximum subarray sum using the divide and conquer algorithm@dcMaximumSubarraySum.test.js",
    "label": "dcMaximumSubarraySum should find maximum subarray sum using the divide and conquer algorithm",
    "testNamePattern": "dcMaximumSubarraySum should find maximum subarray sum using the divide and conquer algorithm",
    "testFilePaths": [
      "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js"
    ],
    "number": 187,
    "pdgs": [
      {
        "pdgTitle": "dcMaximumSubarraySum([])",
        "uniqueTitle": "dcMaximumSubarraySum([])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 57,
              "index": 217
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1277
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 86,
              "index": 188
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 834
            }
          }
        }
      },
      {
        "pdgTitle": "dcMaximumSubarraySum([0,0])",
        "uniqueTitle": "dcMaximumSubarraySum([0,0])#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 57,
              "index": 217
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1277
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 86,
              "index": 188
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 834
            }
          }
        }
      },
      {
        "pdgTitle": "dcMaximumSubarraySum([0,0,1])",
        "uniqueTitle": "dcMaximumSubarraySum([0,0,1])#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 57,
              "index": 217
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1277
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 86,
              "index": 188
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 834
            }
          }
        }
      },
      {
        "pdgTitle": "dcMaximumSubarraySum([0,0,1,2])",
        "uniqueTitle": "dcMaximumSubarraySum([0,0,1,2])#2",
        "contextId": 25,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 57,
              "index": 217
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1277
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 86,
              "index": 188
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 834
            }
          }
        }
      },
      {
        "pdgTitle": "dcMaximumSubarraySum([0,0,-1,2])",
        "uniqueTitle": "dcMaximumSubarraySum([0,0,-1,2])#2",
        "contextId": 41,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 57,
              "index": 217
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1277
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 86,
              "index": 188
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 834
            }
          }
        }
      },
      {
        "pdgTitle": "dcMaximumSubarraySum([-1,-2,-3,-4,-5])",
        "uniqueTitle": "dcMaximumSubarraySum([-1,-2,-3,-4,-5])#2",
        "contextId": 57,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 57,
              "index": 217
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1277
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 86,
              "index": 188
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 834
            }
          }
        }
      },
      {
        "pdgTitle": "dcMaximumSubarraySum([1,2,3,2,3,4,5])",
        "uniqueTitle": "dcMaximumSubarraySum([1,2,3,2,3,4,5])#2",
        "contextId": 79,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 57,
              "index": 217
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1277
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 86,
              "index": 188
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 834
            }
          }
        }
      },
      {
        "pdgTitle": "dcMaximumSubarraySum([-2,1,-3,4,-1,2,1,-5,4])",
        "uniqueTitle": "dcMaximumSubarraySum([-2,1,-3,4,-1,2,1,-5,4])#2",
        "contextId": 116,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 57,
              "index": 217
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1277
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 86,
              "index": 188
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 834
            }
          }
        }
      },
      {
        "pdgTitle": "dcMaximumSubarraySum([-2,-3,4,-1,-2,1,5,-3])",
        "uniqueTitle": "dcMaximumSubarraySum([-2,-3,4,-1,-2,1,5,-3])#2",
        "contextId": 172,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 57,
              "index": 217
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1277
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 86,
              "index": 188
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 834
            }
          }
        }
      },
      {
        "pdgTitle": "dcMaximumSubarraySum([1,-3,2,-5,7,6,-1,4,11,-23])",
        "uniqueTitle": "dcMaximumSubarraySum([1,-3,2,-5,7,6,-1,4,11,-23])#2",
        "contextId": 218,
        "algoLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/dcMaximumSubarraySum.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 57,
              "index": 217
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1277
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/maximum-subarray/__test__/dcMaximumSubarraySum.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 86,
              "index": 188
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 834
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "permutations",
    "algo": "permutations_permutateWithoutRepetitions",
    "name": "permutateWithoutRepetitions should permutate string@permutateWithoutRepetitions.test.js",
    "label": "permutateWithoutRepetitions should permutate string",
    "testNamePattern": "permutateWithoutRepetitions should permutate string",
    "testFilePaths": [
      "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js"
    ],
    "number": 188,
    "pdgs": [
      {
        "pdgTitle": "permutateWithoutRepetitions([\"A\"])",
        "uniqueTitle": "permutateWithoutRepetitions([\"A\"])#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/sets/permutations/permutateWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 72,
              "index": 136
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1268
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 38,
              "index": 224
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2121
            }
          }
        }
      },
      {
        "pdgTitle": "permutateWithoutRepetitions([\"A\",\"B\"])",
        "uniqueTitle": "permutateWithoutRepetitions([\"A\",\"B\"])#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/sets/permutations/permutateWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 72,
              "index": 136
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1268
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 38,
              "index": 224
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2121
            }
          }
        }
      },
      {
        "pdgTitle": "permutateWithoutRepetitions([\"A\",\"A\"])",
        "uniqueTitle": "permutateWithoutRepetitions([\"A\",\"A\"])#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/sets/permutations/permutateWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 72,
              "index": 136
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1268
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 38,
              "index": 224
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2121
            }
          }
        }
      },
      {
        "pdgTitle": "permutateWithoutRepetitions([\"A\",\"B\",\"C\"])",
        "uniqueTitle": "permutateWithoutRepetitions([\"A\",\"B\",\"C\"])#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/sets/permutations/permutateWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 72,
              "index": 136
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1268
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 38,
              "index": 224
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2121
            }
          }
        }
      },
      {
        "pdgTitle": "factorial(3)",
        "uniqueTitle": "factorial(3)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 38,
              "index": 224
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2121
            }
          }
        }
      },
      {
        "pdgTitle": "permutateWithoutRepetitions([\"A\",\"B\",\"C\",\"D\"])",
        "uniqueTitle": "permutateWithoutRepetitions([\"A\",\"B\",\"C\",\"D\"])#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/sets/permutations/permutateWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 72,
              "index": 136
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1268
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 38,
              "index": 224
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2121
            }
          }
        }
      },
      {
        "pdgTitle": "factorial(4)",
        "uniqueTitle": "factorial(4)#8",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 38,
              "index": 224
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2121
            }
          }
        }
      },
      {
        "pdgTitle": "permutateWithoutRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"])",
        "uniqueTitle": "permutateWithoutRepetitions([\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"])#2",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/sets/permutations/permutateWithoutRepetitions.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 72,
              "index": 136
            },
            "end": {
              "line": 43,
              "column": 1,
              "index": 1268
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 38,
              "index": 224
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2121
            }
          }
        }
      },
      {
        "pdgTitle": "factorial(6)",
        "uniqueTitle": "factorial(6)#2",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/math/factorial/factorial.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 42,
              "index": 100
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 210
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/permutations/__test__/permutateWithoutRepetitions.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 38,
              "index": 224
            },
            "end": {
              "line": 72,
              "column": 3,
              "index": 2121
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "permutations",
    "algo": "permutations_permutateWithRepetitions",
    "name": "permutateWithRepetitions should permutate string with repetition@permutateWithRepetitions.test.js",
    "label": "permutateWithRepetitions should permutate string with repetition",
    "testNamePattern": "permutateWithRepetitions should permutate string with repetition",
    "testFilePaths": [
      "src/algorithms/sets/permutations/__test__/permutateWithRepetitions.test.js"
    ],
    "number": 189,
    "pdgs": [
      {
        "pdgTitle": "permutateWithRepetitions([\"A\"])",
        "uniqueTitle": "permutateWithRepetitions([\"A\"])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/sets/permutations/permutateWithRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 939
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/permutations/__test__/permutateWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 54,
              "index": 171
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1369
            }
          }
        }
      },
      {
        "pdgTitle": "permutateWithRepetitions([\"A\",\"B\"])",
        "uniqueTitle": "permutateWithRepetitions([\"A\",\"B\"])#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/sets/permutations/permutateWithRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 939
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/permutations/__test__/permutateWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 54,
              "index": 171
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1369
            }
          }
        }
      },
      {
        "pdgTitle": "permutateWithRepetitions([\"A\",\"B\",\"C\"])",
        "uniqueTitle": "permutateWithRepetitions([\"A\",\"B\",\"C\"])#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/sets/permutations/permutateWithRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 939
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/permutations/__test__/permutateWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 54,
              "index": 171
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1369
            }
          }
        }
      },
      {
        "pdgTitle": "permutateWithRepetitions([\"A\",\"B\",\"C\",\"D\"])",
        "uniqueTitle": "permutateWithRepetitions([\"A\",\"B\",\"C\",\"D\"])#2",
        "contextId": 65,
        "algoLoc": {
          "filePath": "src/algorithms/sets/permutations/permutateWithRepetitions.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 69,
              "index": 171
            },
            "end": {
              "line": 32,
              "column": 1,
              "index": 939
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/permutations/__test__/permutateWithRepetitions.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 54,
              "index": 171
            },
            "end": {
              "line": 49,
              "column": 3,
              "index": 1369
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "power-set",
    "algo": "power-set_bwPowerSet",
    "name": "bwPowerSet should calculate power set of given set using bitwise approach@bwPowerSet.test.js",
    "label": "bwPowerSet should calculate power set of given set using bitwise approach",
    "testNamePattern": "bwPowerSet should calculate power set of given set using bitwise approach",
    "testFilePaths": [
      "src/algorithms/sets/power-set/__test__/bwPowerSet.test.js"
    ],
    "number": 190,
    "pdgs": [
      {
        "pdgTitle": "bwPowerSet([1])",
        "uniqueTitle": "bwPowerSet([1])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/sets/power-set/bwPowerSet.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 48,
              "index": 163
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1387
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/power-set/__test__/bwPowerSet.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 152
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 373
            }
          }
        }
      },
      {
        "pdgTitle": "bwPowerSet([1,2,3])",
        "uniqueTitle": "bwPowerSet([1,2,3])#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/sets/power-set/bwPowerSet.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 48,
              "index": 163
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1387
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/power-set/__test__/bwPowerSet.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 152
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 373
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "power-set",
    "algo": "power-set_btPowerSet",
    "name": "btPowerSet should calculate power set of given set using backtracking approach@btPowerSet.test.js",
    "label": "btPowerSet should calculate power set of given set using backtracking approach",
    "testNamePattern": "btPowerSet should calculate power set of given set using backtracking approach",
    "testFilePaths": [
      "src/algorithms/sets/power-set/__test__/btPowerSet.test.js"
    ],
    "number": 191,
    "pdgs": [
      {
        "pdgTitle": "btPowerSet([1])",
        "uniqueTitle": "btPowerSet([1])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/sets/power-set/btPowerSet.js",
          "loc": {
            "start": {
              "line": 45,
              "column": 48,
              "index": 1966
            },
            "end": {
              "line": 47,
              "column": 1,
              "index": 2014
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/power-set/__test__/btPowerSet.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 82,
              "index": 157
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 378
            }
          }
        }
      },
      {
        "pdgTitle": "btPowerSet([1,2,3])",
        "uniqueTitle": "btPowerSet([1,2,3])#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/sets/power-set/btPowerSet.js",
          "loc": {
            "start": {
              "line": 45,
              "column": 48,
              "index": 1966
            },
            "end": {
              "line": 47,
              "column": 1,
              "index": 2014
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/power-set/__test__/btPowerSet.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 82,
              "index": 157
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 378
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sets",
    "chapter": "shortest-common-supersequence",
    "algo": "shortest-common-supersequence_shortestCommonSupersequence",
    "name": "shortestCommonSupersequence should find shortest common supersequence of two sequences@shortestCommonSupersequence.test.js",
    "label": "shortestCommonSupersequence should find shortest common supersequence of two sequences",
    "testNamePattern": "shortestCommonSupersequence should find shortest common supersequence of two sequences",
    "testFilePaths": [
      "src/algorithms/sets/shortest-common-supersequence/__test__/shortestCommonSupersequence.test.js"
    ],
    "number": 192,
    "pdgs": [
      {
        "pdgTitle": "shortestCommonSupersequence([\"A\",\"B\",\"C\"], [\"D\",\"E\",\"F\"])",
        "uniqueTitle": "shortestCommonSupersequence([\"A\",\"B\",\"C\"], [\"D\",\"E\",\"F\"])#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/sets/shortest-common-supersequence/shortestCommonSupersequence.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 64,
              "index": 251
            },
            "end": {
              "line": 71,
              "column": 1,
              "index": 2027
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/shortest-common-supersequence/__test__/shortestCommonSupersequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 73,
              "index": 199
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1364
            }
          }
        }
      },
      {
        "pdgTitle": "shortestCommonSupersequence([\"G\",\"E\",\"E\",\"K\"], [\"E\",\"K\",\"E\"])",
        "uniqueTitle": "shortestCommonSupersequence([\"G\",\"E\",\"E\",\"K\"], [\"E\",\"K\",\"E\"])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sets/shortest-common-supersequence/shortestCommonSupersequence.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 64,
              "index": 251
            },
            "end": {
              "line": 71,
              "column": 1,
              "index": 2027
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/shortest-common-supersequence/__test__/shortestCommonSupersequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 73,
              "index": 199
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1364
            }
          }
        }
      },
      {
        "pdgTitle": "shortestCommonSupersequence([\"A\",\"G\",\"G\",\"T\",\"A\",\"B\"], [\"G\",\"X\",\"T\",\"X\",\"A\",\"Y\",\"B\"])",
        "uniqueTitle": "shortestCommonSupersequence([\"A\",\"G\",\"G\",\"T\",\"A\",\"B\"], [\"G\",\"X\",\"T\",\"X\",\"A\",\"Y\",\"B\"])#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/sets/shortest-common-supersequence/shortestCommonSupersequence.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 64,
              "index": 251
            },
            "end": {
              "line": 71,
              "column": 1,
              "index": 2027
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/shortest-common-supersequence/__test__/shortestCommonSupersequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 73,
              "index": 199
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1364
            }
          }
        }
      },
      {
        "pdgTitle": "shortestCommonSupersequence([\"A\",\"B\",\"C\",\"B\",\"D\",\"A\",\"B\"], [\"B\",\"D\",\"C\",\"A\",\"B\",\"A\"])",
        "uniqueTitle": "shortestCommonSupersequence([\"A\",\"B\",\"C\",\"B\",\"D\",\"A\",\"B\"], [\"B\",\"D\",\"C\",\"A\",\"B\",\"A\"])#2",
        "contextId": 28,
        "algoLoc": {
          "filePath": "src/algorithms/sets/shortest-common-supersequence/shortestCommonSupersequence.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 64,
              "index": 251
            },
            "end": {
              "line": 71,
              "column": 1,
              "index": 2027
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/shortest-common-supersequence/__test__/shortestCommonSupersequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 73,
              "index": 199
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1364
            }
          }
        }
      },
      {
        "pdgTitle": "shortestCommonSupersequence([\"B\",\"D\",\"C\",\"A\",\"B\",\"A\"], [\"A\",\"B\",\"C\",\"B\",\"D\",\"A\",\"B\",\"A\",\"C\"])",
        "uniqueTitle": "shortestCommonSupersequence([\"B\",\"D\",\"C\",\"A\",\"B\",\"A\"], [\"A\",\"B\",\"C\",\"B\",\"D\",\"A\",\"B\",\"A\",\"C\"])#2",
        "contextId": 37,
        "algoLoc": {
          "filePath": "src/algorithms/sets/shortest-common-supersequence/shortestCommonSupersequence.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 64,
              "index": 251
            },
            "end": {
              "line": 71,
              "column": 1,
              "index": 2027
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sets/shortest-common-supersequence/__test__/shortestCommonSupersequence.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 73,
              "index": 199
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1364
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "bubble-sort",
    "algo": "bubble-sort_BubbleSort",
    "name": "BubbleSort should sort array@BubbleSort.test.js",
    "label": "BubbleSort should sort array",
    "testNamePattern": "BubbleSort should sort array",
    "testFilePaths": [
      "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js"
    ],
    "number": 193,
    "pdgs": [
      {
        "pdgTitle": "BubbleSort.sort([])",
        "uniqueTitle": "BubbleSort.sort([])#3",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 424
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 468
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([1])",
        "uniqueTitle": "BubbleSort.sort([1])#3",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 424
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 468
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([1,2])",
        "uniqueTitle": "BubbleSort.sort([1,2])#3",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 424
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 468
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([2,1])",
        "uniqueTitle": "BubbleSort.sort([2,1])#3",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 424
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 468
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([3,4,2,1,0,0,4,3,4,2])",
        "uniqueTitle": "BubbleSort.sort([3,4,2,1,0,0,4,3,4,2])#3",
        "contextId": 24,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 424
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 468
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "BubbleSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#4",
        "contextId": 148,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 424
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 468
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "BubbleSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#4",
        "contextId": 207,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 424
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 468
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "BubbleSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#4",
        "contextId": 797,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 424
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 468
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "BubbleSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#4",
        "contextId": 1337,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 424
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 468
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([\"\"])",
        "uniqueTitle": "BubbleSort.sort([\"\"])#4",
        "contextId": 1401,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 529
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([\"a\"])",
        "uniqueTitle": "BubbleSort.sort([\"a\"])#4",
        "contextId": 1402,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 529
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "BubbleSort.sort([\"aa\",\"a\"])#4",
        "contextId": 1403,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 529
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "BubbleSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#4",
        "contextId": 1408,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 529
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "BubbleSort.sort([\"aa\",\"aa\"])#4",
        "contextId": 1426,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 529
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 593
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "bubble-sort",
    "algo": "bubble-sort_BubbleSort",
    "name": "BubbleSort should sort array with custom comparator@BubbleSort.test.js",
    "label": "BubbleSort should sort array with custom comparator",
    "testNamePattern": "BubbleSort should sort array with custom comparator",
    "testFilePaths": [
      "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js"
    ],
    "number": 194,
    "pdgs": [
      {
        "pdgTitle": "BubbleSort.sort([\"\"])",
        "uniqueTitle": "BubbleSort.sort([\"\"])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 529
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([\"a\"])",
        "uniqueTitle": "BubbleSort.sort([\"a\"])#4",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 529
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "BubbleSort.sort([\"aa\",\"a\"])#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 529
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "BubbleSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#4",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 529
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 593
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "BubbleSort.sort([\"aa\",\"aa\"])#4",
        "contextId": 37,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 529
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 593
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "bubble-sort",
    "algo": "bubble-sort_BubbleSort",
    "name": "BubbleSort should do stable sorting@BubbleSort.test.js",
    "label": "BubbleSort should do stable sorting",
    "testNamePattern": "BubbleSort should do stable sorting",
    "testFilePaths": [
      "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js"
    ],
    "number": 195,
    "pdgs": [
      {
        "pdgTitle": "BubbleSort.sort([\"bb\",\"aa\",\"c\"])",
        "uniqueTitle": "BubbleSort.sort([\"bb\",\"aa\",\"c\"])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 25,
              "column": 39,
              "index": 638
            },
            "end": {
              "line": 27,
              "column": 3,
              "index": 691
            }
          }
        }
      },
      {
        "pdgTitle": "BubbleSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "BubbleSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])#2",
        "contextId": 24,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 25,
              "column": 39,
              "index": 638
            },
            "end": {
              "line": 27,
              "column": 3,
              "index": 691
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "bubble-sort",
    "algo": "bubble-sort_BubbleSort",
    "name": "BubbleSort should sort negative numbers@BubbleSort.test.js",
    "label": "BubbleSort should sort negative numbers",
    "testNamePattern": "BubbleSort should sort negative numbers",
    "testFilePaths": [
      "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js"
    ],
    "number": 196,
    "pdgs": [
      {
        "pdgTitle": "BubbleSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
        "uniqueTitle": "BubbleSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 29,
              "column": 43,
              "index": 740
            },
            "end": {
              "line": 31,
              "column": 3,
              "index": 799
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "bubble-sort",
    "algo": "bubble-sort_BubbleSort",
    "name": "BubbleSort should visit EQUAL array element specified number of times@BubbleSort.test.js",
    "label": "BubbleSort should visit EQUAL array element specified number of times",
    "testNamePattern": "BubbleSort should visit EQUAL array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js"
    ],
    "number": 197,
    "pdgs": [
      {
        "pdgTitle": "BubbleSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "BubbleSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 73,
              "index": 878
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1007
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "bubble-sort",
    "algo": "bubble-sort_BubbleSort",
    "name": "BubbleSort should visit SORTED array element specified number of times@BubbleSort.test.js",
    "label": "BubbleSort should visit SORTED array element specified number of times",
    "testNamePattern": "BubbleSort should visit SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js"
    ],
    "number": 198,
    "pdgs": [
      {
        "pdgTitle": "BubbleSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "BubbleSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 41,
              "column": 74,
              "index": 1087
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1218
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "bubble-sort",
    "algo": "bubble-sort_BubbleSort",
    "name": "BubbleSort should visit NOT SORTED array element specified number of times@BubbleSort.test.js",
    "label": "BubbleSort should visit NOT SORTED array element specified number of times",
    "testNamePattern": "BubbleSort should visit NOT SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js"
    ],
    "number": 199,
    "pdgs": [
      {
        "pdgTitle": "BubbleSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "BubbleSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 78,
              "index": 1302
            },
            "end": {
              "line": 55,
              "column": 3,
              "index": 1440
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "bubble-sort",
    "algo": "bubble-sort_BubbleSort",
    "name": "BubbleSort should visit REVERSE SORTED array element specified number of times@BubbleSort.test.js",
    "label": "BubbleSort should visit REVERSE SORTED array element specified number of times",
    "testNamePattern": "BubbleSort should visit REVERSE SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js"
    ],
    "number": 200,
    "pdgs": [
      {
        "pdgTitle": "BubbleSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "BubbleSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/BubbleSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 101
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1113
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/bubble-sort/__test__/BubbleSort.test.js",
          "loc": {
            "start": {
              "line": 57,
              "column": 82,
              "index": 1528
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 1668
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "counting-sort",
    "algo": "counting-sort_CountingSort",
    "name": "CountingSort should sort array@CountingSort.test.js",
    "label": "CountingSort should sort array",
    "testNamePattern": "CountingSort should sort array",
    "testFilePaths": [
      "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js"
    ],
    "number": 201,
    "pdgs": [
      {
        "pdgTitle": "CountingSort.sort([])",
        "uniqueTitle": "CountingSort.sort([])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 428
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 474
            }
          }
        }
      },
      {
        "pdgTitle": "CountingSort.sort([1])",
        "uniqueTitle": "CountingSort.sort([1])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 428
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 474
            }
          }
        }
      },
      {
        "pdgTitle": "CountingSort.sort([1,2])",
        "uniqueTitle": "CountingSort.sort([1,2])#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 428
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 474
            }
          }
        }
      },
      {
        "pdgTitle": "CountingSort.sort([2,1])",
        "uniqueTitle": "CountingSort.sort([2,1])#2",
        "contextId": 42,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 428
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 474
            }
          }
        }
      },
      {
        "pdgTitle": "CountingSort.sort([3,4,2,1,0,0,4,3,4,2])",
        "uniqueTitle": "CountingSort.sort([3,4,2,1,0,0,4,3,4,2])#2",
        "contextId": 61,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 428
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 474
            }
          }
        }
      },
      {
        "pdgTitle": "CountingSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "CountingSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#3",
        "contextId": 152,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 428
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 474
            }
          }
        }
      },
      {
        "pdgTitle": "CountingSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "CountingSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#3",
        "contextId": 333,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 428
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 474
            }
          }
        }
      },
      {
        "pdgTitle": "CountingSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "CountingSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#3",
        "contextId": 514,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 428
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 474
            }
          }
        }
      },
      {
        "pdgTitle": "CountingSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "CountingSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#3",
        "contextId": 695,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 428
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 474
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "counting-sort",
    "algo": "counting-sort_CountingSort",
    "name": "CountingSort should sort negative numbers@CountingSort.test.js",
    "label": "CountingSort should sort negative numbers",
    "testNamePattern": "CountingSort should sort negative numbers",
    "testFilePaths": [
      "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js"
    ],
    "number": 202,
    "pdgs": [
      {
        "pdgTitle": "CountingSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
        "uniqueTitle": "CountingSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 43,
              "index": 523
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 584
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "counting-sort",
    "algo": "counting-sort_CountingSort",
    "name": "CountingSort should allow to use specify max/min integer value in array to make sorting faster@CountingSort.test.js",
    "label": "CountingSort should allow to use specify max/min integer value in array to make sorting faster",
    "testNamePattern": "CountingSort should allow to use specify max/min integer value in array to make sorting faster",
    "testFilePaths": [
      "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js"
    ],
    "number": 203,
    "pdgs": [
      {
        "pdgTitle": "CountingSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19], 1, 20)",
        "uniqueTitle": "CountingSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19], 1, 20)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 25,
              "column": 96,
              "index": 686
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1345
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "counting-sort",
    "algo": "counting-sort_CountingSort",
    "name": "CountingSort should visit EQUAL array element specified number of times@CountingSort.test.js",
    "label": "CountingSort should visit EQUAL array element specified number of times",
    "testNamePattern": "CountingSort should visit EQUAL array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js"
    ],
    "number": 204,
    "pdgs": [
      {
        "pdgTitle": "CountingSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "CountingSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 73,
              "index": 1424
            },
            "end": {
              "line": 53,
              "column": 3,
              "index": 1555
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "counting-sort",
    "algo": "counting-sort_CountingSort",
    "name": "CountingSort should visit SORTED array element specified number of times@CountingSort.test.js",
    "label": "CountingSort should visit SORTED array element specified number of times",
    "testNamePattern": "CountingSort should visit SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js"
    ],
    "number": 205,
    "pdgs": [
      {
        "pdgTitle": "CountingSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "CountingSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 55,
              "column": 74,
              "index": 1635
            },
            "end": {
              "line": 61,
              "column": 3,
              "index": 1768
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "counting-sort",
    "algo": "counting-sort_CountingSort",
    "name": "CountingSort should visit NOT SORTED array element specified number of times@CountingSort.test.js",
    "label": "CountingSort should visit NOT SORTED array element specified number of times",
    "testNamePattern": "CountingSort should visit NOT SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js"
    ],
    "number": 206,
    "pdgs": [
      {
        "pdgTitle": "CountingSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "CountingSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 63,
              "column": 78,
              "index": 1852
            },
            "end": {
              "line": 69,
              "column": 3,
              "index": 1992
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "counting-sort",
    "algo": "counting-sort_CountingSort",
    "name": "CountingSort should visit REVERSE SORTED array element specified number of times@CountingSort.test.js",
    "label": "CountingSort should visit REVERSE SORTED array element specified number of times",
    "testNamePattern": "CountingSort should visit REVERSE SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js"
    ],
    "number": 207,
    "pdgs": [
      {
        "pdgTitle": "CountingSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "CountingSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/CountingSort.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 22,
              "index": 234
            },
            "end": {
              "line": 91,
              "column": 3,
              "index": 3289
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/counting-sort/__test__/CountingSort.test.js",
          "loc": {
            "start": {
              "line": 71,
              "column": 82,
              "index": 2080
            },
            "end": {
              "line": 77,
              "column": 3,
              "index": 2222
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "heap-sort",
    "algo": "heap-sort_HeapSort",
    "name": "HeapSort should sort array@HeapSort.test.js",
    "label": "HeapSort should sort array",
    "testNamePattern": "HeapSort should sort array",
    "testFilePaths": [
      "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js"
    ],
    "number": 208,
    "pdgs": [
      {
        "pdgTitle": "HeapSort.sort([])",
        "uniqueTitle": "HeapSort.sort([])#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 32,
              "index": 535
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 577
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([1])",
        "uniqueTitle": "HeapSort.sort([1])#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 32,
              "index": 535
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 577
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([1,2])",
        "uniqueTitle": "HeapSort.sort([1,2])#2",
        "contextId": 31,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 32,
              "index": 535
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 577
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([2,1])",
        "uniqueTitle": "HeapSort.sort([2,1])#2",
        "contextId": 62,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 32,
              "index": 535
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 577
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([3,4,2,1,0,0,4,3,4,2])",
        "uniqueTitle": "HeapSort.sort([3,4,2,1,0,0,4,3,4,2])#2",
        "contextId": 100,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 32,
              "index": 535
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 577
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "HeapSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#3",
        "contextId": 600,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 32,
              "index": 535
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 577
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "HeapSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#3",
        "contextId": 1860,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 32,
              "index": 535
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 577
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "HeapSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#3",
        "contextId": 3610,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 32,
              "index": 535
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 577
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "HeapSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#3",
        "contextId": 5084,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            },
            "_range": [
              {
                "line": 4,
                "character": 22
              },
              {
                "line": 28,
                "character": 3
              }
            ]
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 32,
              "index": 535
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 577
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([\"\"])",
        "uniqueTitle": "HeapSort.sort([\"\"])#3",
        "contextId": 5814,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 23,
              "column": 55,
              "index": 638
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 700
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([\"a\"])",
        "uniqueTitle": "HeapSort.sort([\"a\"])#3",
        "contextId": 5827,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 23,
              "column": 55,
              "index": 638
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 700
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "HeapSort.sort([\"aa\",\"a\"])#3",
        "contextId": 5840,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 23,
              "column": 55,
              "index": 638
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 700
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "HeapSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#3",
        "contextId": 5878,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 23,
              "column": 55,
              "index": 638
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 700
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "HeapSort.sort([\"aa\",\"aa\"])#3",
        "contextId": 5986,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161,
              "_pos": {
                "line": 4,
                "character": 22
              }
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875,
              "_pos": {
                "line": 28,
                "character": 3
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 23,
              "column": 55,
              "index": 638
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 700
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "heap-sort",
    "algo": "heap-sort_HeapSort",
    "name": "HeapSort should sort array with custom comparator@HeapSort.test.js",
    "label": "HeapSort should sort array with custom comparator",
    "testNamePattern": "HeapSort should sort array with custom comparator",
    "testFilePaths": [
      "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js"
    ],
    "number": 209,
    "pdgs": [
      {
        "pdgTitle": "HeapSort.sort([\"\"])",
        "uniqueTitle": "HeapSort.sort([\"\"])#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 23,
              "column": 55,
              "index": 638
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 700
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([\"a\"])",
        "uniqueTitle": "HeapSort.sort([\"a\"])#4",
        "contextId": 27,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 23,
              "column": 55,
              "index": 638
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 700
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "HeapSort.sort([\"aa\",\"a\"])#4",
        "contextId": 40,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 23,
              "column": 55,
              "index": 638
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 700
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "HeapSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#4",
        "contextId": 78,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 23,
              "column": 55,
              "index": 638
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 700
            }
          }
        }
      },
      {
        "pdgTitle": "HeapSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "HeapSort.sort([\"aa\",\"aa\"])#4",
        "contextId": 186,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 23,
              "column": 55,
              "index": 638
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 700
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "heap-sort",
    "algo": "heap-sort_HeapSort",
    "name": "HeapSort should sort negative numbers@HeapSort.test.js",
    "label": "HeapSort should sort negative numbers",
    "testNamePattern": "HeapSort should sort negative numbers",
    "testFilePaths": [
      "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js"
    ],
    "number": 210,
    "pdgs": [
      {
        "pdgTitle": "HeapSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
        "uniqueTitle": "HeapSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 27,
              "column": 43,
              "index": 749
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 806
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "heap-sort",
    "algo": "heap-sort_HeapSort",
    "name": "HeapSort should visit EQUAL array element specified number of times@HeapSort.test.js",
    "label": "HeapSort should visit EQUAL array element specified number of times",
    "testNamePattern": "HeapSort should visit EQUAL array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js"
    ],
    "number": 211,
    "pdgs": [
      {
        "pdgTitle": "HeapSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "HeapSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 31,
              "column": 73,
              "index": 885
            },
            "end": {
              "line": 37,
              "column": 3,
              "index": 1012
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "heap-sort",
    "algo": "heap-sort_HeapSort",
    "name": "HeapSort should visit SORTED array element specified number of times@HeapSort.test.js",
    "label": "HeapSort should visit SORTED array element specified number of times",
    "testNamePattern": "HeapSort should visit SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js"
    ],
    "number": 212,
    "pdgs": [
      {
        "pdgTitle": "HeapSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "HeapSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 39,
              "column": 74,
              "index": 1092
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1221
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "heap-sort",
    "algo": "heap-sort_HeapSort",
    "name": "HeapSort should visit NOT SORTED array element specified number of times@HeapSort.test.js",
    "label": "HeapSort should visit NOT SORTED array element specified number of times",
    "testNamePattern": "HeapSort should visit NOT SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js"
    ],
    "number": 213,
    "pdgs": [
      {
        "pdgTitle": "HeapSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "HeapSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 47,
              "column": 78,
              "index": 1305
            },
            "end": {
              "line": 53,
              "column": 3,
              "index": 1441
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "heap-sort",
    "algo": "heap-sort_HeapSort",
    "name": "HeapSort should visit REVERSE SORTED array element specified number of times@HeapSort.test.js",
    "label": "HeapSort should visit REVERSE SORTED array element specified number of times",
    "testNamePattern": "HeapSort should visit REVERSE SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js"
    ],
    "number": 214,
    "pdgs": [
      {
        "pdgTitle": "HeapSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "HeapSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/HeapSort.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 22,
              "index": 161
            },
            "end": {
              "line": 29,
              "column": 3,
              "index": 875
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/heap-sort/__test__/HeapSort.test.js",
          "loc": {
            "start": {
              "line": 55,
              "column": 82,
              "index": 1529
            },
            "end": {
              "line": 61,
              "column": 3,
              "index": 1667
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "insertion-sort",
    "algo": "insertion-sort_InsertionSort",
    "name": "InsertionSort should sort array@InsertionSort.test.js",
    "label": "InsertionSort should sort array",
    "testNamePattern": "InsertionSort should sort array",
    "testFilePaths": [
      "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js"
    ],
    "number": 215,
    "pdgs": [
      {
        "pdgTitle": "InsertionSort.sort([])",
        "uniqueTitle": "InsertionSort.sort([])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 433
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([1])",
        "uniqueTitle": "InsertionSort.sort([1])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 433
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([1,2])",
        "uniqueTitle": "InsertionSort.sort([1,2])#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 433
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([2,1])",
        "uniqueTitle": "InsertionSort.sort([2,1])#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 433
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([3,4,2,1,0,0,4,3,4,2])",
        "uniqueTitle": "InsertionSort.sort([3,4,2,1,0,0,4,3,4,2])#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 433
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "InsertionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#3",
        "contextId": 105,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 433
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "InsertionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#3",
        "contextId": 163,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 433
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "InsertionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#3",
        "contextId": 753,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 433
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "InsertionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#3",
        "contextId": 1048,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 433
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 480
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([\"\"])",
        "uniqueTitle": "InsertionSort.sort([\"\"])#3",
        "contextId": 1111,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 541
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 608
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([\"a\"])",
        "uniqueTitle": "InsertionSort.sort([\"a\"])#3",
        "contextId": 1112,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 541
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 608
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "InsertionSort.sort([\"aa\",\"a\"])#3",
        "contextId": 1113,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 541
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 608
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "InsertionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#3",
        "contextId": 1118,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 541
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 608
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "InsertionSort.sort([\"aa\",\"aa\"])#3",
        "contextId": 1132,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 541
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 608
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "insertion-sort",
    "algo": "insertion-sort_InsertionSort",
    "name": "InsertionSort should sort array with custom comparator@InsertionSort.test.js",
    "label": "InsertionSort should sort array with custom comparator",
    "testNamePattern": "InsertionSort should sort array with custom comparator",
    "testFilePaths": [
      "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js"
    ],
    "number": 216,
    "pdgs": [
      {
        "pdgTitle": "InsertionSort.sort([\"\"])",
        "uniqueTitle": "InsertionSort.sort([\"\"])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 541
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 608
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([\"a\"])",
        "uniqueTitle": "InsertionSort.sort([\"a\"])#4",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 541
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 608
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "InsertionSort.sort([\"aa\",\"a\"])#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 541
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 608
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "InsertionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#4",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 541
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 608
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "InsertionSort.sort([\"aa\",\"aa\"])#4",
        "contextId": 33,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 541
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 608
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "insertion-sort",
    "algo": "insertion-sort_InsertionSort",
    "name": "InsertionSort should do stable sorting@InsertionSort.test.js",
    "label": "InsertionSort should do stable sorting",
    "testNamePattern": "InsertionSort should do stable sorting",
    "testFilePaths": [
      "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js"
    ],
    "number": 217,
    "pdgs": [
      {
        "pdgTitle": "InsertionSort.sort([\"bb\",\"aa\",\"c\"])",
        "uniqueTitle": "InsertionSort.sort([\"bb\",\"aa\",\"c\"])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 25,
              "column": 39,
              "index": 653
            },
            "end": {
              "line": 27,
              "column": 3,
              "index": 709
            }
          }
        }
      },
      {
        "pdgTitle": "InsertionSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "InsertionSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 25,
              "column": 39,
              "index": 653
            },
            "end": {
              "line": 27,
              "column": 3,
              "index": 709
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "insertion-sort",
    "algo": "insertion-sort_InsertionSort",
    "name": "InsertionSort should sort negative numbers@InsertionSort.test.js",
    "label": "InsertionSort should sort negative numbers",
    "testNamePattern": "InsertionSort should sort negative numbers",
    "testFilePaths": [
      "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js"
    ],
    "number": 218,
    "pdgs": [
      {
        "pdgTitle": "InsertionSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
        "uniqueTitle": "InsertionSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 29,
              "column": 43,
              "index": 758
            },
            "end": {
              "line": 31,
              "column": 3,
              "index": 820
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "insertion-sort",
    "algo": "insertion-sort_InsertionSort",
    "name": "InsertionSort should visit EQUAL array element specified number of times@InsertionSort.test.js",
    "label": "InsertionSort should visit EQUAL array element specified number of times",
    "testNamePattern": "InsertionSort should visit EQUAL array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js"
    ],
    "number": 219,
    "pdgs": [
      {
        "pdgTitle": "InsertionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "InsertionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 73,
              "index": 899
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 1031
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "insertion-sort",
    "algo": "insertion-sort_InsertionSort",
    "name": "InsertionSort should visit SORTED array element specified number of times@InsertionSort.test.js",
    "label": "InsertionSort should visit SORTED array element specified number of times",
    "testNamePattern": "InsertionSort should visit SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js"
    ],
    "number": 220,
    "pdgs": [
      {
        "pdgTitle": "InsertionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "InsertionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 41,
              "column": 74,
              "index": 1111
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1245
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "insertion-sort",
    "algo": "insertion-sort_InsertionSort",
    "name": "InsertionSort should visit NOT SORTED array element specified number of times@InsertionSort.test.js",
    "label": "InsertionSort should visit NOT SORTED array element specified number of times",
    "testNamePattern": "InsertionSort should visit NOT SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js"
    ],
    "number": 221,
    "pdgs": [
      {
        "pdgTitle": "InsertionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "InsertionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 78,
              "index": 1329
            },
            "end": {
              "line": 55,
              "column": 3,
              "index": 1470
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "insertion-sort",
    "algo": "insertion-sort_InsertionSort",
    "name": "InsertionSort should visit REVERSE SORTED array element specified number of times@InsertionSort.test.js",
    "label": "InsertionSort should visit REVERSE SORTED array element specified number of times",
    "testNamePattern": "InsertionSort should visit REVERSE SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js"
    ],
    "number": 222,
    "pdgs": [
      {
        "pdgTitle": "InsertionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "InsertionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/InsertionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 34,
              "column": 3,
              "index": 1016
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/insertion-sort/__test__/InsertionSort.test.js",
          "loc": {
            "start": {
              "line": 57,
              "column": 82,
              "index": 1558
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 1701
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "merge-sort",
    "algo": "merge-sort_MergeSort",
    "name": "MergeSort should sort array@MergeSort.test.js",
    "label": "MergeSort should sort array",
    "testNamePattern": "MergeSort should sort array",
    "testFilePaths": [
      "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js"
    ],
    "number": 223,
    "pdgs": [
      {
        "pdgTitle": "MergeSort.sort([])",
        "uniqueTitle": "MergeSort.sort([])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 420
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 463
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([1])",
        "uniqueTitle": "MergeSort.sort([1])#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 420
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 463
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([1,2])",
        "uniqueTitle": "MergeSort.sort([1,2])#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 420
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 463
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([2,1])",
        "uniqueTitle": "MergeSort.sort([2,1])#2",
        "contextId": 27,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 420
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 463
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([3,4,2,1,0,0,4,3,4,2])",
        "uniqueTitle": "MergeSort.sort([3,4,2,1,0,0,4,3,4,2])#2",
        "contextId": 40,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 420
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 463
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "MergeSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#3",
        "contextId": 215,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 420
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 463
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "MergeSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#3",
        "contextId": 472,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 420
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 463
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "MergeSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#3",
        "contextId": 857,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 420
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 463
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "MergeSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#3",
        "contextId": 1270,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 420
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 463
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([\"\"])",
        "uniqueTitle": "MergeSort.sort([\"\"])#3",
        "contextId": 1612,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 524
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 587
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([\"a\"])",
        "uniqueTitle": "MergeSort.sort([\"a\"])#3",
        "contextId": 1614,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 524
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 587
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "MergeSort.sort([\"aa\",\"a\"])#3",
        "contextId": 1616,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 524
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 587
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "MergeSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#3",
        "contextId": 1629,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 524
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 587
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "MergeSort.sort([\"aa\",\"aa\"])#3",
        "contextId": 1666,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 524
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 587
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "merge-sort",
    "algo": "merge-sort_MergeSort",
    "name": "MergeSort should sort array with custom comparator@MergeSort.test.js",
    "label": "MergeSort should sort array with custom comparator",
    "testNamePattern": "MergeSort should sort array with custom comparator",
    "testFilePaths": [
      "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js"
    ],
    "number": 224,
    "pdgs": [
      {
        "pdgTitle": "MergeSort.sort([\"\"])",
        "uniqueTitle": "MergeSort.sort([\"\"])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 524
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 587
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([\"a\"])",
        "uniqueTitle": "MergeSort.sort([\"a\"])#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 524
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 587
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "MergeSort.sort([\"aa\",\"a\"])#4",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 524
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 587
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "MergeSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#4",
        "contextId": 29,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 524
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 587
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "MergeSort.sort([\"aa\",\"aa\"])#4",
        "contextId": 66,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 524
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 587
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "merge-sort",
    "algo": "merge-sort_MergeSort",
    "name": "MergeSort should do stable sorting@MergeSort.test.js",
    "label": "MergeSort should do stable sorting",
    "testNamePattern": "MergeSort should do stable sorting",
    "testFilePaths": [
      "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js"
    ],
    "number": 225,
    "pdgs": [
      {
        "pdgTitle": "MergeSort.sort([\"bb\",\"aa\",\"c\"])",
        "uniqueTitle": "MergeSort.sort([\"bb\",\"aa\",\"c\"])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 25,
              "column": 39,
              "index": 632
            },
            "end": {
              "line": 27,
              "column": 3,
              "index": 684
            }
          }
        }
      },
      {
        "pdgTitle": "MergeSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "MergeSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])#2",
        "contextId": 42,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 25,
              "column": 39,
              "index": 632
            },
            "end": {
              "line": 27,
              "column": 3,
              "index": 684
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "merge-sort",
    "algo": "merge-sort_MergeSort",
    "name": "MergeSort should sort negative numbers@MergeSort.test.js",
    "label": "MergeSort should sort negative numbers",
    "testNamePattern": "MergeSort should sort negative numbers",
    "testFilePaths": [
      "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js"
    ],
    "number": 226,
    "pdgs": [
      {
        "pdgTitle": "MergeSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
        "uniqueTitle": "MergeSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 29,
              "column": 43,
              "index": 733
            },
            "end": {
              "line": 31,
              "column": 3,
              "index": 791
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "merge-sort",
    "algo": "merge-sort_MergeSort",
    "name": "MergeSort should visit EQUAL array element specified number of times@MergeSort.test.js",
    "label": "MergeSort should visit EQUAL array element specified number of times",
    "testNamePattern": "MergeSort should visit EQUAL array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js"
    ],
    "number": 227,
    "pdgs": [
      {
        "pdgTitle": "MergeSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "MergeSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 73,
              "index": 870
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 998
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "merge-sort",
    "algo": "merge-sort_MergeSort",
    "name": "MergeSort should visit SORTED array element specified number of times@MergeSort.test.js",
    "label": "MergeSort should visit SORTED array element specified number of times",
    "testNamePattern": "MergeSort should visit SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js"
    ],
    "number": 228,
    "pdgs": [
      {
        "pdgTitle": "MergeSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "MergeSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 41,
              "column": 74,
              "index": 1078
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1208
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "merge-sort",
    "algo": "merge-sort_MergeSort",
    "name": "MergeSort should visit NOT SORTED array element specified number of times@MergeSort.test.js",
    "label": "MergeSort should visit NOT SORTED array element specified number of times",
    "testNamePattern": "MergeSort should visit NOT SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js"
    ],
    "number": 229,
    "pdgs": [
      {
        "pdgTitle": "MergeSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "MergeSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 78,
              "index": 1292
            },
            "end": {
              "line": 55,
              "column": 3,
              "index": 1429
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "merge-sort",
    "algo": "merge-sort_MergeSort",
    "name": "MergeSort should visit REVERSE SORTED array element specified number of times@MergeSort.test.js",
    "label": "MergeSort should visit REVERSE SORTED array element specified number of times",
    "testNamePattern": "MergeSort should visit REVERSE SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js"
    ],
    "number": 230,
    "pdgs": [
      {
        "pdgTitle": "MergeSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "MergeSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/MergeSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 854
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/merge-sort/__test__/MergeSort.test.js",
          "loc": {
            "start": {
              "line": 57,
              "column": 82,
              "index": 1517
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 1656
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSort",
    "name": "QuickSort should sort array@QuickSort.test.js",
    "label": "QuickSort should sort array",
    "testNamePattern": "QuickSort should sort array",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js"
    ],
    "number": 231,
    "pdgs": [
      {
        "pdgTitle": "QuickSort.sort([])",
        "uniqueTitle": "QuickSort.sort([])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 421
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 464
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([1])",
        "uniqueTitle": "QuickSort.sort([1])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 421
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 464
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([1,2])",
        "uniqueTitle": "QuickSort.sort([1,2])#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 421
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 464
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([2,1])",
        "uniqueTitle": "QuickSort.sort([2,1])#2",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 421
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 464
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([3,4,2,1,0,0,4,3,4,2])",
        "uniqueTitle": "QuickSort.sort([3,4,2,1,0,0,4,3,4,2])#2",
        "contextId": 30,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 421
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 464
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "QuickSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#3",
        "contextId": 121,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 421
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 464
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "QuickSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#3",
        "contextId": 1110,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 421
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 464
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "QuickSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#3",
        "contextId": 2099,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 421
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 464
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "QuickSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#3",
        "contextId": 2436,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 421
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 464
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([\"\"])",
        "uniqueTitle": "QuickSort.sort([\"\"])#3",
        "contextId": 2501,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 525
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 588
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([\"a\"])",
        "uniqueTitle": "QuickSort.sort([\"a\"])#3",
        "contextId": 2502,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 525
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 588
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "QuickSort.sort([\"aa\",\"a\"])#3",
        "contextId": 2503,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 525
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 588
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "QuickSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#3",
        "contextId": 2511,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 525
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 588
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "QuickSort.sort([\"aa\",\"aa\"])#3",
        "contextId": 2536,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 525
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 588
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSort",
    "name": "QuickSort should sort array with custom comparator@QuickSort.test.js",
    "label": "QuickSort should sort array with custom comparator",
    "testNamePattern": "QuickSort should sort array with custom comparator",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js"
    ],
    "number": 232,
    "pdgs": [
      {
        "pdgTitle": "QuickSort.sort([\"\"])",
        "uniqueTitle": "QuickSort.sort([\"\"])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 525
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 588
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([\"a\"])",
        "uniqueTitle": "QuickSort.sort([\"a\"])#4",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 525
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 588
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "QuickSort.sort([\"aa\",\"a\"])#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 525
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 588
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "QuickSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#4",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 525
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 588
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "QuickSort.sort([\"aa\",\"aa\"])#4",
        "contextId": 47,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 525
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 588
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSort",
    "name": "QuickSort should do stable sorting@QuickSort.test.js",
    "label": "QuickSort should do stable sorting",
    "testNamePattern": "QuickSort should do stable sorting",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js"
    ],
    "number": 233,
    "pdgs": [
      {
        "pdgTitle": "QuickSort.sort([\"bb\",\"aa\",\"c\"])",
        "uniqueTitle": "QuickSort.sort([\"bb\",\"aa\",\"c\"])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 25,
              "column": 39,
              "index": 633
            },
            "end": {
              "line": 27,
              "column": 3,
              "index": 685
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "QuickSort.sort([\"aa\",\"q\",\"a\",\"bbbb\",\"ccc\"])#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 25,
              "column": 39,
              "index": 633
            },
            "end": {
              "line": 27,
              "column": 3,
              "index": 685
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSort",
    "name": "QuickSort should sort negative numbers@QuickSort.test.js",
    "label": "QuickSort should sort negative numbers",
    "testNamePattern": "QuickSort should sort negative numbers",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js"
    ],
    "number": 234,
    "pdgs": [
      {
        "pdgTitle": "QuickSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
        "uniqueTitle": "QuickSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 29,
              "column": 43,
              "index": 734
            },
            "end": {
              "line": 31,
              "column": 3,
              "index": 792
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSort",
    "name": "QuickSort should visit EQUAL array element specified number of times@QuickSort.test.js",
    "label": "QuickSort should visit EQUAL array element specified number of times",
    "testNamePattern": "QuickSort should visit EQUAL array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js"
    ],
    "number": 235,
    "pdgs": [
      {
        "pdgTitle": "QuickSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "QuickSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 33,
              "column": 73,
              "index": 871
            },
            "end": {
              "line": 39,
              "column": 3,
              "index": 999
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSort",
    "name": "QuickSort should visit SORTED array element specified number of times@QuickSort.test.js",
    "label": "QuickSort should visit SORTED array element specified number of times",
    "testNamePattern": "QuickSort should visit SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js"
    ],
    "number": 236,
    "pdgs": [
      {
        "pdgTitle": "QuickSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "QuickSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 41,
              "column": 74,
              "index": 1079
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1209
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSort",
    "name": "QuickSort should visit NOT SORTED array element specified number of times@QuickSort.test.js",
    "label": "QuickSort should visit NOT SORTED array element specified number of times",
    "testNamePattern": "QuickSort should visit NOT SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js"
    ],
    "number": 237,
    "pdgs": [
      {
        "pdgTitle": "QuickSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "QuickSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 49,
              "column": 78,
              "index": 1293
            },
            "end": {
              "line": 55,
              "column": 3,
              "index": 1430
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSort",
    "name": "QuickSort should visit REVERSE SORTED array element specified number of times@QuickSort.test.js",
    "label": "QuickSort should visit REVERSE SORTED array element specified number of times",
    "testNamePattern": "QuickSort should visit REVERSE SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js"
    ],
    "number": 238,
    "pdgs": [
      {
        "pdgTitle": "QuickSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "QuickSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSort.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 22,
              "index": 167
            },
            "end": {
              "line": 47,
              "column": 3,
              "index": 1486
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSort.test.js",
          "loc": {
            "start": {
              "line": 57,
              "column": 82,
              "index": 1518
            },
            "end": {
              "line": 63,
              "column": 3,
              "index": 1657
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSortInPlace",
    "name": "QuickSortInPlace should sort array@QuickSortInPlace.test.js",
    "label": "QuickSortInPlace should sort array",
    "testNamePattern": "QuickSortInPlace should sort array",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js"
    ],
    "number": 239,
    "pdgs": [
      {
        "pdgTitle": "QuickSortInPlace.sort([])",
        "uniqueTitle": "QuickSortInPlace.sort([])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 440
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 490
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([1])",
        "uniqueTitle": "QuickSortInPlace.sort([1])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 440
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 490
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([1,2])",
        "uniqueTitle": "QuickSortInPlace.sort([1,2])#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 440
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 490
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([2,1])",
        "uniqueTitle": "QuickSortInPlace.sort([2,1])#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 440
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 490
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([3,4,2,1,0,0,4,3,4,2])",
        "uniqueTitle": "QuickSortInPlace.sort([3,4,2,1,0,0,4,3,4,2])#2",
        "contextId": 31,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 440
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 490
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "QuickSortInPlace.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#3",
        "contextId": 110,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 440
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 490
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "QuickSortInPlace.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#3",
        "contextId": 776,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 440
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 490
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "QuickSortInPlace.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#3",
        "contextId": 1342,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 440
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 490
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "QuickSortInPlace.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#3",
        "contextId": 1623,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 440
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 490
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([\"\"])",
        "uniqueTitle": "QuickSortInPlace.sort([\"\"])#3",
        "contextId": 2104,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 551
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 621
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([\"a\"])",
        "uniqueTitle": "QuickSortInPlace.sort([\"a\"])#3",
        "contextId": 2105,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 551
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 621
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([\"aa\",\"a\"])",
        "uniqueTitle": "QuickSortInPlace.sort([\"aa\",\"a\"])#3",
        "contextId": 2106,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 551
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 621
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "QuickSortInPlace.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#3",
        "contextId": 2114,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 551
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 621
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "QuickSortInPlace.sort([\"aa\",\"aa\"])#3",
        "contextId": 2135,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 551
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 621
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSortInPlace",
    "name": "QuickSortInPlace should sort array with custom comparator@QuickSortInPlace.test.js",
    "label": "QuickSortInPlace should sort array with custom comparator",
    "testNamePattern": "QuickSortInPlace should sort array with custom comparator",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js"
    ],
    "number": 240,
    "pdgs": [
      {
        "pdgTitle": "QuickSortInPlace.sort([\"\"])",
        "uniqueTitle": "QuickSortInPlace.sort([\"\"])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 551
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 621
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([\"a\"])",
        "uniqueTitle": "QuickSortInPlace.sort([\"a\"])#4",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 551
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 621
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([\"aa\",\"a\"])",
        "uniqueTitle": "QuickSortInPlace.sort([\"aa\",\"a\"])#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 551
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 621
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "QuickSortInPlace.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#4",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 551
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 621
            }
          }
        }
      },
      {
        "pdgTitle": "QuickSortInPlace.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "QuickSortInPlace.sort([\"aa\",\"aa\"])#4",
        "contextId": 43,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 551
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 621
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSortInPlace",
    "name": "QuickSortInPlace should sort negative numbers@QuickSortInPlace.test.js",
    "label": "QuickSortInPlace should sort negative numbers",
    "testNamePattern": "QuickSortInPlace should sort negative numbers",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js"
    ],
    "number": 241,
    "pdgs": [
      {
        "pdgTitle": "QuickSortInPlace.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
        "uniqueTitle": "QuickSortInPlace.sort([-1,0,5,-10,20,13,-7,3,2,-3])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 25,
              "column": 43,
              "index": 670
            },
            "end": {
              "line": 27,
              "column": 3,
              "index": 735
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSortInPlace",
    "name": "QuickSortInPlace should visit EQUAL array element specified number of times@QuickSortInPlace.test.js",
    "label": "QuickSortInPlace should visit EQUAL array element specified number of times",
    "testNamePattern": "QuickSortInPlace should visit EQUAL array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js"
    ],
    "number": 242,
    "pdgs": [
      {
        "pdgTitle": "QuickSortInPlace.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "QuickSortInPlace.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 29,
              "column": 73,
              "index": 814
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 949
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSortInPlace",
    "name": "QuickSortInPlace should visit SORTED array element specified number of times@QuickSortInPlace.test.js",
    "label": "QuickSortInPlace should visit SORTED array element specified number of times",
    "testNamePattern": "QuickSortInPlace should visit SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js"
    ],
    "number": 243,
    "pdgs": [
      {
        "pdgTitle": "QuickSortInPlace.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "QuickSortInPlace.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 74,
              "index": 1029
            },
            "end": {
              "line": 43,
              "column": 3,
              "index": 1166
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSortInPlace",
    "name": "QuickSortInPlace should visit NOT SORTED array element specified number of times@QuickSortInPlace.test.js",
    "label": "QuickSortInPlace should visit NOT SORTED array element specified number of times",
    "testNamePattern": "QuickSortInPlace should visit NOT SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js"
    ],
    "number": 244,
    "pdgs": [
      {
        "pdgTitle": "QuickSortInPlace.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "QuickSortInPlace.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 45,
              "column": 78,
              "index": 1250
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1394
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "quick-sort",
    "algo": "quick-sort_QuickSortInPlace",
    "name": "QuickSortInPlace should visit REVERSE SORTED array element specified number of times@QuickSortInPlace.test.js",
    "label": "QuickSortInPlace should visit REVERSE SORTED array element specified number of times",
    "testNamePattern": "QuickSortInPlace should visit REVERSE SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js"
    ],
    "number": 245,
    "pdgs": [
      {
        "pdgTitle": "QuickSortInPlace.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "QuickSortInPlace.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/QuickSortInPlace.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 22,
              "index": 577
            },
            "end": {
              "line": 84,
              "column": 3,
              "index": 3254
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/quick-sort/__test__/QuickSortInPlace.test.js",
          "loc": {
            "start": {
              "line": 53,
              "column": 82,
              "index": 1482
            },
            "end": {
              "line": 59,
              "column": 3,
              "index": 1628
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "radix-sort",
    "algo": "radix-sort_RadixSort",
    "name": "RadixSort should sort array@RadixSort.test.js",
    "label": "RadixSort should sort array",
    "testNamePattern": "RadixSort should sort array",
    "testFilePaths": [
      "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js"
    ],
    "number": 246,
    "pdgs": [
      {
        "pdgTitle": "RadixSort.sort([])",
        "uniqueTitle": "RadixSort.sort([])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 22,
              "index": 360
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1137
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 32,
              "index": 263
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 306
            }
          }
        }
      },
      {
        "pdgTitle": "RadixSort.sort([1])",
        "uniqueTitle": "RadixSort.sort([1])#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 22,
              "index": 360
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1137
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 32,
              "index": 263
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 306
            }
          }
        }
      },
      {
        "pdgTitle": "RadixSort.sort([1,2])",
        "uniqueTitle": "RadixSort.sort([1,2])#2",
        "contextId": 50,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 22,
              "index": 360
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1137
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 32,
              "index": 263
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 306
            }
          }
        }
      },
      {
        "pdgTitle": "RadixSort.sort([2,1])",
        "uniqueTitle": "RadixSort.sort([2,1])#2",
        "contextId": 83,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 22,
              "index": 360
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1137
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 32,
              "index": 263
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 306
            }
          }
        }
      },
      {
        "pdgTitle": "RadixSort.sort([3,4,2,1,0,0,4,3,4,2])",
        "uniqueTitle": "RadixSort.sort([3,4,2,1,0,0,4,3,4,2])#2",
        "contextId": 116,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 22,
              "index": 360
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1137
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 32,
              "index": 263
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 306
            }
          }
        }
      },
      {
        "pdgTitle": "RadixSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "RadixSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#2",
        "contextId": 165,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 22,
              "index": 360
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1137
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 32,
              "index": 263
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 306
            }
          }
        }
      },
      {
        "pdgTitle": "RadixSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "RadixSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#2",
        "contextId": 296,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 22,
              "index": 360
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1137
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 32,
              "index": 263
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 306
            }
          }
        }
      },
      {
        "pdgTitle": "RadixSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "RadixSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#2",
        "contextId": 427,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 22,
              "index": 360
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1137
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 32,
              "index": 263
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 306
            }
          }
        }
      },
      {
        "pdgTitle": "RadixSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "RadixSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#2",
        "contextId": 558,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 22,
              "index": 360
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1137
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 32,
              "index": 263
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 306
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "radix-sort",
    "algo": "radix-sort_RadixSort",
    "name": "RadixSort should visit array of strings n (number of strings) x m (length of longest element) times@RadixSort.test.js",
    "label": "RadixSort should visit array of strings n (number of strings) x m (length of longest element) times",
    "testNamePattern": "RadixSort should visit array of strings n .number of strings. x m .length of longest element. times",
    "testFilePaths": [
      "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js"
    ],
    "number": 247,
    "pdgs": [
      {
        "pdgTitle": "RadixSort.sort([\"zzz\",\"bb\",\"a\",\"rr\",\"rrb\",\"rrba\"])",
        "uniqueTitle": "RadixSort.sort([\"zzz\",\"bb\",\"a\",\"rr\",\"rrb\",\"rrba\"])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 22,
              "index": 360
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1137
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 104,
              "index": 416
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 577
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "radix-sort",
    "algo": "radix-sort_RadixSort",
    "name": "RadixSort should visit array of integers n (number of elements) x m (length of longest integer) times@RadixSort.test.js",
    "label": "RadixSort should visit array of integers n (number of elements) x m (length of longest integer) times",
    "testNamePattern": "RadixSort should visit array of integers n .number of elements. x m .length of longest integer. times",
    "testFilePaths": [
      "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js"
    ],
    "number": 248,
    "pdgs": [
      {
        "pdgTitle": "RadixSort.sort([3,1,75,32,884,523,4343456,232,123,656,343])",
        "uniqueTitle": "RadixSort.sort([3,1,75,32,884,523,4343456,232,123,656,343])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/RadixSort.js",
          "loc": {
            "start": {
              "line": 13,
              "column": 22,
              "index": 360
            },
            "end": {
              "line": 36,
              "column": 3,
              "index": 1137
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/radix-sort/__test__/RadixSort.test.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 106,
              "index": 689
            },
            "end": {
              "line": 26,
              "column": 3,
              "index": 865
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "selection-sort",
    "algo": "selection-sort_SelectionSort",
    "name": "SelectionSort should sort array@SelectionSort.test.js",
    "label": "SelectionSort should sort array",
    "testNamePattern": "SelectionSort should sort array",
    "testFilePaths": [
      "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js"
    ],
    "number": 249,
    "pdgs": [
      {
        "pdgTitle": "SelectionSort.sort([])",
        "uniqueTitle": "SelectionSort.sort([])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 435
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 482
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([1])",
        "uniqueTitle": "SelectionSort.sort([1])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 435
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 482
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([1,2])",
        "uniqueTitle": "SelectionSort.sort([1,2])#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 435
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 482
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([2,1])",
        "uniqueTitle": "SelectionSort.sort([2,1])#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 435
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 482
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([3,4,2,1,0,0,4,3,4,2])",
        "uniqueTitle": "SelectionSort.sort([3,4,2,1,0,0,4,3,4,2])#2",
        "contextId": 24,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 435
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 482
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "SelectionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#3",
        "contextId": 169,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 435
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 482
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "SelectionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#3",
        "contextId": 759,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 435
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 482
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "SelectionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#3",
        "contextId": 1349,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 435
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 482
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "SelectionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#3",
        "contextId": 1939,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 435
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 482
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([\"\"])",
        "uniqueTitle": "SelectionSort.sort([\"\"])#3",
        "contextId": 2534,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 543
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 610
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([\"a\"])",
        "uniqueTitle": "SelectionSort.sort([\"a\"])#3",
        "contextId": 2535,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 543
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 610
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "SelectionSort.sort([\"aa\",\"a\"])#3",
        "contextId": 2536,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 543
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 610
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "SelectionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#3",
        "contextId": 2541,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 543
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 610
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "SelectionSort.sort([\"aa\",\"aa\"])#3",
        "contextId": 2563,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 543
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 610
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "selection-sort",
    "algo": "selection-sort_SelectionSort",
    "name": "SelectionSort should sort array with custom comparator@SelectionSort.test.js",
    "label": "SelectionSort should sort array with custom comparator",
    "testNamePattern": "SelectionSort should sort array with custom comparator",
    "testFilePaths": [
      "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js"
    ],
    "number": 250,
    "pdgs": [
      {
        "pdgTitle": "SelectionSort.sort([\"\"])",
        "uniqueTitle": "SelectionSort.sort([\"\"])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 543
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 610
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([\"a\"])",
        "uniqueTitle": "SelectionSort.sort([\"a\"])#4",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 543
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 610
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "SelectionSort.sort([\"aa\",\"a\"])#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 543
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 610
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "SelectionSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#4",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 543
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 610
            }
          }
        }
      },
      {
        "pdgTitle": "SelectionSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "SelectionSort.sort([\"aa\",\"aa\"])#4",
        "contextId": 41,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 543
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 610
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "selection-sort",
    "algo": "selection-sort_SelectionSort",
    "name": "SelectionSort should sort negative numbers@SelectionSort.test.js",
    "label": "SelectionSort should sort negative numbers",
    "testNamePattern": "SelectionSort should sort negative numbers",
    "testFilePaths": [
      "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js"
    ],
    "number": 251,
    "pdgs": [
      {
        "pdgTitle": "SelectionSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
        "uniqueTitle": "SelectionSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 25,
              "column": 43,
              "index": 659
            },
            "end": {
              "line": 27,
              "column": 3,
              "index": 721
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "selection-sort",
    "algo": "selection-sort_SelectionSort",
    "name": "SelectionSort should visit EQUAL array element specified number of times@SelectionSort.test.js",
    "label": "SelectionSort should visit EQUAL array element specified number of times",
    "testNamePattern": "SelectionSort should visit EQUAL array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js"
    ],
    "number": 252,
    "pdgs": [
      {
        "pdgTitle": "SelectionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "SelectionSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 29,
              "column": 73,
              "index": 800
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 932
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "selection-sort",
    "algo": "selection-sort_SelectionSort",
    "name": "SelectionSort should visit SORTED array element specified number of times@SelectionSort.test.js",
    "label": "SelectionSort should visit SORTED array element specified number of times",
    "testNamePattern": "SelectionSort should visit SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js"
    ],
    "number": 253,
    "pdgs": [
      {
        "pdgTitle": "SelectionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "SelectionSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 74,
              "index": 1012
            },
            "end": {
              "line": 43,
              "column": 3,
              "index": 1146
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "selection-sort",
    "algo": "selection-sort_SelectionSort",
    "name": "SelectionSort should visit NOT SORTED array element specified number of times@SelectionSort.test.js",
    "label": "SelectionSort should visit NOT SORTED array element specified number of times",
    "testNamePattern": "SelectionSort should visit NOT SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js"
    ],
    "number": 254,
    "pdgs": [
      {
        "pdgTitle": "SelectionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "SelectionSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 45,
              "column": 78,
              "index": 1230
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1371
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "selection-sort",
    "algo": "selection-sort_SelectionSort",
    "name": "SelectionSort should visit REVERSE SORTED array element specified number of times@SelectionSort.test.js",
    "label": "SelectionSort should visit REVERSE SORTED array element specified number of times",
    "testNamePattern": "SelectionSort should visit REVERSE SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js"
    ],
    "number": 255,
    "pdgs": [
      {
        "pdgTitle": "SelectionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "SelectionSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/SelectionSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 104
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 956
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/selection-sort/__test__/SelectionSort.test.js",
          "loc": {
            "start": {
              "line": 53,
              "column": 82,
              "index": 1459
            },
            "end": {
              "line": 59,
              "column": 3,
              "index": 1602
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "shell-sort",
    "algo": "shell-sort_ShellSort",
    "name": "ShellSort should sort array@ShellSort.test.js",
    "label": "ShellSort should sort array",
    "testNamePattern": "ShellSort should sort array",
    "testFilePaths": [
      "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js"
    ],
    "number": 256,
    "pdgs": [
      {
        "pdgTitle": "ShellSort.sort([])",
        "uniqueTitle": "ShellSort.sort([])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 423
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 466
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([1])",
        "uniqueTitle": "ShellSort.sort([1])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 423
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 466
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([1,2])",
        "uniqueTitle": "ShellSort.sort([1,2])#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 423
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 466
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([2,1])",
        "uniqueTitle": "ShellSort.sort([2,1])#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 423
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 466
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([3,4,2,1,0,0,4,3,4,2])",
        "uniqueTitle": "ShellSort.sort([3,4,2,1,0,0,4,3,4,2])#2",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 423
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 466
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "ShellSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#3",
        "contextId": 233,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 423
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 466
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "ShellSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#3",
        "contextId": 1194,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 423
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 466
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "ShellSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#3",
        "contextId": 2155,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 423
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 466
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "ShellSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#3",
        "contextId": 3116,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 17,
              "column": 32,
              "index": 423
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 466
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([\"\"])",
        "uniqueTitle": "ShellSort.sort([\"\"])#3",
        "contextId": 4082,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 527
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([\"a\"])",
        "uniqueTitle": "ShellSort.sort([\"a\"])#3",
        "contextId": 4083,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 527
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "ShellSort.sort([\"aa\",\"a\"])#3",
        "contextId": 4084,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 527
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "ShellSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#3",
        "contextId": 4088,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 527
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "ShellSort.sort([\"aa\",\"aa\"])#3",
        "contextId": 4113,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 527
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 590
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "shell-sort",
    "algo": "shell-sort_ShellSort",
    "name": "ShellSort should sort array with custom comparator@ShellSort.test.js",
    "label": "ShellSort should sort array with custom comparator",
    "testNamePattern": "ShellSort should sort array with custom comparator",
    "testFilePaths": [
      "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js"
    ],
    "number": 257,
    "pdgs": [
      {
        "pdgTitle": "ShellSort.sort([\"\"])",
        "uniqueTitle": "ShellSort.sort([\"\"])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 527
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([\"a\"])",
        "uniqueTitle": "ShellSort.sort([\"a\"])#4",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 527
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([\"aa\",\"a\"])",
        "uniqueTitle": "ShellSort.sort([\"aa\",\"a\"])#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 527
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])",
        "uniqueTitle": "ShellSort.sort([\"aa\",\"q\",\"bbbb\",\"ccc\"])#4",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 527
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 590
            }
          }
        }
      },
      {
        "pdgTitle": "ShellSort.sort([\"aa\",\"aa\"])",
        "uniqueTitle": "ShellSort.sort([\"aa\",\"aa\"])#4",
        "contextId": 43,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 21,
              "column": 55,
              "index": 527
            },
            "end": {
              "line": 23,
              "column": 3,
              "index": 590
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "shell-sort",
    "algo": "shell-sort_ShellSort",
    "name": "ShellSort should sort negative numbers@ShellSort.test.js",
    "label": "ShellSort should sort negative numbers",
    "testNamePattern": "ShellSort should sort negative numbers",
    "testFilePaths": [
      "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js"
    ],
    "number": 258,
    "pdgs": [
      {
        "pdgTitle": "ShellSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])",
        "uniqueTitle": "ShellSort.sort([-1,0,5,-10,20,13,-7,3,2,-3])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 25,
              "column": 43,
              "index": 639
            },
            "end": {
              "line": 27,
              "column": 3,
              "index": 697
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "shell-sort",
    "algo": "shell-sort_ShellSort",
    "name": "ShellSort should visit EQUAL array element specified number of times@ShellSort.test.js",
    "label": "ShellSort should visit EQUAL array element specified number of times",
    "testNamePattern": "ShellSort should visit EQUAL array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js"
    ],
    "number": 259,
    "pdgs": [
      {
        "pdgTitle": "ShellSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])",
        "uniqueTitle": "ShellSort.sort([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 29,
              "column": 73,
              "index": 776
            },
            "end": {
              "line": 35,
              "column": 3,
              "index": 904
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "shell-sort",
    "algo": "shell-sort_ShellSort",
    "name": "ShellSort should visit SORTED array element specified number of times@ShellSort.test.js",
    "label": "ShellSort should visit SORTED array element specified number of times",
    "testNamePattern": "ShellSort should visit SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js"
    ],
    "number": 260,
    "pdgs": [
      {
        "pdgTitle": "ShellSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])",
        "uniqueTitle": "ShellSort.sort([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 37,
              "column": 74,
              "index": 984
            },
            "end": {
              "line": 43,
              "column": 3,
              "index": 1114
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "shell-sort",
    "algo": "shell-sort_ShellSort",
    "name": "ShellSort should visit NOT SORTED array element specified number of times@ShellSort.test.js",
    "label": "ShellSort should visit NOT SORTED array element specified number of times",
    "testNamePattern": "ShellSort should visit NOT SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js"
    ],
    "number": 261,
    "pdgs": [
      {
        "pdgTitle": "ShellSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])",
        "uniqueTitle": "ShellSort.sort([15,8,5,12,10,1,16,9,11,7,20,3,2,6,17,18,4,13,14,19])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 45,
              "column": 78,
              "index": 1198
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1335
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "sorting",
    "chapter": "shell-sort",
    "algo": "shell-sort_ShellSort",
    "name": "ShellSort should visit REVERSE SORTED array element specified number of times@ShellSort.test.js",
    "label": "ShellSort should visit REVERSE SORTED array element specified number of times",
    "testNamePattern": "ShellSort should visit REVERSE SORTED array element specified number of times",
    "testFilePaths": [
      "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js"
    ],
    "number": 262,
    "pdgs": [
      {
        "pdgTitle": "ShellSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])",
        "uniqueTitle": "ShellSort.sort([20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/ShellSort.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 22,
              "index": 100
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 1305
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/sorting/shell-sort/__test__/ShellSort.test.js",
          "loc": {
            "start": {
              "line": 53,
              "column": 82,
              "index": 1423
            },
            "end": {
              "line": 59,
              "column": 3,
              "index": 1562
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "statistics",
    "chapter": "weighted-random",
    "algo": "weighted-random_weightedRandom",
    "name": "weightedRandom should throw an error when the number of weights does not match the number of items@weightedRandom.test.js",
    "label": "weightedRandom should throw an error when the number of weights does not match the number of items",
    "testNamePattern": "weightedRandom should throw an error when the number of weights does not match the number of items",
    "testFilePaths": [
      "src/algorithms/statistics/weighted-random/__test__/weightedRandom.test.js"
    ],
    "number": 263
  },
  {
    "chapterGroup": "statistics",
    "chapter": "weighted-random",
    "algo": "weighted-random_weightedRandom",
    "name": "weightedRandom should throw an error when the number of weights or items are empty@weightedRandom.test.js",
    "label": "weightedRandom should throw an error when the number of weights or items are empty",
    "testNamePattern": "weightedRandom should throw an error when the number of weights or items are empty",
    "testFilePaths": [
      "src/algorithms/statistics/weighted-random/__test__/weightedRandom.test.js"
    ],
    "number": 264
  },
  {
    "chapterGroup": "statistics",
    "chapter": "weighted-random",
    "algo": "weighted-random_weightedRandom",
    "name": "weightedRandom should correctly do random selection based on wights in straightforward cases@weightedRandom.test.js",
    "label": "weightedRandom should correctly do random selection based on wights in straightforward cases",
    "testNamePattern": "weightedRandom should correctly do random selection based on wights in straightforward cases",
    "testFilePaths": [
      "src/algorithms/statistics/weighted-random/__test__/weightedRandom.test.js"
    ],
    "number": 265
  },
  {
    "chapterGroup": "statistics",
    "chapter": "weighted-random",
    "algo": "weighted-random_weightedRandom",
    "name": "weightedRandom should correctly do random selection based on wights@weightedRandom.test.js",
    "label": "weightedRandom should correctly do random selection based on wights",
    "testNamePattern": "weightedRandom should correctly do random selection based on wights",
    "testFilePaths": [
      "src/algorithms/statistics/weighted-random/__test__/weightedRandom.test.js"
    ],
    "number": 266
  },
  {
    "chapterGroup": "string",
    "chapter": "hamming-distance",
    "algo": "hamming-distance_hammingDistance",
    "name": "hammingDistance should throw an error when trying to compare the strings of different lengths@hammingDistance.test.js",
    "label": "hammingDistance should throw an error when trying to compare the strings of different lengths",
    "testNamePattern": "hammingDistance should throw an error when trying to compare the strings of different lengths",
    "testFilePaths": [
      "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js"
    ],
    "number": 267,
    "pdgs": [
      {
        "pdgTitle": "hammingDistance(a, aa)",
        "uniqueTitle": "hammingDistance(a, aa)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 46,
              "index": 121
            },
            "end": {
              "line": 20,
              "column": 1,
              "index": 372
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 50,
              "index": 235
            },
            "end": {
              "line": 7,
              "column": 5,
              "index": 278
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "string",
    "chapter": "hamming-distance",
    "algo": "hamming-distance_hammingDistance",
    "name": "hammingDistance should calculate difference between two strings@hammingDistance.test.js",
    "label": "hammingDistance should calculate difference between two strings",
    "testNamePattern": "hammingDistance should calculate difference between two strings",
    "testFilePaths": [
      "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js"
    ],
    "number": 268,
    "pdgs": [
      {
        "pdgTitle": "hammingDistance(a, a)",
        "uniqueTitle": "hammingDistance(a, a)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 46,
              "index": 121
            },
            "end": {
              "line": 20,
              "column": 1,
              "index": 372
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 62,
              "index": 415
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 809
            }
          }
        }
      },
      {
        "pdgTitle": "hammingDistance(a, b)",
        "uniqueTitle": "hammingDistance(a, b)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 46,
              "index": 121
            },
            "end": {
              "line": 20,
              "column": 1,
              "index": 372
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 62,
              "index": 415
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 809
            }
          }
        }
      },
      {
        "pdgTitle": "hammingDistance(abc, add)",
        "uniqueTitle": "hammingDistance(abc, add)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 46,
              "index": 121
            },
            "end": {
              "line": 20,
              "column": 1,
              "index": 372
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 62,
              "index": 415
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 809
            }
          }
        }
      },
      {
        "pdgTitle": "hammingDistance(karolin, kathrin)",
        "uniqueTitle": "hammingDistance(karolin, kathrin)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 46,
              "index": 121
            },
            "end": {
              "line": 20,
              "column": 1,
              "index": 372
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 62,
              "index": 415
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 809
            }
          }
        }
      },
      {
        "pdgTitle": "hammingDistance(karolin, kerstin)",
        "uniqueTitle": "hammingDistance(karolin, kerstin)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 46,
              "index": 121
            },
            "end": {
              "line": 20,
              "column": 1,
              "index": 372
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 62,
              "index": 415
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 809
            }
          }
        }
      },
      {
        "pdgTitle": "hammingDistance(1011101, 1001001)",
        "uniqueTitle": "hammingDistance(1011101, 1001001)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 46,
              "index": 121
            },
            "end": {
              "line": 20,
              "column": 1,
              "index": 372
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 62,
              "index": 415
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 809
            }
          }
        }
      },
      {
        "pdgTitle": "hammingDistance(2173896, 2233796)",
        "uniqueTitle": "hammingDistance(2173896, 2233796)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/string/hamming-distance/hammingDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 46,
              "index": 121
            },
            "end": {
              "line": 20,
              "column": 1,
              "index": 372
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/hamming-distance/__test__/hammingDistance.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 62,
              "index": 415
            },
            "end": {
              "line": 20,
              "column": 3,
              "index": 809
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "string",
    "chapter": "knuth-morris-pratt",
    "algo": "knuth-morris-pratt_knuthMorrisPratt",
    "name": "knuthMorrisPratt should find word position in given text@knuthMorrisPratt.test.js",
    "label": "knuthMorrisPratt should find word position in given text",
    "testNamePattern": "knuthMorrisPratt should find word position in given text",
    "testFilePaths": [
      "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js"
    ],
    "number": 269,
    "pdgs": [
      {
        "pdgTitle": "knuthMorrisPratt(, )",
        "uniqueTitle": "knuthMorrisPratt(, )#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
          "loc": {
            "start": {
              "line": 32,
              "column": 53,
              "index": 762
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 54,
              "index": 147
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 778
            }
          }
        }
      },
      {
        "pdgTitle": "knuthMorrisPratt(a, )",
        "uniqueTitle": "knuthMorrisPratt(a, )#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
          "loc": {
            "start": {
              "line": 32,
              "column": 53,
              "index": 762
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 54,
              "index": 147
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 778
            }
          }
        }
      },
      {
        "pdgTitle": "knuthMorrisPratt(a, a)",
        "uniqueTitle": "knuthMorrisPratt(a, a)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
          "loc": {
            "start": {
              "line": 32,
              "column": 53,
              "index": 762
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 54,
              "index": 147
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 778
            }
          }
        }
      },
      {
        "pdgTitle": "knuthMorrisPratt(abcbcglx, abca)",
        "uniqueTitle": "knuthMorrisPratt(abcbcglx, abca)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
          "loc": {
            "start": {
              "line": 32,
              "column": 53,
              "index": 762
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 54,
              "index": 147
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 778
            }
          }
        }
      },
      {
        "pdgTitle": "knuthMorrisPratt(abcbcglx, bcgl)",
        "uniqueTitle": "knuthMorrisPratt(abcbcglx, bcgl)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
          "loc": {
            "start": {
              "line": 32,
              "column": 53,
              "index": 762
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 54,
              "index": 147
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 778
            }
          }
        }
      },
      {
        "pdgTitle": "knuthMorrisPratt(abcxabcdabxabcdabcdabcy, abcdabcy)",
        "uniqueTitle": "knuthMorrisPratt(abcxabcdabxabcdabcdabcy, abcdabcy)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
          "loc": {
            "start": {
              "line": 32,
              "column": 53,
              "index": 762
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 54,
              "index": 147
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 778
            }
          }
        }
      },
      {
        "pdgTitle": "knuthMorrisPratt(abcxabcdabxabcdabcdabcy, abcdabca)",
        "uniqueTitle": "knuthMorrisPratt(abcxabcdabxabcdabcdabcy, abcdabca)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
          "loc": {
            "start": {
              "line": 32,
              "column": 53,
              "index": 762
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 54,
              "index": 147
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 778
            }
          }
        }
      },
      {
        "pdgTitle": "knuthMorrisPratt(abcxabcdabxaabcdabcabcdabcdabcy, abcdabca)",
        "uniqueTitle": "knuthMorrisPratt(abcxabcdabxaabcdabcabcdabcdabcy, abcdabca)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
          "loc": {
            "start": {
              "line": 32,
              "column": 53,
              "index": 762
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 54,
              "index": 147
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 778
            }
          }
        }
      },
      {
        "pdgTitle": "knuthMorrisPratt(abcxabcdabxaabaabaaaabcdabcdabcy, aabaabaaa)",
        "uniqueTitle": "knuthMorrisPratt(abcxabcdabxaabaabaaaabcdabcdabcy, aabaabaaa)#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/knuthMorrisPratt.js",
          "loc": {
            "start": {
              "line": 32,
              "column": 53,
              "index": 762
            },
            "end": {
              "line": 59,
              "column": 1,
              "index": 1344
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/knuth-morris-pratt/__test__/knuthMorrisPratt.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 54,
              "index": 147
            },
            "end": {
              "line": 18,
              "column": 3,
              "index": 778
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "string",
    "chapter": "levenshtein-distance",
    "algo": "levenshtein-distance_levenshteinDistance",
    "name": "levenshteinDistance should calculate edit distance between two strings@levenshteinDistance.test.js",
    "label": "levenshteinDistance should calculate edit distance between two strings",
    "testNamePattern": "levenshteinDistance should calculate edit distance between two strings",
    "testFilePaths": [
      "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js"
    ],
    "number": 270,
    "pdgs": [
      {
        "pdgTitle": "levenshteinDistance(, )",
        "uniqueTitle": "levenshteinDistance(, )#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 50,
              "index": 125
            },
            "end": {
              "line": 39,
              "column": 1,
              "index": 1334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 65,
              "index": 167
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 1161
            }
          }
        }
      },
      {
        "pdgTitle": "levenshteinDistance(a, )",
        "uniqueTitle": "levenshteinDistance(a, )#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 50,
              "index": 125
            },
            "end": {
              "line": 39,
              "column": 1,
              "index": 1334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 65,
              "index": 167
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 1161
            }
          }
        }
      },
      {
        "pdgTitle": "levenshteinDistance(, a)",
        "uniqueTitle": "levenshteinDistance(, a)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 50,
              "index": 125
            },
            "end": {
              "line": 39,
              "column": 1,
              "index": 1334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 65,
              "index": 167
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 1161
            }
          }
        }
      },
      {
        "pdgTitle": "levenshteinDistance(abc, )",
        "uniqueTitle": "levenshteinDistance(abc, )#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 50,
              "index": 125
            },
            "end": {
              "line": 39,
              "column": 1,
              "index": 1334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 65,
              "index": 167
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 1161
            }
          }
        }
      },
      {
        "pdgTitle": "levenshteinDistance(, abc)",
        "uniqueTitle": "levenshteinDistance(, abc)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 50,
              "index": 125
            },
            "end": {
              "line": 39,
              "column": 1,
              "index": 1334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 65,
              "index": 167
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 1161
            }
          }
        }
      },
      {
        "pdgTitle": "levenshteinDistance(islander, slander)",
        "uniqueTitle": "levenshteinDistance(islander, slander)#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 50,
              "index": 125
            },
            "end": {
              "line": 39,
              "column": 1,
              "index": 1334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 65,
              "index": 167
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 1161
            }
          }
        }
      },
      {
        "pdgTitle": "levenshteinDistance(mart, karma)",
        "uniqueTitle": "levenshteinDistance(mart, karma)#2",
        "contextId": 28,
        "algoLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 50,
              "index": 125
            },
            "end": {
              "line": 39,
              "column": 1,
              "index": 1334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 65,
              "index": 167
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 1161
            }
          }
        }
      },
      {
        "pdgTitle": "levenshteinDistance(kitten, sitting)",
        "uniqueTitle": "levenshteinDistance(kitten, sitting)#2",
        "contextId": 35,
        "algoLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 50,
              "index": 125
            },
            "end": {
              "line": 39,
              "column": 1,
              "index": 1334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 65,
              "index": 167
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 1161
            }
          }
        }
      },
      {
        "pdgTitle": "levenshteinDistance(ball, football)",
        "uniqueTitle": "levenshteinDistance(ball, football)#2",
        "contextId": 44,
        "algoLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 50,
              "index": 125
            },
            "end": {
              "line": 39,
              "column": 1,
              "index": 1334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 65,
              "index": 167
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 1161
            }
          }
        }
      },
      {
        "pdgTitle": "levenshteinDistance(football, foot)",
        "uniqueTitle": "levenshteinDistance(football, foot)#2",
        "contextId": 54,
        "algoLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 50,
              "index": 125
            },
            "end": {
              "line": 39,
              "column": 1,
              "index": 1334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 65,
              "index": 167
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 1161
            }
          }
        }
      },
      {
        "pdgTitle": "levenshteinDistance(intention, execution)",
        "uniqueTitle": "levenshteinDistance(intention, execution)#2",
        "contextId": 60,
        "algoLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/levenshteinDistance.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 50,
              "index": 125
            },
            "end": {
              "line": 39,
              "column": 1,
              "index": 1334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/levenshtein-distance/__test__/levenshteinDistance.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 65,
              "index": 167
            },
            "end": {
              "line": 28,
              "column": 3,
              "index": 1161
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "string",
    "chapter": "longest-common-substring",
    "algo": "longest-common-substring_longestCommonSubstring",
    "name": "longestCommonSubstring should find longest common substring between two strings@longestCommonSubstring.test.js",
    "label": "longestCommonSubstring should find longest common substring between two strings",
    "testNamePattern": "longestCommonSubstring should find longest common substring between two strings",
    "testFilePaths": [
      "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js"
    ],
    "number": 271,
    "pdgs": [
      {
        "pdgTitle": "longestCommonSubstring(, )",
        "uniqueTitle": "longestCommonSubstring(, )#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 65,
              "index": 152
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 71,
              "index": 182
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 756
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubstring(ABC, )",
        "uniqueTitle": "longestCommonSubstring(ABC, )#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 65,
              "index": 152
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 71,
              "index": 182
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 756
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubstring(, ABC)",
        "uniqueTitle": "longestCommonSubstring(, ABC)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 65,
              "index": 152
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 71,
              "index": 182
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 756
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubstring(ABABC, BABCA)",
        "uniqueTitle": "longestCommonSubstring(ABABC, BABCA)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 65,
              "index": 152
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 71,
              "index": 182
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 756
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubstring(BABCA, ABCBA)",
        "uniqueTitle": "longestCommonSubstring(BABCA, ABCBA)#2",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 65,
              "index": 152
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 71,
              "index": 182
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 756
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubstring(Algorithms and data structures implemented in JavaScript, Here you may find Algorithms and data structures that are implemented in JavaScript)",
        "uniqueTitle": "longestCommonSubstring(Algorithms and data structures implemented in JavaScript, Here you may find Algorithms and data structures that are implemented in JavaScript)#2",
        "contextId": 28,
        "algoLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 65,
              "index": 152
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 71,
              "index": 182
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 756
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "string",
    "chapter": "longest-common-substring",
    "algo": "longest-common-substring_longestCommonSubstring",
    "name": "longestCommonSubstring should handle unicode correctly@longestCommonSubstring.test.js",
    "label": "longestCommonSubstring should handle unicode correctly",
    "testNamePattern": "longestCommonSubstring should handle unicode correctly",
    "testFilePaths": [
      "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js"
    ],
    "number": 272,
    "pdgs": [
      {
        "pdgTitle": "longestCommonSubstring(𐌵𐌵**ABC, 𐌵𐌵--ABC)",
        "uniqueTitle": "longestCommonSubstring(𐌵𐌵**ABC, 𐌵𐌵--ABC)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 65,
              "index": 152
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
          "loc": {
            "start": {
              "line": 18,
              "column": 46,
              "index": 808
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1132
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubstring(𐌵𐌵**A, 𐌵𐌵--A)",
        "uniqueTitle": "longestCommonSubstring(𐌵𐌵**A, 𐌵𐌵--A)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 65,
              "index": 152
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
          "loc": {
            "start": {
              "line": 18,
              "column": 46,
              "index": 808
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1132
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubstring(A买B时, 买B时GD)",
        "uniqueTitle": "longestCommonSubstring(A买B时, 买B时GD)#2",
        "contextId": 21,
        "algoLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 65,
              "index": 152
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
          "loc": {
            "start": {
              "line": 18,
              "column": 46,
              "index": 808
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1132
            }
          }
        }
      },
      {
        "pdgTitle": "longestCommonSubstring(After test买时 case, another_test买时)",
        "uniqueTitle": "longestCommonSubstring(After test买时 case, another_test买时)#2",
        "contextId": 28,
        "algoLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/longestCommonSubstring.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 65,
              "index": 152
            },
            "end": {
              "line": 69,
              "column": 1,
              "index": 2334
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/longest-common-substring/__test__/longestCommonSubstring.test.js",
          "loc": {
            "start": {
              "line": 18,
              "column": 46,
              "index": 808
            },
            "end": {
              "line": 25,
              "column": 3,
              "index": 1132
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "string",
    "chapter": "palindrome",
    "algo": "palindrome_isPalindrome",
    "name": "palindromeCheck should return whether or not the string is a palindrome@isPalindrome.test.js",
    "label": "palindromeCheck should return whether or not the string is a palindrome",
    "testNamePattern": "palindromeCheck should return whether or not the string is a palindrome",
    "testFilePaths": [
      "src/algorithms/string/palindrome/__test__/isPalindrome.test.js"
    ],
    "number": 273,
    "pdgs": [
      {
        "pdgTitle": "isPalindrome(a)",
        "uniqueTitle": "isPalindrome(a)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 45,
              "index": 106
            },
            "end": {
              "line": 19,
              "column": 1,
              "index": 316
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 532
            }
          }
        }
      },
      {
        "pdgTitle": "isPalindrome(pop)",
        "uniqueTitle": "isPalindrome(pop)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 45,
              "index": 106
            },
            "end": {
              "line": 19,
              "column": 1,
              "index": 316
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 532
            }
          }
        }
      },
      {
        "pdgTitle": "isPalindrome(deed)",
        "uniqueTitle": "isPalindrome(deed)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 45,
              "index": 106
            },
            "end": {
              "line": 19,
              "column": 1,
              "index": 316
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 532
            }
          }
        }
      },
      {
        "pdgTitle": "isPalindrome(kayak)",
        "uniqueTitle": "isPalindrome(kayak)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 45,
              "index": 106
            },
            "end": {
              "line": 19,
              "column": 1,
              "index": 316
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 532
            }
          }
        }
      },
      {
        "pdgTitle": "isPalindrome(racecar)",
        "uniqueTitle": "isPalindrome(racecar)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 45,
              "index": 106
            },
            "end": {
              "line": 19,
              "column": 1,
              "index": 316
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 532
            }
          }
        }
      },
      {
        "pdgTitle": "isPalindrome(rad)",
        "uniqueTitle": "isPalindrome(rad)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 45,
              "index": 106
            },
            "end": {
              "line": 19,
              "column": 1,
              "index": 316
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 532
            }
          }
        }
      },
      {
        "pdgTitle": "isPalindrome(dodo)",
        "uniqueTitle": "isPalindrome(dodo)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 45,
              "index": 106
            },
            "end": {
              "line": 19,
              "column": 1,
              "index": 316
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 532
            }
          }
        }
      },
      {
        "pdgTitle": "isPalindrome(polo)",
        "uniqueTitle": "isPalindrome(polo)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/string/palindrome/isPalindrome.js",
          "loc": {
            "start": {
              "line": 6,
              "column": 45,
              "index": 106
            },
            "end": {
              "line": 19,
              "column": 1,
              "index": 316
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/palindrome/__test__/isPalindrome.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 154
            },
            "end": {
              "line": 14,
              "column": 3,
              "index": 532
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "string",
    "chapter": "rabin-karp",
    "algo": "rabin-karp_rabinKarp",
    "name": "rabinKarp should find substring in a string@rabinKarp.test.js",
    "label": "rabinKarp should find substring in a string",
    "testNamePattern": "rabinKarp should find substring in a string",
    "testFilePaths": [
      "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js"
    ],
    "number": 274,
    "pdgs": [
      {
        "pdgTitle": "rabinKarp(, )",
        "uniqueTitle": "rabinKarp(, )#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 120
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 760
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(a, )",
        "uniqueTitle": "rabinKarp(a, )#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 120
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 760
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(a, a)",
        "uniqueTitle": "rabinKarp(a, a)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 120
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 760
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(ab, b)",
        "uniqueTitle": "rabinKarp(ab, b)#2",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 120
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 760
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(abcbcglx, abca)",
        "uniqueTitle": "rabinKarp(abcbcglx, abca)#2",
        "contextId": 33,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 120
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 760
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(abcbcglx, bcgl)",
        "uniqueTitle": "rabinKarp(abcbcglx, bcgl)#2",
        "contextId": 65,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 120
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 760
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(abcxabcdabxabcdabcdabcy, abcdabcy)",
        "uniqueTitle": "rabinKarp(abcxabcdabxabcdabcdabcy, abcdabcy)#2",
        "contextId": 94,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 120
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 760
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(abcxabcdabxabcdabcdabcy, abcdabca)",
        "uniqueTitle": "rabinKarp(abcxabcdabxabcdabcdabcy, abcdabca)#2",
        "contextId": 175,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 120
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 760
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(abcxabcdabxaabcdabcabcdabcdabcy, abcdabca)",
        "uniqueTitle": "rabinKarp(abcxabcdabxaabcdabcabcdabcdabcy, abcdabca)#2",
        "contextId": 256,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 120
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 760
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(abcxabcdabxaabaabaaaabcdabcdabcy, aabaabaaa)",
        "uniqueTitle": "rabinKarp(abcxabcdabxaabaabaaaabcdabcdabcy, aabaabaaa)#2",
        "contextId": 328,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 120
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 760
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(^ !/'#'pp,  !/'#'pp)",
        "uniqueTitle": "rabinKarp(^ !/'#'pp,  !/'#'pp)#2",
        "contextId": 401,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 48,
              "index": 120
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 760
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "string",
    "chapter": "rabin-karp",
    "algo": "rabin-karp_rabinKarp",
    "name": "rabinKarp should work with bigger texts@rabinKarp.test.js",
    "label": "rabinKarp should work with bigger texts",
    "testNamePattern": "rabinKarp should work with bigger texts",
    "testFilePaths": [
      "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js"
    ],
    "number": 275,
    "pdgs": [
      {
        "pdgTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., Lorem)",
        "uniqueTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., Lorem)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 18,
              "column": 44,
              "index": 810
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1864
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., versions)",
        "uniqueTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., versions)#2",
        "contextId": 30,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 18,
              "column": 44,
              "index": 810
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1864
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., versions of Lorem Ipsum.)",
        "uniqueTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., versions of Lorem Ipsum.)#2",
        "contextId": 1713,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 18,
              "column": 44,
              "index": 810
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1864
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., versions of Lorem Ipsum:)",
        "uniqueTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., versions of Lorem Ipsum:)#2",
        "contextId": 3460,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 18,
              "column": 44,
              "index": 810
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1864
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., Lorem Ipsum passages, and more recently with)",
        "uniqueTitle": "rabinKarp(Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktoppublishing software like Aldus PageMaker including versions of Lorem Ipsum., Lorem Ipsum passages, and more recently with)#2",
        "contextId": 5207,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 18,
              "column": 44,
              "index": 810
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1864
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "string",
    "chapter": "rabin-karp",
    "algo": "rabin-karp_rabinKarp",
    "name": "rabinKarp should work with UTF symbols@rabinKarp.test.js",
    "label": "rabinKarp should work with UTF symbols",
    "testNamePattern": "rabinKarp should work with UTF symbols",
    "testFilePaths": [
      "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js"
    ],
    "number": 276,
    "pdgs": [
      {
        "pdgTitle": "rabinKarp(a￿, ￿)",
        "uniqueTitle": "rabinKarp(a￿, ￿)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 43,
              "index": 1913
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 2138
            }
          }
        }
      },
      {
        "pdgTitle": "rabinKarp(\u0000耀\u0000, 耀\u0000)",
        "uniqueTitle": "rabinKarp(\u0000耀\u0000, 耀\u0000)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/string/rabin-karp/rabinKarp.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 46,
              "index": 326
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1450
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/rabin-karp/__test__/rabinKarp.test.js",
          "loc": {
            "start": {
              "line": 40,
              "column": 43,
              "index": 1913
            },
            "end": {
              "line": 45,
              "column": 3,
              "index": 2138
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "string",
    "chapter": "regular-expression-matching",
    "algo": "regular-expression-matching_regularExpressionMatching",
    "name": "regularExpressionMatching should match regular expressions in a string@regularExpressionMatching.test.js",
    "label": "regularExpressionMatching should match regular expressions in a string",
    "testNamePattern": "regularExpressionMatching should match regular expressions in a string",
    "testFilePaths": [
      "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js"
    ],
    "number": 277,
    "pdgs": [
      {
        "pdgTitle": "regularExpressionMatching(, )",
        "uniqueTitle": "regularExpressionMatching(, )#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(a, a)",
        "uniqueTitle": "regularExpressionMatching(a, a)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aa, aa)",
        "uniqueTitle": "regularExpressionMatching(aa, aa)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aab, aab)",
        "uniqueTitle": "regularExpressionMatching(aab, aab)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aab, aa.)",
        "uniqueTitle": "regularExpressionMatching(aab, aa.)#2",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aab, .a.)",
        "uniqueTitle": "regularExpressionMatching(aab, .a.)#2",
        "contextId": 24,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aab, ...)",
        "uniqueTitle": "regularExpressionMatching(aab, ...)#2",
        "contextId": 29,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(a, a*)",
        "uniqueTitle": "regularExpressionMatching(a, a*)#2",
        "contextId": 34,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aaa, a*)",
        "uniqueTitle": "regularExpressionMatching(aaa, a*)#2",
        "contextId": 37,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aaab, a*b)",
        "uniqueTitle": "regularExpressionMatching(aaab, a*b)#2",
        "contextId": 42,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aaabb, a*b*)",
        "uniqueTitle": "regularExpressionMatching(aaabb, a*b*)#2",
        "contextId": 48,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aaabb, a*b*c*)",
        "uniqueTitle": "regularExpressionMatching(aaabb, a*b*c*)#2",
        "contextId": 55,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(, a*)",
        "uniqueTitle": "regularExpressionMatching(, a*)#2",
        "contextId": 62,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(xaabyc, xa*b.c)",
        "uniqueTitle": "regularExpressionMatching(xaabyc, xa*b.c)#2",
        "contextId": 64,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aab, c*a*b*)",
        "uniqueTitle": "regularExpressionMatching(aab, c*a*b*)#2",
        "contextId": 72,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(mississippi, mis*is*.p*.)",
        "uniqueTitle": "regularExpressionMatching(mississippi, mis*is*.p*.)#2",
        "contextId": 77,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(ab, .*)",
        "uniqueTitle": "regularExpressionMatching(ab, .*)#2",
        "contextId": 90,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(, a)",
        "uniqueTitle": "regularExpressionMatching(, a)#2",
        "contextId": 94,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(a, )",
        "uniqueTitle": "regularExpressionMatching(a, )#2",
        "contextId": 96,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aab, aa)",
        "uniqueTitle": "regularExpressionMatching(aab, aa)#2",
        "contextId": 99,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aab, baa)",
        "uniqueTitle": "regularExpressionMatching(aab, baa)#2",
        "contextId": 104,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aabc, ...)",
        "uniqueTitle": "regularExpressionMatching(aabc, ...)#2",
        "contextId": 109,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(aaabbdd, a*b*c*)",
        "uniqueTitle": "regularExpressionMatching(aaabbdd, a*b*c*)#2",
        "contextId": 115,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(mississippi, mis*is*p*.)",
        "uniqueTitle": "regularExpressionMatching(mississippi, mis*is*p*.)#2",
        "contextId": 124,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(ab, a*)",
        "uniqueTitle": "regularExpressionMatching(ab, a*)#2",
        "contextId": 137,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(abba, a*b*.c)",
        "uniqueTitle": "regularExpressionMatching(abba, a*b*.c)#2",
        "contextId": 141,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      },
      {
        "pdgTitle": "regularExpressionMatching(abba, .*c)",
        "uniqueTitle": "regularExpressionMatching(abba, .*c)#2",
        "contextId": 147,
        "algoLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/regularExpressionMatching.js",
          "loc": {
            "start": {
              "line": 11,
              "column": 67,
              "index": 250
            },
            "end": {
              "line": 136,
              "column": 1,
              "index": 4766
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/regular-expression-matching/__test__/regularExpressionMatching.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 59,
              "index": 179
            },
            "end": {
              "line": 33,
              "column": 3,
              "index": 1979
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "string",
    "chapter": "z-algorithm",
    "algo": "z-algorithm_zAlgorithm",
    "name": "zAlgorithm should find word positions in given text@zAlgorithm.test.js",
    "label": "zAlgorithm should find word positions in given text",
    "testNamePattern": "zAlgorithm should find word positions in given text",
    "testFilePaths": [
      "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js"
    ],
    "number": 278,
    "pdgs": [
      {
        "pdgTitle": "zAlgorithm(abcbcglx, abca)",
        "uniqueTitle": "zAlgorithm(abcbcglx, abca)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
          "loc": {
            "start": {
              "line": 106,
              "column": 47,
              "index": 4034
            },
            "end": {
              "line": 132,
              "column": 1,
              "index": 5183
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 55,
              "index": 130
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 839
            }
          }
        }
      },
      {
        "pdgTitle": "zAlgorithm(abca, abca)",
        "uniqueTitle": "zAlgorithm(abca, abca)#2",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
          "loc": {
            "start": {
              "line": 106,
              "column": 47,
              "index": 4034
            },
            "end": {
              "line": 132,
              "column": 1,
              "index": 5183
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 55,
              "index": 130
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 839
            }
          }
        }
      },
      {
        "pdgTitle": "zAlgorithm(abca, abcadfd)",
        "uniqueTitle": "zAlgorithm(abca, abcadfd)#2",
        "contextId": 31,
        "algoLoc": {
          "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
          "loc": {
            "start": {
              "line": 106,
              "column": 47,
              "index": 4034
            },
            "end": {
              "line": 132,
              "column": 1,
              "index": 5183
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 55,
              "index": 130
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 839
            }
          }
        }
      },
      {
        "pdgTitle": "zAlgorithm(abcbcglabcx, abc)",
        "uniqueTitle": "zAlgorithm(abcbcglabcx, abc)#2",
        "contextId": 45,
        "algoLoc": {
          "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
          "loc": {
            "start": {
              "line": 106,
              "column": 47,
              "index": 4034
            },
            "end": {
              "line": 132,
              "column": 1,
              "index": 5183
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 55,
              "index": 130
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 839
            }
          }
        }
      },
      {
        "pdgTitle": "zAlgorithm(abcbcglx, bcgl)",
        "uniqueTitle": "zAlgorithm(abcbcglx, bcgl)#2",
        "contextId": 62,
        "algoLoc": {
          "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
          "loc": {
            "start": {
              "line": 106,
              "column": 47,
              "index": 4034
            },
            "end": {
              "line": 132,
              "column": 1,
              "index": 5183
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 55,
              "index": 130
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 839
            }
          }
        }
      },
      {
        "pdgTitle": "zAlgorithm(abcbcglx, cglx)",
        "uniqueTitle": "zAlgorithm(abcbcglx, cglx)#2",
        "contextId": 77,
        "algoLoc": {
          "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
          "loc": {
            "start": {
              "line": 106,
              "column": 47,
              "index": 4034
            },
            "end": {
              "line": 132,
              "column": 1,
              "index": 5183
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 55,
              "index": 130
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 839
            }
          }
        }
      },
      {
        "pdgTitle": "zAlgorithm(abcxabcdabxabcdabcdabcy, abcdabcy)",
        "uniqueTitle": "zAlgorithm(abcxabcdabxabcdabcdabcy, abcdabcy)#2",
        "contextId": 92,
        "algoLoc": {
          "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
          "loc": {
            "start": {
              "line": 106,
              "column": 47,
              "index": 4034
            },
            "end": {
              "line": 132,
              "column": 1,
              "index": 5183
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 55,
              "index": 130
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 839
            }
          }
        }
      },
      {
        "pdgTitle": "zAlgorithm(abcxabcdabxabcdabcdabcy, abcdabca)",
        "uniqueTitle": "zAlgorithm(abcxabcdabxabcdabcdabcy, abcdabca)#2",
        "contextId": 126,
        "algoLoc": {
          "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
          "loc": {
            "start": {
              "line": 106,
              "column": 47,
              "index": 4034
            },
            "end": {
              "line": 132,
              "column": 1,
              "index": 5183
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 55,
              "index": 130
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 839
            }
          }
        }
      },
      {
        "pdgTitle": "zAlgorithm(abcxabcdabxaabcdabcabcdabcdabcy, abcdabca)",
        "uniqueTitle": "zAlgorithm(abcxabcdabxaabcdabcabcdabcdabcy, abcdabca)#2",
        "contextId": 160,
        "algoLoc": {
          "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
          "loc": {
            "start": {
              "line": 106,
              "column": 47,
              "index": 4034
            },
            "end": {
              "line": 132,
              "column": 1,
              "index": 5183
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 55,
              "index": 130
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 839
            }
          }
        }
      },
      {
        "pdgTitle": "zAlgorithm(abcxabcdabxaabaabaaaabcdabcdabcy, aabaabaaa)",
        "uniqueTitle": "zAlgorithm(abcxabcdabxaabaabaaaabcdabcdabcy, aabaabaaa)#2",
        "contextId": 202,
        "algoLoc": {
          "filePath": "src/algorithms/string/z-algorithm/zAlgorithm.js",
          "loc": {
            "start": {
              "line": 106,
              "column": 47,
              "index": 4034
            },
            "end": {
              "line": 132,
              "column": 1,
              "index": 5183
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/string/z-algorithm/__test__/zAlgorithm.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 55,
              "index": 130
            },
            "end": {
              "line": 19,
              "column": 3,
              "index": 839
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "tree",
    "chapter": "breadth-first-search",
    "algo": "breadth-first-search_breadthFirstSearch",
    "name": "breadthFirstSearch should perform BFS operation on tree@breadthFirstSearch.test.js",
    "label": "breadthFirstSearch should perform BFS operation on tree",
    "testNamePattern": "breadthFirstSearch should perform BFS operation on tree",
    "testFilePaths": [
      "src/algorithms/tree/breadth-first-search/__test__/breadthFirstSearch.test.js"
    ],
    "number": 279,
    "pdgs": [
      {
        "pdgTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator})",
        "uniqueTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator})#3",
        "contextId": 718,
        "algoLoc": {
          "filePath": "src/algorithms/tree/breadth-first-search/breadthFirstSearch.js",
          "loc": {
            "start": {
              "line": 35,
              "column": 72,
              "index": 1207
            },
            "end": {
              "line": 67,
              "column": 1,
              "index": 1984
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/tree/breadth-first-search/__test__/breadthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 229
            },
            "end": {
              "line": 53,
              "column": 3,
              "index": 2232
            }
          }
        }
      },
      {
        "pdgTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator}, {enterNode,leaveNode})",
        "uniqueTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator}, {enterNode,leaveNode})#2",
        "contextId": 786,
        "algoLoc": {
          "filePath": "src/algorithms/tree/breadth-first-search/breadthFirstSearch.js",
          "loc": {
            "start": {
              "line": 35,
              "column": 72,
              "index": 1207
            },
            "end": {
              "line": 67,
              "column": 1,
              "index": 1984
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/tree/breadth-first-search/__test__/breadthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 229
            },
            "end": {
              "line": 53,
              "column": 3,
              "index": 2232
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "tree",
    "chapter": "breadth-first-search",
    "algo": "breadth-first-search_breadthFirstSearch",
    "name": "breadthFirstSearch allow users to redefine node visiting logic@breadthFirstSearch.test.js",
    "label": "breadthFirstSearch allow users to redefine node visiting logic",
    "testNamePattern": "breadthFirstSearch allow users to redefine node visiting logic",
    "testFilePaths": [
      "src/algorithms/tree/breadth-first-search/__test__/breadthFirstSearch.test.js"
    ],
    "number": 280,
    "pdgs": [
      {
        "pdgTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator})",
        "uniqueTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator})#4",
        "contextId": 718,
        "algoLoc": {
          "filePath": "src/algorithms/tree/breadth-first-search/breadthFirstSearch.js",
          "loc": {
            "start": {
              "line": 35,
              "column": 72,
              "index": 1207
            },
            "end": {
              "line": 67,
              "column": 1,
              "index": 1984
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/tree/breadth-first-search/__test__/breadthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 55,
              "column": 58,
              "index": 2296
            },
            "end": {
              "line": 101,
              "column": 3,
              "index": 4033
            }
          }
        }
      },
      {
        "pdgTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator}, {allowTraversal,enterNode,leaveNode})",
        "uniqueTitle": "breadthFirstSearch({left,right,parent,value,meta,nodeComparator}, {allowTraversal,enterNode,leaveNode})#2",
        "contextId": 786,
        "algoLoc": {
          "filePath": "src/algorithms/tree/breadth-first-search/breadthFirstSearch.js",
          "loc": {
            "start": {
              "line": 35,
              "column": 72,
              "index": 1207
            },
            "end": {
              "line": 67,
              "column": 1,
              "index": 1984
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/tree/breadth-first-search/__test__/breadthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 55,
              "column": 58,
              "index": 2296
            },
            "end": {
              "line": 101,
              "column": 3,
              "index": 4033
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "tree",
    "chapter": "depth-first-search",
    "algo": "depth-first-search_depthFirstSearch",
    "name": "depthFirstSearch should perform DFS operation on tree@depthFirstSearch.test.js",
    "label": "depthFirstSearch should perform DFS operation on tree",
    "testNamePattern": "depthFirstSearch should perform DFS operation on tree",
    "testFilePaths": [
      "src/algorithms/tree/depth-first-search/__test__/depthFirstSearch.test.js"
    ],
    "number": 281,
    "pdgs": [
      {
        "pdgTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator})",
        "uniqueTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator})#3",
        "contextId": 717,
        "algoLoc": {
          "filePath": "src/algorithms/tree/depth-first-search/depthFirstSearch.js",
          "loc": {
            "start": {
              "line": 73,
              "column": 62,
              "index": 3054
            },
            "end": {
              "line": 79,
              "column": 1,
              "index": 3357
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/tree/depth-first-search/__test__/depthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 223
            },
            "end": {
              "line": 53,
              "column": 3,
              "index": 2222
            }
          }
        }
      },
      {
        "pdgTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator}, {enterNode,leaveNode})",
        "uniqueTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator}, {enterNode,leaveNode})#2",
        "contextId": 746,
        "algoLoc": {
          "filePath": "src/algorithms/tree/depth-first-search/depthFirstSearch.js",
          "loc": {
            "start": {
              "line": 73,
              "column": 62,
              "index": 3054
            },
            "end": {
              "line": 79,
              "column": 1,
              "index": 3357
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/tree/depth-first-search/__test__/depthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 51,
              "index": 223
            },
            "end": {
              "line": 53,
              "column": 3,
              "index": 2222
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "tree",
    "chapter": "depth-first-search",
    "algo": "depth-first-search_depthFirstSearch",
    "name": "depthFirstSearch allow users to redefine node visiting logic@depthFirstSearch.test.js",
    "label": "depthFirstSearch allow users to redefine node visiting logic",
    "testNamePattern": "depthFirstSearch allow users to redefine node visiting logic",
    "testFilePaths": [
      "src/algorithms/tree/depth-first-search/__test__/depthFirstSearch.test.js"
    ],
    "number": 282,
    "pdgs": [
      {
        "pdgTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator})",
        "uniqueTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator})#4",
        "contextId": 717,
        "algoLoc": {
          "filePath": "src/algorithms/tree/depth-first-search/depthFirstSearch.js",
          "loc": {
            "start": {
              "line": 73,
              "column": 62,
              "index": 3054
            },
            "end": {
              "line": 79,
              "column": 1,
              "index": 3357
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/tree/depth-first-search/__test__/depthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 55,
              "column": 58,
              "index": 2286
            },
            "end": {
              "line": 101,
              "column": 3,
              "index": 4019
            }
          }
        }
      },
      {
        "pdgTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator}, {allowTraversal,enterNode,leaveNode})",
        "uniqueTitle": "depthFirstSearch({left,right,parent,value,meta,nodeComparator}, {allowTraversal,enterNode,leaveNode})#2",
        "contextId": 746,
        "algoLoc": {
          "filePath": "src/algorithms/tree/depth-first-search/depthFirstSearch.js",
          "loc": {
            "start": {
              "line": 73,
              "column": 62,
              "index": 3054
            },
            "end": {
              "line": 79,
              "column": 1,
              "index": 3357
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/tree/depth-first-search/__test__/depthFirstSearch.test.js",
          "loc": {
            "start": {
              "line": 55,
              "column": 58,
              "index": 2286
            },
            "end": {
              "line": 101,
              "column": 3,
              "index": 4019
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "best-time-to-buy-sell-stocks",
    "algo": "best-time-to-buy-sell-stocks_accumulatorBestTimeToBuySellStocks",
    "name": "accumulatorBestTimeToBuySellStocks should find the best time to buy and sell stocks@accumulatorBestTimeToBuySellStocks.test.js",
    "label": "accumulatorBestTimeToBuySellStocks should find the best time to buy and sell stocks",
    "testNamePattern": "accumulatorBestTimeToBuySellStocks should find the best time to buy and sell stocks",
    "testFilePaths": [
      "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js"
    ],
    "number": 283,
    "pdgs": [
      {
        "pdgTitle": "accumulatorBestTimeToBuySellStocks([1,5])",
        "uniqueTitle": "accumulatorBestTimeToBuySellStocks([1,5])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 61,
              "index": 378
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 773
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 210
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1828
            }
          }
        }
      },
      {
        "pdgTitle": "accumulatorBestTimeToBuySellStocks([1], ƒ mockConstructor)",
        "uniqueTitle": "accumulatorBestTimeToBuySellStocks([1], ƒ mockConstructor)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 61,
              "index": 378
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 773
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 210
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1828
            }
          }
        }
      },
      {
        "pdgTitle": "accumulatorBestTimeToBuySellStocks([1,5], ƒ mockConstructor)",
        "uniqueTitle": "accumulatorBestTimeToBuySellStocks([1,5], ƒ mockConstructor)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 61,
              "index": 378
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 773
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 210
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1828
            }
          }
        }
      },
      {
        "pdgTitle": "accumulatorBestTimeToBuySellStocks([5,1], ƒ mockConstructor)",
        "uniqueTitle": "accumulatorBestTimeToBuySellStocks([5,1], ƒ mockConstructor)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 61,
              "index": 378
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 773
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 210
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1828
            }
          }
        }
      },
      {
        "pdgTitle": "accumulatorBestTimeToBuySellStocks([1,5,10], ƒ mockConstructor)",
        "uniqueTitle": "accumulatorBestTimeToBuySellStocks([1,5,10], ƒ mockConstructor)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 61,
              "index": 378
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 773
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 210
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1828
            }
          }
        }
      },
      {
        "pdgTitle": "accumulatorBestTimeToBuySellStocks([10,1,5,20,15,21], ƒ mockConstructor)",
        "uniqueTitle": "accumulatorBestTimeToBuySellStocks([10,1,5,20,15,21], ƒ mockConstructor)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 61,
              "index": 378
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 773
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 210
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1828
            }
          }
        }
      },
      {
        "pdgTitle": "accumulatorBestTimeToBuySellStocks([7,1,5,3,6,4], ƒ mockConstructor)",
        "uniqueTitle": "accumulatorBestTimeToBuySellStocks([7,1,5,3,6,4], ƒ mockConstructor)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 61,
              "index": 378
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 773
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 210
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1828
            }
          }
        }
      },
      {
        "pdgTitle": "accumulatorBestTimeToBuySellStocks([1,2,3,4,5], ƒ mockConstructor)",
        "uniqueTitle": "accumulatorBestTimeToBuySellStocks([1,2,3,4,5], ƒ mockConstructor)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 61,
              "index": 378
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 773
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 210
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1828
            }
          }
        }
      },
      {
        "pdgTitle": "accumulatorBestTimeToBuySellStocks([7,6,4,3,1], ƒ mockConstructor)",
        "uniqueTitle": "accumulatorBestTimeToBuySellStocks([7,6,4,3,1], ƒ mockConstructor)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 61,
              "index": 378
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 773
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 210
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1828
            }
          }
        }
      },
      {
        "pdgTitle": "accumulatorBestTimeToBuySellStocks([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], ƒ mockConstructor)",
        "uniqueTitle": "accumulatorBestTimeToBuySellStocks([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], ƒ mockConstructor)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/accumulatorBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 61,
              "index": 378
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 773
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/accumulatorBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 210
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1828
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "best-time-to-buy-sell-stocks",
    "algo": "best-time-to-buy-sell-stocks_peakvalleyBestTimeToBuySellStocks",
    "name": "peakvalleyBestTimeToBuySellStocks should find the best time to buy and sell stocks@peakvalleyBestTimeToBuySellStocks.test.js",
    "label": "peakvalleyBestTimeToBuySellStocks should find the best time to buy and sell stocks",
    "testNamePattern": "peakvalleyBestTimeToBuySellStocks should find the best time to buy and sell stocks",
    "testFilePaths": [
      "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js"
    ],
    "number": 284,
    "pdgs": [
      {
        "pdgTitle": "peakvalleyBestTimeToBuySellStocks([1,5])",
        "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([1,5])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 377
            },
            "end": {
              "line": 37,
              "column": 1,
              "index": 1103
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 207
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1815
            }
          }
        }
      },
      {
        "pdgTitle": "peakvalleyBestTimeToBuySellStocks([1], ƒ mockConstructor)",
        "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([1], ƒ mockConstructor)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 377
            },
            "end": {
              "line": 37,
              "column": 1,
              "index": 1103
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 207
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1815
            }
          }
        }
      },
      {
        "pdgTitle": "peakvalleyBestTimeToBuySellStocks([1,5], ƒ mockConstructor)",
        "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([1,5], ƒ mockConstructor)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 377
            },
            "end": {
              "line": 37,
              "column": 1,
              "index": 1103
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 207
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1815
            }
          }
        }
      },
      {
        "pdgTitle": "peakvalleyBestTimeToBuySellStocks([5,1], ƒ mockConstructor)",
        "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([5,1], ƒ mockConstructor)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 377
            },
            "end": {
              "line": 37,
              "column": 1,
              "index": 1103
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 207
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1815
            }
          }
        }
      },
      {
        "pdgTitle": "peakvalleyBestTimeToBuySellStocks([1,5,10], ƒ mockConstructor)",
        "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([1,5,10], ƒ mockConstructor)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 377
            },
            "end": {
              "line": 37,
              "column": 1,
              "index": 1103
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 207
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1815
            }
          }
        }
      },
      {
        "pdgTitle": "peakvalleyBestTimeToBuySellStocks([10,1,5,20,15,21], ƒ mockConstructor)",
        "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([10,1,5,20,15,21], ƒ mockConstructor)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 377
            },
            "end": {
              "line": 37,
              "column": 1,
              "index": 1103
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 207
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1815
            }
          }
        }
      },
      {
        "pdgTitle": "peakvalleyBestTimeToBuySellStocks([7,1,5,3,6,4], ƒ mockConstructor)",
        "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([7,1,5,3,6,4], ƒ mockConstructor)#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 377
            },
            "end": {
              "line": 37,
              "column": 1,
              "index": 1103
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 207
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1815
            }
          }
        }
      },
      {
        "pdgTitle": "peakvalleyBestTimeToBuySellStocks([1,2,3,4,5], ƒ mockConstructor)",
        "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([1,2,3,4,5], ƒ mockConstructor)#2",
        "contextId": 29,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 377
            },
            "end": {
              "line": 37,
              "column": 1,
              "index": 1103
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 207
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1815
            }
          }
        }
      },
      {
        "pdgTitle": "peakvalleyBestTimeToBuySellStocks([7,6,4,3,1], ƒ mockConstructor)",
        "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([7,6,4,3,1], ƒ mockConstructor)#2",
        "contextId": 34,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 377
            },
            "end": {
              "line": 37,
              "column": 1,
              "index": 1103
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 207
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1815
            }
          }
        }
      },
      {
        "pdgTitle": "peakvalleyBestTimeToBuySellStocks([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], ƒ mockConstructor)",
        "uniqueTitle": "peakvalleyBestTimeToBuySellStocks([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], ƒ mockConstructor)#2",
        "contextId": 39,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/peakvalleyBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 60,
              "index": 377
            },
            "end": {
              "line": 37,
              "column": 1,
              "index": 1103
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/peakvalleyBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 207
            },
            "end": {
              "line": 57,
              "column": 3,
              "index": 1815
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "best-time-to-buy-sell-stocks",
    "algo": "best-time-to-buy-sell-stocks_dqBestTimeToBuySellStocks",
    "name": "dqBestTimeToBuySellStocks should find the best time to buy and sell stocks@dqBestTimeToBuySellStocks.test.js",
    "label": "dqBestTimeToBuySellStocks should find the best time to buy and sell stocks",
    "testNamePattern": "dqBestTimeToBuySellStocks should find the best time to buy and sell stocks",
    "testFilePaths": [
      "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dqBestTimeToBuySellStocks.test.js"
    ],
    "number": 285,
    "pdgs": {
      "failedReason": "test execution failed: code=134"
    }
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "best-time-to-buy-sell-stocks",
    "algo": "best-time-to-buy-sell-stocks_dpBestTimeToBuySellStocks",
    "name": "dpBestTimeToBuySellStocks should find the best time to buy and sell stocks@dpBestTimeToBuySellStocks.test.js",
    "label": "dpBestTimeToBuySellStocks should find the best time to buy and sell stocks",
    "testNamePattern": "dpBestTimeToBuySellStocks should find the best time to buy and sell stocks",
    "testFilePaths": [
      "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js"
    ],
    "number": 286,
    "pdgs": [
      {
        "pdgTitle": "dpBestTimeToBuySellStocks([1,5])",
        "uniqueTitle": "dpBestTimeToBuySellStocks([1,5])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 52,
              "index": 377
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 827
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 183
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1669
            }
          }
        }
      },
      {
        "pdgTitle": "dpBestTimeToBuySellStocks([1], ƒ mockConstructor)",
        "uniqueTitle": "dpBestTimeToBuySellStocks([1], ƒ mockConstructor)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 52,
              "index": 377
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 827
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 183
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1669
            }
          }
        }
      },
      {
        "pdgTitle": "dpBestTimeToBuySellStocks([1,5], ƒ mockConstructor)",
        "uniqueTitle": "dpBestTimeToBuySellStocks([1,5], ƒ mockConstructor)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 52,
              "index": 377
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 827
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 183
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1669
            }
          }
        }
      },
      {
        "pdgTitle": "dpBestTimeToBuySellStocks([5,1], ƒ mockConstructor)",
        "uniqueTitle": "dpBestTimeToBuySellStocks([5,1], ƒ mockConstructor)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 52,
              "index": 377
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 827
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 183
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1669
            }
          }
        }
      },
      {
        "pdgTitle": "dpBestTimeToBuySellStocks([1,5,10], ƒ mockConstructor)",
        "uniqueTitle": "dpBestTimeToBuySellStocks([1,5,10], ƒ mockConstructor)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 52,
              "index": 377
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 827
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 183
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1669
            }
          }
        }
      },
      {
        "pdgTitle": "dpBestTimeToBuySellStocks([10,1,5,20,15,21], ƒ mockConstructor)",
        "uniqueTitle": "dpBestTimeToBuySellStocks([10,1,5,20,15,21], ƒ mockConstructor)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 52,
              "index": 377
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 827
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 183
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1669
            }
          }
        }
      },
      {
        "pdgTitle": "dpBestTimeToBuySellStocks([7,1,5,3,6,4], ƒ mockConstructor)",
        "uniqueTitle": "dpBestTimeToBuySellStocks([7,1,5,3,6,4], ƒ mockConstructor)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 52,
              "index": 377
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 827
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 183
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1669
            }
          }
        }
      },
      {
        "pdgTitle": "dpBestTimeToBuySellStocks([1,2,3,4,5], ƒ mockConstructor)",
        "uniqueTitle": "dpBestTimeToBuySellStocks([1,2,3,4,5], ƒ mockConstructor)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 52,
              "index": 377
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 827
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 183
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1669
            }
          }
        }
      },
      {
        "pdgTitle": "dpBestTimeToBuySellStocks([7,6,4,3,1], ƒ mockConstructor)",
        "uniqueTitle": "dpBestTimeToBuySellStocks([7,6,4,3,1], ƒ mockConstructor)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 52,
              "index": 377
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 827
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 183
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1669
            }
          }
        }
      },
      {
        "pdgTitle": "dpBestTimeToBuySellStocks([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], ƒ mockConstructor)",
        "uniqueTitle": "dpBestTimeToBuySellStocks([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20], ƒ mockConstructor)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/dpBestTimeToBuySellStocks.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 52,
              "index": 377
            },
            "end": {
              "line": 27,
              "column": 1,
              "index": 827
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/best-time-to-buy-sell-stocks/__tests__/dpBestTimeToBuySellStocks.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 63,
              "index": 183
            },
            "end": {
              "line": 51,
              "column": 3,
              "index": 1669
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "hanoi-tower",
    "algo": "hanoi-tower_hanoiTower",
    "name": "hanoiTower should solve tower of hanoi puzzle with 2 discs@hanoiTower.test.js",
    "label": "hanoiTower should solve tower of hanoi puzzle with 2 discs",
    "testNamePattern": "hanoiTower should solve tower of hanoi puzzle with 2 discs",
    "testFilePaths": [
      "src/algorithms/uncategorized/hanoi-tower/__test__/hanoiTower.test.js"
    ],
    "number": 287,
    "pdgs": [
      {
        "pdgTitle": "hanoiTower({numberOfDiscs,moveCallback,fromPole,withPole,toPole})",
        "uniqueTitle": "hanoiTower({numberOfDiscs,moveCallback,fromPole,withPole,toPole})#4",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/hanoi-tower/hanoiTower.js",
          "loc": {
            "start": {
              "line": 60,
              "column": 42,
              "index": 1693
            },
            "end": {
              "line": 87,
              "column": 1,
              "index": 2616
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/hanoi-tower/__test__/hanoiTower.test.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 62,
              "index": 199
            },
            "end": {
              "line": 37,
              "column": 3,
              "index": 1172
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "hanoi-tower",
    "algo": "hanoi-tower_hanoiTower",
    "name": "hanoiTower should solve tower of hanoi puzzle with 3 discs@hanoiTower.test.js",
    "label": "hanoiTower should solve tower of hanoi puzzle with 3 discs",
    "testNamePattern": "hanoiTower should solve tower of hanoi puzzle with 3 discs",
    "testFilePaths": [
      "src/algorithms/uncategorized/hanoi-tower/__test__/hanoiTower.test.js"
    ],
    "number": 288,
    "pdgs": [
      {
        "pdgTitle": "hanoiTower({numberOfDiscs,moveCallback,fromPole,withPole,toPole})",
        "uniqueTitle": "hanoiTower({numberOfDiscs,moveCallback,fromPole,withPole,toPole})#5",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/hanoi-tower/hanoiTower.js",
          "loc": {
            "start": {
              "line": 60,
              "column": 42,
              "index": 1693
            },
            "end": {
              "line": 87,
              "column": 1,
              "index": 2616
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/hanoi-tower/__test__/hanoiTower.test.js",
          "loc": {
            "start": {
              "line": 39,
              "column": 62,
              "index": 1240
            },
            "end": {
              "line": 56,
              "column": 3,
              "index": 1614
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "hanoi-tower",
    "algo": "hanoi-tower_hanoiTower",
    "name": "hanoiTower should solve tower of hanoi puzzle with 6 discs@hanoiTower.test.js",
    "label": "hanoiTower should solve tower of hanoi puzzle with 6 discs",
    "testNamePattern": "hanoiTower should solve tower of hanoi puzzle with 6 discs",
    "testFilePaths": [
      "src/algorithms/uncategorized/hanoi-tower/__test__/hanoiTower.test.js"
    ],
    "number": 289,
    "pdgs": [
      {
        "pdgTitle": "hanoiTower({numberOfDiscs,moveCallback,fromPole,withPole,toPole})",
        "uniqueTitle": "hanoiTower({numberOfDiscs,moveCallback,fromPole,withPole,toPole})#6",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/hanoi-tower/hanoiTower.js",
          "loc": {
            "start": {
              "line": 60,
              "column": 42,
              "index": 1693
            },
            "end": {
              "line": 87,
              "column": 1,
              "index": 2616
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/hanoi-tower/__test__/hanoiTower.test.js",
          "loc": {
            "start": {
              "line": 58,
              "column": 62,
              "index": 1682
            },
            "end": {
              "line": 75,
              "column": 3,
              "index": 2056
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "jump-game",
    "algo": "jump-game_backtrackingJumpGame",
    "name": "backtrackingJumpGame should solve Jump Game problem in backtracking manner@backtrackingJumpGame.test.js",
    "label": "backtrackingJumpGame should solve Jump Game problem in backtracking manner",
    "testNamePattern": "backtrackingJumpGame should solve Jump Game problem in backtracking manner",
    "testFilePaths": [
      "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js"
    ],
    "number": 290,
    "pdgs": [
      {
        "pdgTitle": "backtrackingJumpGame([1,0])",
        "uniqueTitle": "backtrackingJumpGame([1,0])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 54,
              "index": 623
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1917
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 173
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 806
            }
          }
        }
      },
      {
        "pdgTitle": "backtrackingJumpGame([100,0])",
        "uniqueTitle": "backtrackingJumpGame([100,0])#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 54,
              "index": 623
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1917
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 173
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 806
            }
          }
        }
      },
      {
        "pdgTitle": "backtrackingJumpGame([2,3,1,1,4])",
        "uniqueTitle": "backtrackingJumpGame([2,3,1,1,4])#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 54,
              "index": 623
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1917
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 173
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 806
            }
          }
        }
      },
      {
        "pdgTitle": "backtrackingJumpGame([1,1,1,1,1])",
        "uniqueTitle": "backtrackingJumpGame([1,1,1,1,1])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 54,
              "index": 623
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1917
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 173
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 806
            }
          }
        }
      },
      {
        "pdgTitle": "backtrackingJumpGame([1,1,1,10,1])",
        "uniqueTitle": "backtrackingJumpGame([1,1,1,10,1])#2",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 54,
              "index": 623
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1917
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 173
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 806
            }
          }
        }
      },
      {
        "pdgTitle": "backtrackingJumpGame([1,5,2,1,0,2,0])",
        "uniqueTitle": "backtrackingJumpGame([1,5,2,1,0,2,0])#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 54,
              "index": 623
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1917
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 173
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 806
            }
          }
        }
      },
      {
        "pdgTitle": "backtrackingJumpGame([1,0,1])",
        "uniqueTitle": "backtrackingJumpGame([1,0,1])#2",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 54,
              "index": 623
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1917
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 173
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 806
            }
          }
        }
      },
      {
        "pdgTitle": "backtrackingJumpGame([3,2,1,0,4])",
        "uniqueTitle": "backtrackingJumpGame([3,2,1,0,4])#2",
        "contextId": 28,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 54,
              "index": 623
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1917
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 173
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 806
            }
          }
        }
      },
      {
        "pdgTitle": "backtrackingJumpGame([0,0,0,0,0])",
        "uniqueTitle": "backtrackingJumpGame([0,0,0,0,0])#2",
        "contextId": 36,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 54,
              "index": 623
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1917
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 173
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 806
            }
          }
        }
      },
      {
        "pdgTitle": "backtrackingJumpGame([5,4,3,2,1,0,0])",
        "uniqueTitle": "backtrackingJumpGame([5,4,3,2,1,0,0])#2",
        "contextId": 37,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/backtrackingJumpGame.js",
          "loc": {
            "start": {
              "line": 15,
              "column": 54,
              "index": 623
            },
            "end": {
              "line": 56,
              "column": 1,
              "index": 1917
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/backtrackingJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 68,
              "index": 173
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 806
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "jump-game",
    "algo": "jump-game_dpBottomUpJumpGame",
    "name": "dpBottomUpJumpGame should solve Jump Game problem in bottom-up dynamic programming manner@dpBottomUpJumpGame.test.js",
    "label": "dpBottomUpJumpGame should solve Jump Game problem in bottom-up dynamic programming manner",
    "testNamePattern": "dpBottomUpJumpGame should solve Jump Game problem in bottom-up dynamic programming manner",
    "testFilePaths": [
      "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js"
    ],
    "number": 291,
    "pdgs": [
      {
        "pdgTitle": "dpBottomUpJumpGame([1,0])",
        "uniqueTitle": "dpBottomUpJumpGame([1,0])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 52,
              "index": 810
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1879
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 184
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 797
            }
          }
        }
      },
      {
        "pdgTitle": "dpBottomUpJumpGame([100,0])",
        "uniqueTitle": "dpBottomUpJumpGame([100,0])#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 52,
              "index": 810
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1879
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 184
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 797
            }
          }
        }
      },
      {
        "pdgTitle": "dpBottomUpJumpGame([2,3,1,1,4])",
        "uniqueTitle": "dpBottomUpJumpGame([2,3,1,1,4])#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 52,
              "index": 810
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1879
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 184
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 797
            }
          }
        }
      },
      {
        "pdgTitle": "dpBottomUpJumpGame([1,1,1,1,1])",
        "uniqueTitle": "dpBottomUpJumpGame([1,1,1,1,1])#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 52,
              "index": 810
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1879
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 184
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 797
            }
          }
        }
      },
      {
        "pdgTitle": "dpBottomUpJumpGame([1,1,1,10,1])",
        "uniqueTitle": "dpBottomUpJumpGame([1,1,1,10,1])#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 52,
              "index": 810
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1879
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 184
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 797
            }
          }
        }
      },
      {
        "pdgTitle": "dpBottomUpJumpGame([1,5,2,1,0,2,0])",
        "uniqueTitle": "dpBottomUpJumpGame([1,5,2,1,0,2,0])#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 52,
              "index": 810
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1879
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 184
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 797
            }
          }
        }
      },
      {
        "pdgTitle": "dpBottomUpJumpGame([1,0,1])",
        "uniqueTitle": "dpBottomUpJumpGame([1,0,1])#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 52,
              "index": 810
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1879
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 184
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 797
            }
          }
        }
      },
      {
        "pdgTitle": "dpBottomUpJumpGame([3,2,1,0,4])",
        "uniqueTitle": "dpBottomUpJumpGame([3,2,1,0,4])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 52,
              "index": 810
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1879
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 184
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 797
            }
          }
        }
      },
      {
        "pdgTitle": "dpBottomUpJumpGame([0,0,0,0,0])",
        "uniqueTitle": "dpBottomUpJumpGame([0,0,0,0,0])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 52,
              "index": 810
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1879
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 184
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 797
            }
          }
        }
      },
      {
        "pdgTitle": "dpBottomUpJumpGame([5,4,3,2,1,0,0])",
        "uniqueTitle": "dpBottomUpJumpGame([5,4,3,2,1,0,0])#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpBottomUpJumpGame.js",
          "loc": {
            "start": {
              "line": 19,
              "column": 52,
              "index": 810
            },
            "end": {
              "line": 46,
              "column": 1,
              "index": 1879
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpBottomUpJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 184
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 797
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "jump-game",
    "algo": "jump-game_dpTopDownJumpGame",
    "name": "dpTopDownJumpGame should solve Jump Game problem in top-down dynamic programming manner@dpTopDownJumpGame.test.js",
    "label": "dpTopDownJumpGame should solve Jump Game problem in top-down dynamic programming manner",
    "testNamePattern": "dpTopDownJumpGame should solve Jump Game problem in top-down dynamic programming manner",
    "testFilePaths": [
      "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js"
    ],
    "number": 292,
    "pdgs": [
      {
        "pdgTitle": "dpTopDownJumpGame([1,0])",
        "uniqueTitle": "dpTopDownJumpGame([1,0])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 51,
              "index": 883
            },
            "end": {
              "line": 81,
              "column": 1,
              "index": 3050
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 180
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 783
            }
          }
        }
      },
      {
        "pdgTitle": "dpTopDownJumpGame([100,0])",
        "uniqueTitle": "dpTopDownJumpGame([100,0])#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 51,
              "index": 883
            },
            "end": {
              "line": 81,
              "column": 1,
              "index": 3050
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 180
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 783
            }
          }
        }
      },
      {
        "pdgTitle": "dpTopDownJumpGame([2,3,1,1,4])",
        "uniqueTitle": "dpTopDownJumpGame([2,3,1,1,4])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 51,
              "index": 883
            },
            "end": {
              "line": 81,
              "column": 1,
              "index": 3050
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 180
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 783
            }
          }
        }
      },
      {
        "pdgTitle": "dpTopDownJumpGame([1,1,1,1,1])",
        "uniqueTitle": "dpTopDownJumpGame([1,1,1,1,1])#2",
        "contextId": 22,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 51,
              "index": 883
            },
            "end": {
              "line": 81,
              "column": 1,
              "index": 3050
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 180
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 783
            }
          }
        }
      },
      {
        "pdgTitle": "dpTopDownJumpGame([1,1,1,10,1])",
        "uniqueTitle": "dpTopDownJumpGame([1,1,1,10,1])#2",
        "contextId": 32,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 51,
              "index": 883
            },
            "end": {
              "line": 81,
              "column": 1,
              "index": 3050
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 180
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 783
            }
          }
        }
      },
      {
        "pdgTitle": "dpTopDownJumpGame([1,5,2,1,0,2,0])",
        "uniqueTitle": "dpTopDownJumpGame([1,5,2,1,0,2,0])#2",
        "contextId": 42,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 51,
              "index": 883
            },
            "end": {
              "line": 81,
              "column": 1,
              "index": 3050
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 180
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 783
            }
          }
        }
      },
      {
        "pdgTitle": "dpTopDownJumpGame([1,0,1])",
        "uniqueTitle": "dpTopDownJumpGame([1,0,1])#2",
        "contextId": 52,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 51,
              "index": 883
            },
            "end": {
              "line": 81,
              "column": 1,
              "index": 3050
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 180
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 783
            }
          }
        }
      },
      {
        "pdgTitle": "dpTopDownJumpGame([3,2,1,0,4])",
        "uniqueTitle": "dpTopDownJumpGame([3,2,1,0,4])#2",
        "contextId": 57,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 51,
              "index": 883
            },
            "end": {
              "line": 81,
              "column": 1,
              "index": 3050
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 180
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 783
            }
          }
        }
      },
      {
        "pdgTitle": "dpTopDownJumpGame([0,0,0,0,0])",
        "uniqueTitle": "dpTopDownJumpGame([0,0,0,0,0])#2",
        "contextId": 66,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 51,
              "index": 883
            },
            "end": {
              "line": 81,
              "column": 1,
              "index": 3050
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 180
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 783
            }
          }
        }
      },
      {
        "pdgTitle": "dpTopDownJumpGame([5,4,3,2,1,0,0])",
        "uniqueTitle": "dpTopDownJumpGame([5,4,3,2,1,0,0])#2",
        "contextId": 72,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/dpTopDownJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 51,
              "index": 883
            },
            "end": {
              "line": 81,
              "column": 1,
              "index": 3050
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/dpTopDownJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 84,
              "index": 180
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 783
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "jump-game",
    "algo": "jump-game_greedyJumpGame",
    "name": "greedyJumpGame should solve Jump Game problem in greedy manner@greedyJumpGame.test.js",
    "label": "greedyJumpGame should solve Jump Game problem in greedy manner",
    "testNamePattern": "greedyJumpGame should solve Jump Game problem in greedy manner",
    "testFilePaths": [
      "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js"
    ],
    "number": 293,
    "pdgs": [
      {
        "pdgTitle": "greedyJumpGame([1,0])",
        "uniqueTitle": "greedyJumpGame([1,0])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 48,
              "index": 885
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1832
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 149
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 722
            }
          }
        }
      },
      {
        "pdgTitle": "greedyJumpGame([100,0])",
        "uniqueTitle": "greedyJumpGame([100,0])#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 48,
              "index": 885
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1832
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 149
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 722
            }
          }
        }
      },
      {
        "pdgTitle": "greedyJumpGame([2,3,1,1,4])",
        "uniqueTitle": "greedyJumpGame([2,3,1,1,4])#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 48,
              "index": 885
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1832
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 149
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 722
            }
          }
        }
      },
      {
        "pdgTitle": "greedyJumpGame([1,1,1,1,1])",
        "uniqueTitle": "greedyJumpGame([1,1,1,1,1])#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 48,
              "index": 885
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1832
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 149
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 722
            }
          }
        }
      },
      {
        "pdgTitle": "greedyJumpGame([1,1,1,10,1])",
        "uniqueTitle": "greedyJumpGame([1,1,1,10,1])#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 48,
              "index": 885
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1832
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 149
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 722
            }
          }
        }
      },
      {
        "pdgTitle": "greedyJumpGame([1,5,2,1,0,2,0])",
        "uniqueTitle": "greedyJumpGame([1,5,2,1,0,2,0])#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 48,
              "index": 885
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1832
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 149
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 722
            }
          }
        }
      },
      {
        "pdgTitle": "greedyJumpGame([1,0,1])",
        "uniqueTitle": "greedyJumpGame([1,0,1])#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 48,
              "index": 885
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1832
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 149
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 722
            }
          }
        }
      },
      {
        "pdgTitle": "greedyJumpGame([3,2,1,0,4])",
        "uniqueTitle": "greedyJumpGame([3,2,1,0,4])#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 48,
              "index": 885
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1832
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 149
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 722
            }
          }
        }
      },
      {
        "pdgTitle": "greedyJumpGame([0,0,0,0,0])",
        "uniqueTitle": "greedyJumpGame([0,0,0,0,0])#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 48,
              "index": 885
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1832
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 149
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 722
            }
          }
        }
      },
      {
        "pdgTitle": "greedyJumpGame([5,4,3,2,1,0,0])",
        "uniqueTitle": "greedyJumpGame([5,4,3,2,1,0,0])#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/greedyJumpGame.js",
          "loc": {
            "start": {
              "line": 20,
              "column": 48,
              "index": 885
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1832
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/jump-game/__test__/greedyJumpGame.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 149
            },
            "end": {
              "line": 16,
              "column": 3,
              "index": 722
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "knight-tour",
    "algo": "knight-tour_knightTour",
    "name": "knightTour should not find solution on 3x3 board@knightTour.test.js",
    "label": "knightTour should not find solution on 3x3 board",
    "testNamePattern": "knightTour should not find solution on 3x3 board",
    "testFilePaths": [
      "src/algorithms/uncategorized/knight-tour/__test__/knightTour.test.js"
    ],
    "number": 294,
    "pdgs": [
      {
        "pdgTitle": "knightTour(3)",
        "uniqueTitle": "knightTour(3)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/knight-tour/knightTour.js",
          "loc": {
            "start": {
              "line": 98,
              "column": 51,
              "index": 2923
            },
            "end": {
              "line": 116,
              "column": 1,
              "index": 3424
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/knight-tour/__test__/knightTour.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 52,
              "index": 127
            },
            "end": {
              "line": 8,
              "column": 3,
              "index": 204
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "knight-tour",
    "algo": "knight-tour_knightTour",
    "name": "knightTour should find one solution to do knight tour on 5x5 board@knightTour.test.js",
    "label": "knightTour should find one solution to do knight tour on 5x5 board",
    "testNamePattern": "knightTour should find one solution to do knight tour on 5x5 board",
    "testFilePaths": [
      "src/algorithms/uncategorized/knight-tour/__test__/knightTour.test.js"
    ],
    "number": 295,
    "pdgs": {
      "failedReason": "test execution failed: code=134"
    }
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "n-queens",
    "algo": "n-queens_nQueens",
    "name": "nQueens should not hae solution for 3 queens@nQueens.test.js",
    "label": "nQueens should not hae solution for 3 queens",
    "testNamePattern": "nQueens should not hae solution for 3 queens",
    "testFilePaths": [
      "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js"
    ],
    "number": 296,
    "pdgs": [
      {
        "pdgTitle": "nQueens(3)",
        "uniqueTitle": "nQueens(3)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/nQueens.js",
          "loc": {
            "start": {
              "line": 94,
              "column": 45,
              "index": 3015
            },
            "end": {
              "line": 109,
              "column": 1,
              "index": 3520
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 51,
              "index": 117
            },
            "end": {
              "line": 7,
              "column": 3,
              "index": 197
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "n-queens",
    "algo": "n-queens_nQueens",
    "name": "nQueens should solve n-queens problem for 4 queens@nQueens.test.js",
    "label": "nQueens should solve n-queens problem for 4 queens",
    "testNamePattern": "nQueens should solve n-queens problem for 4 queens",
    "testFilePaths": [
      "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js"
    ],
    "number": 297,
    "pdgs": [
      {
        "pdgTitle": "nQueens(4)",
        "uniqueTitle": "nQueens(4)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/nQueens.js",
          "loc": {
            "start": {
              "line": 94,
              "column": 45,
              "index": 3015
            },
            "end": {
              "line": 109,
              "column": 1,
              "index": 3520
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 260
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 828
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#16",
        "contextId": 496,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 260
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 828
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#17",
        "contextId": 497,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 260
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 828
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#18",
        "contextId": 498,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 260
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 828
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#19",
        "contextId": 499,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 260
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 828
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#20",
        "contextId": 500,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 260
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 828
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#21",
        "contextId": 501,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 260
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 828
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#22",
        "contextId": 502,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 260
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 828
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#23",
        "contextId": 503,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 57,
              "index": 260
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 828
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "n-queens",
    "algo": "n-queens_nQueens",
    "name": "nQueens should solve n-queens problem for 6 queens@nQueens.test.js",
    "label": "nQueens should solve n-queens problem for 6 queens",
    "testNamePattern": "nQueens should solve n-queens problem for 6 queens",
    "testFilePaths": [
      "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js"
    ],
    "number": 298,
    "pdgs": [
      {
        "pdgTitle": "nQueens(6)",
        "uniqueTitle": "nQueens(6)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/nQueens.js",
          "loc": {
            "start": {
              "line": 94,
              "column": 45,
              "index": 3015
            },
            "end": {
              "line": 109,
              "column": 1,
              "index": 3520
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 57,
              "index": 891
            },
            "end": {
              "line": 37,
              "column": 3,
              "index": 1315
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#24",
        "contextId": 9696,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 57,
              "index": 891
            },
            "end": {
              "line": 37,
              "column": 3,
              "index": 1315
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#25",
        "contextId": 9697,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 57,
              "index": 891
            },
            "end": {
              "line": 37,
              "column": 3,
              "index": 1315
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#26",
        "contextId": 9698,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 57,
              "index": 891
            },
            "end": {
              "line": 37,
              "column": 3,
              "index": 1315
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#27",
        "contextId": 9699,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 57,
              "index": 891
            },
            "end": {
              "line": 37,
              "column": 3,
              "index": 1315
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#28",
        "contextId": 9700,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 57,
              "index": 891
            },
            "end": {
              "line": 37,
              "column": 3,
              "index": 1315
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#29",
        "contextId": 9701,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/nQueens.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 57,
              "index": 891
            },
            "end": {
              "line": 37,
              "column": 3,
              "index": 1315
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "n-queens",
    "algo": "n-queens_QueensPosition",
    "name": "QueenPosition should store queen position on chessboard@QueensPosition.test.js",
    "label": "QueenPosition should store queen position on chessboard",
    "testNamePattern": "QueenPosition should store queen position on chessboard",
    "testFilePaths": [
      "src/algorithms/uncategorized/n-queens/__test__/QueensPosition.test.js"
    ],
    "number": 299,
    "pdgs": [
      {
        "pdgTitle": "QueenPosition.constructor(0, 0)",
        "uniqueTitle": "QueenPosition.constructor(0, 0)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 37,
              "index": 224
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 298
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/QueensPosition.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 56,
              "index": 140
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 558
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.constructor(2, 1)",
        "uniqueTitle": "QueenPosition.constructor(2, 1)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 9,
              "column": 37,
              "index": 224
            },
            "end": {
              "line": 12,
              "column": 3,
              "index": 298
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/QueensPosition.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 56,
              "index": 140
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 558
            }
          }
        }
      },
      {
        "pdgTitle": "QueenPosition.toString()",
        "uniqueTitle": "QueenPosition.toString()#30",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/QueenPosition.js",
          "loc": {
            "start": {
              "line": 36,
              "column": 13,
              "index": 1073
            },
            "end": {
              "line": 38,
              "column": 3,
              "index": 1131
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/n-queens/__test__/QueensPosition.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 56,
              "index": 140
            },
            "end": {
              "line": 15,
              "column": 3,
              "index": 558
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "n-queens",
    "algo": "n-queens_nQueensBitwise",
    "name": "nQueensBitwise should have solutions for 4 to N queens@nQueensBitwise.test.js",
    "label": "nQueensBitwise should have solutions for 4 to N queens",
    "testNamePattern": "nQueensBitwise should have solutions for 4 to N queens",
    "testFilePaths": [
      "src/algorithms/uncategorized/n-queens/__test__/nQueensBitwise.test.js"
    ],
    "number": 300,
    "pdgs": {
      "failedReason": "test execution failed: code=134"
    }
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "rain-terraces",
    "algo": "rain-terraces_dpRainTerraces",
    "name": "dpRainTerraces should find the amount of water collected after raining@dpRainTerraces.test.js",
    "label": "dpRainTerraces should find the amount of water collected after raining",
    "testNamePattern": "dpRainTerraces should find the amount of water collected after raining",
    "testFilePaths": [
      "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js"
    ],
    "number": 301,
    "pdgs": [
      {
        "pdgTitle": "dpRainTerraces([2,0,3,1,3])",
        "uniqueTitle": "dpRainTerraces([2,0,3,1,3])",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            },
            "_range": [
              {
                "line": 64,
                "character": 49
              },
              {
                "line": 117,
                "character": 1
              }
            ]
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([1])",
        "uniqueTitle": "dpRainTerraces([1])#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([1,0])",
        "uniqueTitle": "dpRainTerraces([1,0])#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([0,1])",
        "uniqueTitle": "dpRainTerraces([0,1])#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([0,1,0])",
        "uniqueTitle": "dpRainTerraces([0,1,0])#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([0,1,0,0])",
        "uniqueTitle": "dpRainTerraces([0,1,0,0])#2",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([0,1,0,0,1,0])",
        "uniqueTitle": "dpRainTerraces([0,1,0,0,1,0])#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([0,2,0,0,1,0])",
        "uniqueTitle": "dpRainTerraces([0,2,0,0,1,0])#2",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([2,0,2])",
        "uniqueTitle": "dpRainTerraces([2,0,2])#2",
        "contextId": 29,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([2,0,5])",
        "uniqueTitle": "dpRainTerraces([2,0,5])#2",
        "contextId": 32,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([3,0,0,2,0,4])",
        "uniqueTitle": "dpRainTerraces([3,0,0,2,0,4])#2",
        "contextId": 35,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([0,1,0,2,1,0,1,3,2,1,2,1])",
        "uniqueTitle": "dpRainTerraces([0,1,0,2,1,0,1,3,2,1,2,1])#2",
        "contextId": 38,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([1,1,1,1,1])",
        "uniqueTitle": "dpRainTerraces([1,1,1,1,1])#2",
        "contextId": 41,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([1,2,3,4,5])",
        "uniqueTitle": "dpRainTerraces([1,2,3,4,5])#2",
        "contextId": 44,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([4,1,3,1,2,1,2,1])",
        "uniqueTitle": "dpRainTerraces([4,1,3,1,2,1,2,1])#2",
        "contextId": 47,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      },
      {
        "pdgTitle": "dpRainTerraces([0,2,4,3,4,2,4,0,8,7,0])",
        "uniqueTitle": "dpRainTerraces([0,2,4,3,4,2,4,0,8,7,0])#2",
        "contextId": 50,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/dpRainTerraces.js",
          "loc": {
            "start": {
              "line": 65,
              "column": 49,
              "index": 1938,
              "_pos": {
                "line": 64,
                "character": 49
              }
            },
            "end": {
              "line": 118,
              "column": 1,
              "index": 3614,
              "_pos": {
                "line": 117,
                "character": 1
              }
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/dpRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157,
              "_pos": {
                "line": 3,
                "character": 70
              }
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034,
              "_pos": {
                "line": 20,
                "character": 3
              }
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "rain-terraces",
    "algo": "rain-terraces_bfRainTerraces",
    "name": "bfRainTerraces should find the amount of water collected after raining@bfRainTerraces.test.js",
    "label": "bfRainTerraces should find the amount of water collected after raining",
    "testNamePattern": "bfRainTerraces should find the amount of water collected after raining",
    "testFilePaths": [
      "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js"
    ],
    "number": 302,
    "pdgs": [
      {
        "pdgTitle": "bfRainTerraces([2,0,3,1,3])",
        "uniqueTitle": "bfRainTerraces([2,0,3,1,3])#3",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([1])",
        "uniqueTitle": "bfRainTerraces([1])#4",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([1,0])",
        "uniqueTitle": "bfRainTerraces([1,0])#4",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([0,1])",
        "uniqueTitle": "bfRainTerraces([0,1])#4",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([0,1,0])",
        "uniqueTitle": "bfRainTerraces([0,1,0])#4",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([0,1,0,0])",
        "uniqueTitle": "bfRainTerraces([0,1,0,0])#4",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([0,1,0,0,1,0])",
        "uniqueTitle": "bfRainTerraces([0,1,0,0,1,0])#4",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([0,2,0,0,1,0])",
        "uniqueTitle": "bfRainTerraces([0,2,0,0,1,0])#4",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([2,0,2])",
        "uniqueTitle": "bfRainTerraces([2,0,2])#4",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([2,0,5])",
        "uniqueTitle": "bfRainTerraces([2,0,5])#4",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([3,0,0,2,0,4])",
        "uniqueTitle": "bfRainTerraces([3,0,0,2,0,4])#4",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([0,1,0,2,1,0,1,3,2,1,2,1])",
        "uniqueTitle": "bfRainTerraces([0,1,0,2,1,0,1,3,2,1,2,1])#4",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([1,1,1,1,1])",
        "uniqueTitle": "bfRainTerraces([1,1,1,1,1])#4",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([1,2,3,4,5])",
        "uniqueTitle": "bfRainTerraces([1,2,3,4,5])#4",
        "contextId": 18,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([4,1,3,1,2,1,2,1])",
        "uniqueTitle": "bfRainTerraces([4,1,3,1,2,1,2,1])#4",
        "contextId": 19,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      },
      {
        "pdgTitle": "bfRainTerraces([0,2,4,3,4,2,4,0,8,7,0])",
        "uniqueTitle": "bfRainTerraces([0,2,4,3,4,2,4,0,8,7,0])#4",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/bfRainTerraces.js",
          "loc": {
            "start": {
              "line": 2,
              "column": 34,
              "index": 51
            },
            "end": {
              "line": 22,
              "column": 1,
              "index": 586
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/rain-terraces/__test__/bfRainTerraces.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 70,
              "index": 157
            },
            "end": {
              "line": 21,
              "column": 3,
              "index": 1034
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "recursive-staircase",
    "algo": "recursive-staircase_recursiveStaircaseMEM",
    "name": "recursiveStaircaseMEM should calculate number of variants using Brute Force with Memoization@recursiveStaircaseMEM.test.js",
    "label": "recursiveStaircaseMEM should calculate number of variants using Brute Force with Memoization",
    "testNamePattern": "recursiveStaircaseMEM should calculate number of variants using Brute Force with Memoization",
    "testFilePaths": [
      "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseMEM.test.js"
    ],
    "number": 303,
    "pdgs": [
      {
        "pdgTitle": "recursiveStaircaseMEM(-1)",
        "uniqueTitle": "recursiveStaircaseMEM(-1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseMEM.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 59,
              "index": 268
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1426
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseMEM.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 193
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 770
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseMEM(0)",
        "uniqueTitle": "recursiveStaircaseMEM(0)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseMEM.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 59,
              "index": 268
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1426
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseMEM.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 193
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 770
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseMEM(1)",
        "uniqueTitle": "recursiveStaircaseMEM(1)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseMEM.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 59,
              "index": 268
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1426
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseMEM.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 193
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 770
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseMEM(2)",
        "uniqueTitle": "recursiveStaircaseMEM(2)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseMEM.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 59,
              "index": 268
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1426
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseMEM.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 193
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 770
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseMEM(3)",
        "uniqueTitle": "recursiveStaircaseMEM(3)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseMEM.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 59,
              "index": 268
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1426
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseMEM.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 193
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 770
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseMEM(4)",
        "uniqueTitle": "recursiveStaircaseMEM(4)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseMEM.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 59,
              "index": 268
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1426
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseMEM.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 193
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 770
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseMEM(5)",
        "uniqueTitle": "recursiveStaircaseMEM(5)#2",
        "contextId": 23,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseMEM.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 59,
              "index": 268
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1426
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseMEM.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 193
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 770
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseMEM(6)",
        "uniqueTitle": "recursiveStaircaseMEM(6)#2",
        "contextId": 31,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseMEM.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 59,
              "index": 268
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1426
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseMEM.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 193
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 770
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseMEM(7)",
        "uniqueTitle": "recursiveStaircaseMEM(7)#2",
        "contextId": 41,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseMEM.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 59,
              "index": 268
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1426
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseMEM.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 193
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 770
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseMEM(8)",
        "uniqueTitle": "recursiveStaircaseMEM(8)#2",
        "contextId": 53,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseMEM.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 59,
              "index": 268
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1426
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseMEM.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 193
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 770
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseMEM(9)",
        "uniqueTitle": "recursiveStaircaseMEM(9)#2",
        "contextId": 67,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseMEM.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 59,
              "index": 268
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1426
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseMEM.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 193
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 770
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseMEM(10)",
        "uniqueTitle": "recursiveStaircaseMEM(10)#2",
        "contextId": 83,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseMEM.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 59,
              "index": 268
            },
            "end": {
              "line": 44,
              "column": 1,
              "index": 1426
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseMEM.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 193
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 770
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "recursive-staircase",
    "algo": "recursive-staircase_recursiveStaircaseIT",
    "name": "recursiveStaircaseIT should calculate number of variants using Iterative solution@recursiveStaircaseIT.test.js",
    "label": "recursiveStaircaseIT should calculate number of variants using Iterative solution",
    "testNamePattern": "recursiveStaircaseIT should calculate number of variants using Iterative solution",
    "testFilePaths": [
      "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseIT.test.js"
    ],
    "number": 304,
    "pdgs": [
      {
        "pdgTitle": "recursiveStaircaseIT(-1)",
        "uniqueTitle": "recursiveStaircaseIT(-1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseIT.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1152
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseIT.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 180
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 745
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseIT(0)",
        "uniqueTitle": "recursiveStaircaseIT(0)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseIT.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1152
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseIT.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 180
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 745
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseIT(1)",
        "uniqueTitle": "recursiveStaircaseIT(1)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseIT.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1152
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseIT.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 180
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 745
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseIT(2)",
        "uniqueTitle": "recursiveStaircaseIT(2)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseIT.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1152
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseIT.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 180
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 745
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseIT(3)",
        "uniqueTitle": "recursiveStaircaseIT(3)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseIT.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1152
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseIT.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 180
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 745
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseIT(4)",
        "uniqueTitle": "recursiveStaircaseIT(4)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseIT.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1152
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseIT.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 180
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 745
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseIT(5)",
        "uniqueTitle": "recursiveStaircaseIT(5)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseIT.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1152
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseIT.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 180
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 745
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseIT(6)",
        "uniqueTitle": "recursiveStaircaseIT(6)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseIT.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1152
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseIT.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 180
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 745
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseIT(7)",
        "uniqueTitle": "recursiveStaircaseIT(7)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseIT.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1152
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseIT.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 180
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 745
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseIT(8)",
        "uniqueTitle": "recursiveStaircaseIT(8)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseIT.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1152
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseIT.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 180
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 745
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseIT(9)",
        "uniqueTitle": "recursiveStaircaseIT(9)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseIT.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1152
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseIT.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 180
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 745
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseIT(10)",
        "uniqueTitle": "recursiveStaircaseIT(10)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseIT.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 246
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1152
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseIT.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 75,
              "index": 180
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 745
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "recursive-staircase",
    "algo": "recursive-staircase_recursiveStaircaseDP",
    "name": "recursiveStaircaseDP should calculate number of variants using Dynamic Programming solution@recursiveStaircaseDP.test.js",
    "label": "recursiveStaircaseDP should calculate number of variants using Dynamic Programming solution",
    "testNamePattern": "recursiveStaircaseDP should calculate number of variants using Dynamic Programming solution",
    "testFilePaths": [
      "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseDP.test.js"
    ],
    "number": 305,
    "pdgs": [
      {
        "pdgTitle": "recursiveStaircaseDP(-1)",
        "uniqueTitle": "recursiveStaircaseDP(-1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseDP.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 256
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1084
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseDP.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 190
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 755
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseDP(0)",
        "uniqueTitle": "recursiveStaircaseDP(0)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseDP.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 256
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1084
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseDP.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 190
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 755
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseDP(1)",
        "uniqueTitle": "recursiveStaircaseDP(1)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseDP.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 256
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1084
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseDP.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 190
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 755
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseDP(2)",
        "uniqueTitle": "recursiveStaircaseDP(2)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseDP.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 256
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1084
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseDP.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 190
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 755
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseDP(3)",
        "uniqueTitle": "recursiveStaircaseDP(3)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseDP.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 256
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1084
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseDP.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 190
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 755
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseDP(4)",
        "uniqueTitle": "recursiveStaircaseDP(4)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseDP.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 256
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1084
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseDP.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 190
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 755
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseDP(5)",
        "uniqueTitle": "recursiveStaircaseDP(5)#2",
        "contextId": 11,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseDP.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 256
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1084
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseDP.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 190
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 755
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseDP(6)",
        "uniqueTitle": "recursiveStaircaseDP(6)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseDP.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 256
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1084
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseDP.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 190
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 755
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseDP(7)",
        "uniqueTitle": "recursiveStaircaseDP(7)#2",
        "contextId": 13,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseDP.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 256
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1084
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseDP.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 190
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 755
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseDP(8)",
        "uniqueTitle": "recursiveStaircaseDP(8)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseDP.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 256
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1084
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseDP.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 190
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 755
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseDP(9)",
        "uniqueTitle": "recursiveStaircaseDP(9)#2",
        "contextId": 15,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseDP.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 256
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1084
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseDP.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 190
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 755
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseDP(10)",
        "uniqueTitle": "recursiveStaircaseDP(10)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseDP.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 256
            },
            "end": {
              "line": 33,
              "column": 1,
              "index": 1084
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseDP.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 85,
              "index": 190
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 755
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "recursive-staircase",
    "algo": "recursive-staircase_recursiveStaircaseBF",
    "name": "recursiveStaircaseBF should calculate number of variants using Brute Force solution@recursiveStaircaseBF.test.js",
    "label": "recursiveStaircaseBF should calculate number of variants using Brute Force solution",
    "testNamePattern": "recursiveStaircaseBF should calculate number of variants using Brute Force solution",
    "testFilePaths": [
      "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseBF.test.js"
    ],
    "number": 306,
    "pdgs": [
      {
        "pdgTitle": "recursiveStaircaseBF(-1)",
        "uniqueTitle": "recursiveStaircaseBF(-1)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseBF.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 248
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseBF.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 182
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 747
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseBF(0)",
        "uniqueTitle": "recursiveStaircaseBF(0)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseBF.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 248
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseBF.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 182
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 747
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseBF(1)",
        "uniqueTitle": "recursiveStaircaseBF(1)#2",
        "contextId": 7,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseBF.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 248
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseBF.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 182
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 747
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseBF(2)",
        "uniqueTitle": "recursiveStaircaseBF(2)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseBF.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 248
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseBF.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 182
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 747
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseBF(3)",
        "uniqueTitle": "recursiveStaircaseBF(3)#2",
        "contextId": 9,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseBF.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 248
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseBF.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 182
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 747
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseBF(4)",
        "uniqueTitle": "recursiveStaircaseBF(4)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseBF.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 248
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseBF.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 182
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 747
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseBF(5)",
        "uniqueTitle": "recursiveStaircaseBF(5)#2",
        "contextId": 17,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseBF.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 248
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseBF.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 182
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 747
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseBF(6)",
        "uniqueTitle": "recursiveStaircaseBF(6)#2",
        "contextId": 26,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseBF.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 248
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseBF.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 182
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 747
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseBF(7)",
        "uniqueTitle": "recursiveStaircaseBF(7)#2",
        "contextId": 41,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseBF.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 248
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseBF.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 182
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 747
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseBF(8)",
        "uniqueTitle": "recursiveStaircaseBF(8)#2",
        "contextId": 66,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseBF.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 248
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseBF.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 182
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 747
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseBF(9)",
        "uniqueTitle": "recursiveStaircaseBF(9)#2",
        "contextId": 107,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseBF.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 248
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseBF.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 182
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 747
            }
          }
        }
      },
      {
        "pdgTitle": "recursiveStaircaseBF(10)",
        "uniqueTitle": "recursiveStaircaseBF(10)#2",
        "contextId": 174,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/recursiveStaircaseBF.js",
          "loc": {
            "start": {
              "line": 7,
              "column": 56,
              "index": 248
            },
            "end": {
              "line": 29,
              "column": 1,
              "index": 928
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/recursive-staircase/__test__/recursiveStaircaseBF.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 77,
              "index": 182
            },
            "end": {
              "line": 17,
              "column": 3,
              "index": 747
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "square-matrix-rotation",
    "algo": "square-matrix-rotation_squareMatrixRotation",
    "name": "squareMatrixRotation should rotate matrix #0 in-place@squareMatrixRotation.test.js",
    "label": "squareMatrixRotation should rotate matrix #0 in-place",
    "testNamePattern": "squareMatrixRotation should rotate matrix #0 in-place",
    "testFilePaths": [
      "src/algorithms/uncategorized/square-matrix-rotation/__test__/squareMatrixRotation.test.js"
    ],
    "number": 307,
    "pdgs": [
      {
        "pdgTitle": "squareMatrixRotation([[]])",
        "uniqueTitle": "squareMatrixRotation([[]])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/square-matrix-rotation/squareMatrixRotation.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 61,
              "index": 125
            },
            "end": {
              "line": 40,
              "column": 1,
              "index": 1177
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/square-matrix-rotation/__test__/squareMatrixRotation.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 47,
              "index": 152
            },
            "end": {
              "line": 10,
              "column": 3,
              "index": 289
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "square-matrix-rotation",
    "algo": "square-matrix-rotation_squareMatrixRotation",
    "name": "squareMatrixRotation should rotate matrix #1 in-place@squareMatrixRotation.test.js",
    "label": "squareMatrixRotation should rotate matrix #1 in-place",
    "testNamePattern": "squareMatrixRotation should rotate matrix #1 in-place",
    "testFilePaths": [
      "src/algorithms/uncategorized/square-matrix-rotation/__test__/squareMatrixRotation.test.js"
    ],
    "number": 308,
    "pdgs": [
      {
        "pdgTitle": "squareMatrixRotation([[],[]])",
        "uniqueTitle": "squareMatrixRotation([[],[]])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/square-matrix-rotation/squareMatrixRotation.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 61,
              "index": 125
            },
            "end": {
              "line": 40,
              "column": 1,
              "index": 1177
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/square-matrix-rotation/__test__/squareMatrixRotation.test.js",
          "loc": {
            "start": {
              "line": 12,
              "column": 47,
              "index": 342
            },
            "end": {
              "line": 24,
              "column": 3,
              "index": 545
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "square-matrix-rotation",
    "algo": "square-matrix-rotation_squareMatrixRotation",
    "name": "squareMatrixRotation should rotate matrix #2 in-place@squareMatrixRotation.test.js",
    "label": "squareMatrixRotation should rotate matrix #2 in-place",
    "testNamePattern": "squareMatrixRotation should rotate matrix #2 in-place",
    "testFilePaths": [
      "src/algorithms/uncategorized/square-matrix-rotation/__test__/squareMatrixRotation.test.js"
    ],
    "number": 309,
    "pdgs": [
      {
        "pdgTitle": "squareMatrixRotation([[],[],[]])",
        "uniqueTitle": "squareMatrixRotation([[],[],[]])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/square-matrix-rotation/squareMatrixRotation.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 61,
              "index": 125
            },
            "end": {
              "line": 40,
              "column": 1,
              "index": 1177
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/square-matrix-rotation/__test__/squareMatrixRotation.test.js",
          "loc": {
            "start": {
              "line": 26,
              "column": 47,
              "index": 598
            },
            "end": {
              "line": 40,
              "column": 3,
              "index": 849
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "square-matrix-rotation",
    "algo": "square-matrix-rotation_squareMatrixRotation",
    "name": "squareMatrixRotation should rotate matrix #3 in-place@squareMatrixRotation.test.js",
    "label": "squareMatrixRotation should rotate matrix #3 in-place",
    "testNamePattern": "squareMatrixRotation should rotate matrix #3 in-place",
    "testFilePaths": [
      "src/algorithms/uncategorized/square-matrix-rotation/__test__/squareMatrixRotation.test.js"
    ],
    "number": 310,
    "pdgs": [
      {
        "pdgTitle": "squareMatrixRotation([[],[],[],[]])",
        "uniqueTitle": "squareMatrixRotation([[],[],[],[]])#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/square-matrix-rotation/squareMatrixRotation.js",
          "loc": {
            "start": {
              "line": 5,
              "column": 61,
              "index": 125
            },
            "end": {
              "line": 40,
              "column": 1,
              "index": 1177
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/square-matrix-rotation/__test__/squareMatrixRotation.test.js",
          "loc": {
            "start": {
              "line": 42,
              "column": 47,
              "index": 902
            },
            "end": {
              "line": 58,
              "column": 3,
              "index": 1227
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "unique-paths",
    "algo": "unique-paths_btUniquePaths",
    "name": "btUniquePaths should find the number of unique paths on board@btUniquePaths.test.js",
    "label": "btUniquePaths should find the number of unique paths on board",
    "testNamePattern": "btUniquePaths should find the number of unique paths on board",
    "testFilePaths": [
      "src/algorithms/uncategorized/unique-paths/__test__/btUniquePaths.test.js"
    ],
    "number": 311,
    "pdgs": {
      "failedReason": "test execution failed: code=134"
    }
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "unique-paths",
    "algo": "unique-paths_dpUniquePaths",
    "name": "dpUniquePaths should find the number of unique paths on board@dpUniquePaths.test.js",
    "label": "dpUniquePaths should find the number of unique paths on board",
    "testNamePattern": "dpUniquePaths should find the number of unique paths on board",
    "testFilePaths": [
      "src/algorithms/uncategorized/unique-paths/__test__/dpUniquePaths.test.js"
    ],
    "number": 312,
    "pdgs": [
      {
        "pdgTitle": "dpUniquePaths(3, 2)",
        "uniqueTitle": "dpUniquePaths(3, 2)#2",
        "contextId": 5,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/dpUniquePaths.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 53,
              "index": 278
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/__test__/dpUniquePaths.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 146
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 416
            }
          }
        }
      },
      {
        "pdgTitle": "dpUniquePaths(7, 3)",
        "uniqueTitle": "dpUniquePaths(7, 3)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/dpUniquePaths.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 53,
              "index": 278
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/__test__/dpUniquePaths.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 146
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 416
            }
          }
        }
      },
      {
        "pdgTitle": "dpUniquePaths(3, 7)",
        "uniqueTitle": "dpUniquePaths(3, 7)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/dpUniquePaths.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 53,
              "index": 278
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/__test__/dpUniquePaths.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 146
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 416
            }
          }
        }
      },
      {
        "pdgTitle": "dpUniquePaths(10, 10)",
        "uniqueTitle": "dpUniquePaths(10, 10)#2",
        "contextId": 20,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/dpUniquePaths.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 53,
              "index": 278
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/__test__/dpUniquePaths.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 146
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 416
            }
          }
        }
      },
      {
        "pdgTitle": "dpUniquePaths(100, 1)",
        "uniqueTitle": "dpUniquePaths(100, 1)#2",
        "contextId": 31,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/dpUniquePaths.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 53,
              "index": 278
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/__test__/dpUniquePaths.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 146
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 416
            }
          }
        }
      },
      {
        "pdgTitle": "dpUniquePaths(1, 100)",
        "uniqueTitle": "dpUniquePaths(1, 100)#2",
        "contextId": 33,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/dpUniquePaths.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 53,
              "index": 278
            },
            "end": {
              "line": 42,
              "column": 1,
              "index": 1544
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/__test__/dpUniquePaths.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 146
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 416
            }
          }
        }
      }
    ]
  },
  {
    "chapterGroup": "uncategorized",
    "chapter": "unique-paths",
    "algo": "unique-paths_uniquePaths",
    "name": "uniquePaths should find the number of unique paths on board@uniquePaths.test.js",
    "label": "uniquePaths should find the number of unique paths on board",
    "testNamePattern": "uniquePaths should find the number of unique paths on board",
    "testFilePaths": [
      "src/algorithms/uncategorized/unique-paths/__test__/uniquePaths.test.js"
    ],
    "number": 313,
    "pdgs": [
      {
        "pdgTitle": "uniquePaths(3, 2)",
        "uniqueTitle": "uniquePaths(3, 2)#2",
        "contextId": 6,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/uniquePaths.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 51,
              "index": 210
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 375
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/__test__/uniquePaths.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 140
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 398
            }
          }
        }
      },
      {
        "pdgTitle": "uniquePaths(7, 3)",
        "uniqueTitle": "uniquePaths(7, 3)#2",
        "contextId": 8,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/uniquePaths.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 51,
              "index": 210
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 375
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/__test__/uniquePaths.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 140
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 398
            }
          }
        }
      },
      {
        "pdgTitle": "uniquePaths(3, 7)",
        "uniqueTitle": "uniquePaths(3, 7)#2",
        "contextId": 10,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/uniquePaths.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 51,
              "index": 210
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 375
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/__test__/uniquePaths.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 140
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 398
            }
          }
        }
      },
      {
        "pdgTitle": "uniquePaths(10, 10)",
        "uniqueTitle": "uniquePaths(10, 10)#2",
        "contextId": 12,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/uniquePaths.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 51,
              "index": 210
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 375
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/__test__/uniquePaths.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 140
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 398
            }
          }
        }
      },
      {
        "pdgTitle": "uniquePaths(100, 1)",
        "uniqueTitle": "uniquePaths(100, 1)#2",
        "contextId": 14,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/uniquePaths.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 51,
              "index": 210
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 375
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/__test__/uniquePaths.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 140
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 398
            }
          }
        }
      },
      {
        "pdgTitle": "uniquePaths(1, 100)",
        "uniqueTitle": "uniquePaths(1, 100)#2",
        "contextId": 16,
        "algoLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/uniquePaths.js",
          "loc": {
            "start": {
              "line": 8,
              "column": 51,
              "index": 210
            },
            "end": {
              "line": 13,
              "column": 1,
              "index": 375
            }
          }
        },
        "testLoc": {
          "filePath": "src/algorithms/uncategorized/unique-paths/__test__/uniquePaths.test.js",
          "loc": {
            "start": {
              "line": 4,
              "column": 62,
              "index": 140
            },
            "end": {
              "line": 11,
              "column": 3,
              "index": 398
            }
          }
        }
      }
    ]
  }
]