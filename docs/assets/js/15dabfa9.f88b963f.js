/*! For license information please see 15dabfa9.f88b963f.js.LICENSE.txt */
(self.webpackChunkdbux_docs=self.webpackChunkdbux_docs||[]).push([[948],{9176:function(e,t,n){var a={"./async-send-file-await":8665,"./async-send-file-await.js":8665,"./async-send-file-cb":3638,"./async-send-file-cb.js":3638,"./async-send-file-promise":9407,"./async-send-file-promise.js":9407,"./async-sleep":3923,"./async-sleep.js":3923};function r(e){var t=o(e);return n(t)}function o(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=9176},5002:function(e,t,n){"use strict";n.d(t,{Z:function(){return c}});var a=n(7462),r=n(3366),o=n(7294),i=n(3616),l=["toc","className","linkClassName","linkActiveClassName","minHeadingLevel","maxHeadingLevel"];function s(e){var t=e.toc,n=e.className,a=e.linkClassName,r=e.isChild;return t.length?o.createElement("ul",{className:r?void 0:n},t.map((function(e){return o.createElement("li",{key:e.id},o.createElement("a",{href:"#"+e.id,className:null!=a?a:void 0,dangerouslySetInnerHTML:{__html:e.value}}),o.createElement(s,{isChild:!0,toc:e.children,className:n,linkClassName:a}))}))):null}function c(e){var t=e.toc,n=e.className,c=void 0===n?"table-of-contents table-of-contents__left-border":n,d=e.linkClassName,u=void 0===d?"table-of-contents__link":d,p=e.linkActiveClassName,m=void 0===p?void 0:p,h=e.minHeadingLevel,f=e.maxHeadingLevel,g=(0,r.Z)(e,l),v=(0,i.LU)(),k=null!=h?h:v.tableOfContents.minHeadingLevel,y=null!=f?f:v.tableOfContents.maxHeadingLevel,b=(0,i.DA)({toc:t,minHeadingLevel:k,maxHeadingLevel:y}),N=(0,o.useMemo)((function(){if(u&&m)return{linkClassName:u,linkActiveClassName:m,minHeadingLevel:k,maxHeadingLevel:y}}),[u,m,k,y]);return(0,i.Si)(N),o.createElement(s,(0,a.Z)({toc:b,className:c,linkClassName:u},g))}},822:function(e,t,n){"use strict";n(7294),n(3899),n(4184),n(7037)},3424:function(e,t,n){"use strict";n.d(t,{Z:function(){return i}});var a=n(7294),r=n(7037),o=n.n(r);function i(e){var t=e.space;return t?(t=o()(t)?t:t+"px",a.createElement("div",{style:{marginRight:t}})):a.createElement("div",{className:"mr-05"})}},633:function(e,t,n){"use strict";n.d(t,{Z:function(){return h}});var a=n(7462),r=n(3366),o=n(7294),i=n(4184),l=n.n(i),s=n(7037),c=n.n(s),d=n(5350),u=n(8767);var p=["src","title","zoomable","darkLight","screen","concept","className","maxWidth","mb","style"];function m(e){return e.startsWith("/")||e.includes("://")}function h(e){var t=e.src,n=e.title,i=e.zoomable,s=e.darkLight,h=e.screen,f=e.concept,g=e.className,v=e.maxWidth,k=e.mb,y=e.style,b=(0,r.Z)(e,p);f&&(t.startsWith("concept")||m(t)||(t="concepts/"+t)),h&&(t.startsWith("screen")||m(t)||(t="screens/"+t));var N=f||h||i;N&&void 0===i&&(i=!0);var w=function(e){var t=e.src,n=e.darkLight,a=(0,d.Z)().isDarkTheme;return(0,u.Z)()+(n?a?"dark/":"light/":"")+t}({src:t,darkLight:s}),x=n=n||t;g=l()(g,{"border-screen":N,"img-crisp":N,zoomable:i});var C=o.createElement("img",(0,a.Z)({className:g,style:y,src:w,alt:x,title:n},b));if(v){v=c()(v)?v:v+"px",k=void 0===k?"mb-2":k;var A=l()(k),T={display:"inline-block",maxWidth:v,lineHeight:0};C=o.createElement("div",{className:A,style:T},C)}return C}},8640:function(e,t,n){"use strict";n.d(t,{Z:function(){return s}});var a=n(7294),r="tableOfContentsInline_0DDH",o=n(5002);var i=function(e){var t=e.toc,n=e.minHeadingLevel,i=e.maxHeadingLevel;return a.createElement("div",{className:r},a.createElement(o.Z,{toc:t,minHeadingLevel:n,maxHeadingLevel:i,className:"table-of-contents",linkClassName:null}))},l={display:"none"};function s(e){var t=e.toc;return a.createElement("div",{style:l},a.createElement(i,{toc:t}))}},1333:function(e,t,n){"use strict";n.d(t,{Z:function(){return d}});var a=n(7294),r=n(8767),o="acg",i="background/debugging",l={cgrs:"cgr","call graph root":"cgr","call graph roots":"cgr",aes:"ae","asynchronous event":"ae","asynchronous events":"ae","asynchronous call graph":"acg","race conditions":"race condition"},s={"call graph":"features/call-graph",acg:o,cgr:o,ae:o,"dynamic dynamic analysis":i,idbe:i,"race condition":"https://www.google.com/search?q=race+condition&hl=en"},c={trace:"trace",statictrace:"trace",context:"context",staticcontext:"staticContext","call graph":"call-graph",acg:"",cgr:"cgr",ae:"ae","dynamic dynamic analysis":"",idbe:""};function d(e){var t=e.term,n=e.children,o=void 0===n?t:n,i=function(e){var t=e.toLowerCase(),n=s[t=l[t]||t]||"advanced/terminology",a=c[t];return n||a?(a=a?"#"+a:"",""+(0,r.Z)()+n+a):null}(t);return i?a.createElement("a",{href:i,title:'lookup term: "'+t+'"'},o,a.createElement("sup",null,"\u2754")):a.createElement(a.Fragment,null,"$",o,a.createElement("span",{className:"color-gray border-gray round",title:'(could not look up "'+o+'")'},a.createElement("sup",null,"\u2753")))}},8767:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var a=n(2263);function r(){return(0,a.Z)().siteConfig.baseUrl}},5473:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return h},default:function(){return g}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=(n(822),n(3424)),l=n(1333),s=n(633),c=n(8640),d=["components"],u={title:"ACG: Asynchronous Call Graph",sidebar_class_name:"sidebar-call-graph",slug:"/acg"},p="Asynchronous Call Graph",m={unversionedId:"features/acg",id:"features/acg",title:"ACG: Asynchronous Call Graph",description:'"Asynchronous Programming be like..."',source:"@site/content/features/20-acg.mdx",sourceDirName:"features",slug:"/acg",permalink:"/dbux/acg",editUrl:"https://github.com/Domiii/dbux/blob/master/docs/content/features/20-acg.mdx",tags:[],version:"current",sidebarPosition:20,frontMatter:{title:"ACG: Asynchronous Call Graph",sidebar_class_name:"sidebar-call-graph",slug:"/acg"},sidebar:"tutorialSidebar",previous:{title:"Call Graph",permalink:"/dbux/features/call-graph"},next:{title:"PDG: Program Dependency Graph",permalink:"/dbux/pdg"}},h=[{value:"How to use the ACG?",id:"how-to-use-the-acg",children:[],level:2},{value:"Examples",id:"examples",children:[{value:"Example1: sample program",id:"example1",children:[],level:3},{value:"Example2: todomvc",id:"example2",children:[],level:3}],level:2},{value:"Why do we need an ACG?",id:"why-do-we-need-an-acg",children:[],level:2},{value:"How does the ACG work?",id:"how-does-the-acg-work",children:[],level:2}],f={toc:h};function g(e){var t=e.components,n=(0,r.Z)(e,d);return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"asynchronous-call-graph"},"Asynchronous Call Graph"),(0,o.kt)(c.Z,{toc:h,mdxType:"TOC"}),(0,o.kt)("hr",null),(0,o.kt)("a",{className:"flex flex-row flex-center-slim",href:"https://www.reddit.com/r/ProgrammerHumor/comments/rvco1a/asynchronous_proggraming_be_like/"},'"Asynchronous Programming be like..."',(0,o.kt)(i.Z,{space:"4rem",mdxType:"HSpace"}),(0,o.kt)(s.Z,{maxWidth:"200px",title:"Asynchronous Programming is hard",src:"async-hard.gif",mdxType:"Img"})),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"how-to-use-the-acg"},"How to use the ACG?"),(0,o.kt)("p",null,"Open the ",(0,o.kt)("a",{parentName:"p",href:"/dbux/features/call-graph"},"call graph"),". Then press the ",(0,o.kt)("inlineCode",{parentName:"p"},"sync"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"async")," button to toggle between modes. In ",(0,o.kt)("inlineCode",{parentName:"p"},"async")," mode, the ACG reveals itself."),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://youtu.be/N9W6rhHMKbA?t=617"},"The Dbux intro video")," demonstrates the ACG in several examples."),(0,o.kt)("h3",{id:"example1"},"Example1: sample program"),(0,o.kt)("p",null,"This example demonstrates the ACG of a sample program:"),(0,o.kt)(s.Z,{screen:!0,src:"dbux-all-async1.png",mdxType:"Img"}),(0,o.kt)("p",null,"The ACG (right) renders the program ",(0,o.kt)(l.Z,{term:"CGRs",mdxType:"Term"})," and the ",(0,o.kt)("a",{parentName:"p",href:"#ae"},"asynchronous event edges"),' that connect them. The vertical axis is time (pointing downwards) and the horizontal dimension is a new experimental measure of "virtual threads" or "degree of concurrency".'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Code: The red solid border around the ",(0,o.kt)("inlineCode",{parentName:"li"},"done()")," call expression indicates that it is ",(0,o.kt)("a",{parentName:"li",href:"/dbux/features/select-trace"},"selected"),"."),(0,o.kt)("li",{parentName:"ul"},"In the ACG, the ",(0,o.kt)("inlineCode",{parentName:"li"},"await Promise.all(...)")," node is also selected (due to ",(0,o.kt)("a",{parentName:"li",href:"/dbux/features/call-graph#follow"},"follow mode"),"), indicated by a yellow solid border.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u2192"," This means that ",(0,o.kt)("inlineCode",{parentName:"li"},"done()"),' is in the CGR of that corresponding asynchronous continuation (or "virtual/resume context"). '),(0,o.kt)("li",{parentName:"ul"},"\u2192"," This also means that ",(0,o.kt)("inlineCode",{parentName:"li"},"done()"),"'s CGR executed after the awaited promise settled."))),(0,o.kt)("li",{parentName:"ul"},"The dashed (red) border around the nodes on the left (",(0,o.kt)("inlineCode",{parentName:"li"},"f1"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"sleep1s"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"f2"),') indicate that the selected node "',(0,o.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Synchronization_(computer_science)"},"synchronizes"),'" against them.',(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u2192"," Those CGRs are part of a promise that scheduled earlier but had to finish before this root could start executing."))),(0,o.kt)("li",{parentName:"ul"},"Other observations:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"f2")," will always follow ",(0,o.kt)("inlineCode",{parentName:"li"},"f1"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"g2")," will always follow ",(0,o.kt)("inlineCode",{parentName:"li"},"g1")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"h2")," follows ",(0,o.kt)("inlineCode",{parentName:"li"},"h1"),"."),(0,o.kt)("li",{parentName:"ul"},"The ACG also clearly shows that  ",(0,o.kt)("inlineCode",{parentName:"li"},"f"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"g")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"h")," are executing concurrently."),(0,o.kt)("li",{parentName:"ul"},"\u2192"," If someone wrote code requiring ",(0,o.kt)("inlineCode",{parentName:"li"},"h")," to always finish after ",(0,o.kt)("inlineCode",{parentName:"li"},"f"),", or ",(0,o.kt)("inlineCode",{parentName:"li"},"g")," after ",(0,o.kt)("inlineCode",{parentName:"li"},"h"),", there might be a ",(0,o.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Race_condition"},"race condition"),' because there is no such order assured in the code. That is why the ACG renders the three functions on separate "virtual threads" (vertical columns), illustrating that concurrency.')))),(0,o.kt)("h3",{id:"example2"},"Example2: todomvc"),(0,o.kt)("p",null,"This example demonstrates the ACG of ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tastejs/todomvc/tree/master/examples/vanilla-es6"},"todomvc (vanilla-es6)"),":"),(0,o.kt)(s.Z,{screen:!0,src:"todomvc-sample-acg1.png",mdxType:"Img"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In this example, ",(0,o.kt)("inlineCode",{parentName:"li"},"val")," (aka ",(0,o.kt)("a",{parentName:"li",href:"/dbux/features/call-graph#value"},"value mode"),") is enabled.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"This option renders the value of the first execution of the currently selected trace in each ",(0,o.kt)(l.Z,{term:"CGR",mdxType:"Term"}),"."),(0,o.kt)("li",{parentName:"ul"},"In the ACG, we can see the value of ",(0,o.kt)("inlineCode",{parentName:"li"},"selector")," for each ",(0,o.kt)(l.Z,{term:"CGR",mdxType:"Term"}),", allowing us to see where/when the corresponding event (of this particular event handler) for each selector were handled."),(0,o.kt)("li",{parentName:"ul"},"We can click into each individual node to get us to the relevant execution of that event handler."))),(0,o.kt)("li",{parentName:"ul"},"NOTE: Event handler invocations of the same event are rendered in the same column.")),(0,o.kt)("h2",{id:"why-do-we-need-an-acg"},"Why do we need an ACG?"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous"},"Asynchronous JavaScript")," and its relatives, ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Parallel_programming"},"parallel programming")," and ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Concurrent_computing"},"concurrent computing"),", lead to much more complex execution pattern than their non-asynchronous, non-parallel, non-concurrent counterparts. In fact, asynchronous semantics are one of the most daunting aspects of JavaScript that software developers have to deal with on a day-to-day basis, making it ",(0,o.kt)("span",{className:"cursor-help highlight-on-hover",title:"This is a generic statement, so phrased for dramatic effect, not for accuracy."},"feared by many, underestimated by the rest",(0,o.kt)("sup",null,"*")),"."),(0,o.kt)("p",null,"With the ACG we hope to make asynchronous JavaScript a lot easier to understand and digest. It presents a clear picture of an application's asynchronous control flow, and makes many types of ",(0,o.kt)(l.Z,{term:"race conditions",mdxType:"Term"})," visually obvious. It can also help uncover lacking error propagation and a lot more. For example, if your application's ACG has many individual columns, but a low level of actual concurrency (things don't actually happen concurrently), it might indicate that you (i) forgot to ",(0,o.kt)("inlineCode",{parentName:"p"},"await")," or otherwise chain or nest your promises, or maybe (ii) are suffering from legacy code involving asynchronous callbacks and potential callback hell, that would benefit from re-writing using modern explicit asynchronous semantics."),(0,o.kt)("h2",{id:"how-does-the-acg-work"},"How does the ACG work?"),(0,o.kt)("p",null,"The Dbux introduction video features several examples of the Asynchronous Call Graph (ACG): ",(0,o.kt)("a",{parentName:"p",href:"https://youtu.be/N9W6rhHMKbA?t=621"},"direct link"),"."),(0,o.kt)("p",null,"The Asynchronous Call Graph (ACG) is the ",(0,o.kt)("a",{parentName:"p",href:"/dbux/features/call-graph"},"call graph")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"Async")," mode. You can see the ACG by opening the ",(0,o.kt)("a",{parentName:"p",href:"/dbux/features/call-graph"},"call graph")," and switching to ",(0,o.kt)("inlineCode",{parentName:"p"},"Async")," mode (by clicking the ",(0,o.kt)("inlineCode",{parentName:"p"},"Sync")," button in the ",(0,o.kt)("a",{parentName:"p",href:"/dbux/features/call-graph#toolbar"},"toolbar"),"). The two call graph modes share many features, including the toolbar buttons, coloring and more, as explained ",(0,o.kt)("a",{parentName:"p",href:"/dbux/features/call-graph#toolbar"},"here"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Sync")," mode allows inspecting children and children of children of file and function executions. However, it simply puts ",(0,o.kt)(l.Z,{term:"call graph roots",mdxType:"Term"})," on a single linear vertical timeline. The ACG, on the other hand, uncovers the hidden connections between those roots on multiple vertical timelines and connections rendered between them.\nIn other words, ",(0,o.kt)("inlineCode",{parentName:"p"},"Sync")," mode is great for inspecting control flow ",(0,o.kt)("strong",{parentName:"p"},"within")," individual ",(0,o.kt)(l.Z,{term:"call graph roots",mdxType:"Term"}),", while ",(0,o.kt)("inlineCode",{parentName:"p"},"Async")," mode is great for inspecting control flow ",(0,o.kt)("strong",{parentName:"p"},"between")," them.\nIn many debugging scenarios, you probably want to toggle between the two modes, as you investigate the control flow of an application."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"For more in-depth technical information, consult our paper: ",(0,o.kt)("a",{parentName:"p",href:"https://ieeexplore.ieee.org/document/9794057"},"An Asynchronous Call Graph for JavaScript (ICSE-SEIP, ACM, 2022)"),"."))))}g.isMDXComponent=!0},4184:function(e,t){var n;!function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var o=typeof n;if("string"===o||"number"===o)e.push(n);else if(Array.isArray(n)){if(n.length){var i=r.apply(null,n);i&&e.push(i)}}else if("object"===o)if(n.toString===Object.prototype.toString)for(var l in n)a.call(n,l)&&n[l]&&e.push(l);else e.push(n.toString())}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},2705:function(e,t,n){var a=n(5639).Symbol;e.exports=a},4239:function(e,t,n){var a=n(2705),r=n(9607),o=n(2333),i=a?a.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":i&&i in Object(e)?r(e):o(e)}},1957:function(e,t,n){var a="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g;e.exports=a},9607:function(e,t,n){var a=n(2705),r=Object.prototype,o=r.hasOwnProperty,i=r.toString,l=a?a.toStringTag:void 0;e.exports=function(e){var t=o.call(e,l),n=e[l];try{e[l]=void 0;var a=!0}catch(s){}var r=i.call(e);return a&&(t?e[l]=n:delete e[l]),r}},2333:function(e){var t=Object.prototype.toString;e.exports=function(e){return t.call(e)}},5639:function(e,t,n){var a=n(1957),r="object"==typeof self&&self&&self.Object===Object&&self,o=a||r||Function("return this")();e.exports=o},1469:function(e){var t=Array.isArray;e.exports=t},7005:function(e){e.exports=function(e){return null!=e&&"object"==typeof e}},7037:function(e,t,n){var a=n(4239),r=n(1469),o=n(7005);e.exports=function(e){return"string"==typeof e||!r(e)&&o(e)&&"[object String]"==a(e)}},8665:function(e,t,n){"use strict";n.r(t),t.default="async function send(fpath) {\r\n  const file = await openFile(fpath);\r\n\r\n  const cont = await readFile(file);\r\n\r\n\r\n  await sendFile(cont);\r\n\r\n\r\n  console.log('File sent!');\r\n}"},3638:function(e,t,n){"use strict";n.r(t),t.default="function send(fpath, cb) {\r\n  openFile(fpath, function (file) {\r\n\r\n    readFile(file, function (cont) {\r\n\r\n\r\n      sendFile(cont, function () {\r\n        cb && cb();\r\n\r\n        console.log('File sent!');\r\n      });\r\n    });\r\n  });\r\n}"},9407:function(e,t,n){"use strict";n.r(t),t.default="function send(fpath) {\r\n  return openFile(fpath).\r\n    then(function (file) {\r\n      return readFile(file);\r\n    }).\r\n    then(function (cont) {\r\n      return sendFile(cont);\r\n    }).\r\n    then(function () {\r\n      console.log('File sent!');\r\n    });\r\n}"},3923:function(e,t,n){"use strict";n.r(t),t.default="function sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\n(async function f() {\r\n  console.log(1);\r\n  await sleep(100);\r\n  console.log(2);\r\n  await sleep(200);\r\n  console.log(3);\r\n  await sleep(300);\r\n  console.log(4);\r\n})();"}}]);