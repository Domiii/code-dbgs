{
  "name": "@dbux/monoroot",
  "displayName": "DBUX Monoroot",
  "private": true,
  "workspaces": [
    "babel-register-fork",
    "dbux-*",
    "panzoom"
  ],
  "devDependencies": {
    "@babel/cli": "^7.14.5",
    "@babel/core": "^7.10.1",
    "@babel/eslint-parser": "^7.14.7",
    "@babel/plugin-proposal-decorators": "^7.10.1",
    "@babel/plugin-proposal-function-bind": "^7.10.1",
    "@babel/plugin-proposal-optional-chaining": "^7.10.1",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-syntax-export-default-from": "^7.10.1",
    "@babel/plugin-transform-destructuring": "^7.18.0",
    "@babel/plugin-transform-modules-commonjs": "^7.10.4",
    "@babel/plugin-transform-parameters": "^7.17.12",
    "@babel/plugin-transform-runtime": "^7.10.1",
    "@babel/plugin-transform-typescript": "^7.20.0",
    "@babel/preset-env": "^7.10.1",
    "@msgpack/msgpack": "^2.7.1",
    "babel-loader": "^8.2.2",
    "clean-webpack-plugin": "^4.0.0",
    "cloc": "^2.5.1",
    "copy-webpack-plugin": "^8",
    "css-loader": "^3.4.2",
    "eslint": "^7.4.0",
    "eslint-config-airbnb-base": "^14.0.0",
    "eslint-import-resolver-webpack": "^0.13.1",
    "eslint-plugin-import": "^2",
    "file-loader": "^6.0.0",
    "http-server": "^0.12.1",
    "lerna": "^4",
    "nodemon": "^2.0.2",
    "npm-run-all": "^4.1.5",
    "npm-which": "^3.0.1",
    "object.fromentries": "^2.0.2",
    "open": "^7.1.0",
    "open-cli": "^6.0.0",
    "sass-loader": "^8.0.2",
    "seedrandom": "^3.0.5",
    "shebang-loader": "^0.0.1",
    "source-map-loader": "^1.0.0",
    "string-replace-loader": "2.3.0",
    "style-loader": "^1.1.3",
    "tablemark": "^2.0.0",
    "terser-webpack-plugin": "^5.2.5",
    "webpack": "^5",
    "webpack-bundle-analyzer": "^4",
    "webpack-cli": "^4",
    "webpack-dev-server": "^4",
    "webpack-node-externals": "^3"
  },
  "dependencies": {
    "@babel/runtime": "^7.13.17",
    "core-js": "^3.15",
    "cross-spawn": "^7.0.3",
    "find-package-json": "^1.2.0",
    "lodash": "^4.17.21",
    "prettier": "^2.6.2",
    "shell-escape": "^0.2.0",
    "shelljs": "0.8.5",
    "yargs": "^16.2.0"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.1",
    "utf-8-validate": "^5.0.2"
  },
  "scripts": {
    "prepublishOnly": "yarn run build:prod",
    "i": "npx lerna bootstrap --force-local && npx lerna link --force-local",
    "start": "yarn run build:clean && yarn run version:dev && yarn runall:dev",
    "start:prod": "yarn run build:clean && yarn runall:prod",
    "pub": "node scripts/publish.js n",
    "marketplace": "node scripts/publish.js marketplace",
    "marketplace:minor": "node scripts/publish.js marketplace minor",
    "nra": "node node_modules/npm-run-all/bin/npm-run-all",
    "runall:dev": "npm run nra -- -p watch graph:watch",
    "runall:prod": "npm run nra -- -p watch:prod graph:watch:prod",
    "_runall:dev": "(yarn watch) & (graph:watch)",
    "registry-files": "node --stack-trace-limit=1000 scripts/auto-write-files.js",
    "version:dev": "node --unhandled-rejections=strict -e \"require('./scripts/fix-versions').revertToDevVersion().then(() => process.exit(0))\"",
    "version:dev:next": "node --unhandled-rejections=strict -e \"require('./scripts/fix-versions').nextDevVersion().then(() => process.exit(0))\"",
    "version:prod": "node --unhandled-rejections=strict -e \"require('./scripts/fix-versions').downgradeProdVersion().then(() => process.exit(0))\"",
    "version:dev:bump": "npx lerna version prerelease --preid=dev --force-publish -y",
    "build:clean": "bash scripts/dbux-run-all.sh \"rm -rf dist\" && cd dbux-code && yarn run build:clean",
    "____trace:dep": "node --trace-deprecation --stack-trace-limit=1000 ...",
    "watch": "yarn run version:dev && node --trace-deprecation --stack-trace-limit=1000 -- ./node_modules/webpack/bin/webpack.js watch --mode development",
    "watch:prod": "node --stack-trace-limit=1000 -- ./node_modules/webpack/bin/webpack.js watch --mode production",
    "build:dev": "yarn run version:dev && yarn run build:clean && yarn run graph:build:dev && node --stack-trace-limit=1000 -- ./node_modules/webpack/bin/webpack.js --mode development",
    "build:prod": "yarn run build:clean && yarn run graph:build:prod && node --stack-trace-limit=1000 -- ./node_modules/webpack/bin/webpack.js build --mode production",
    "update-dbux-code-docs": "cd dbux-code && yarn update-docs",
    "__old__readme": "cd dbux-code && yarn run readme",
    "graph:watch": "cd dbux-graph-client && npm start",
    "graph:watch:prod": "cd dbux-graph-client && yarn run start:prod",
    "graph:build:dev": "cd dbux-graph-client && yarn run build:dev",
    "graph:build:prod": "cd dbux-graph-client && yarn run build:prod",
    "code:install-only": "cd dbux-code && yarn run reinstallself",
    "code:install": "cd dbux-code && yarn run package-no-build && yarn run reinstallself",
    "code:copy": "node scripts/copy-prod-build.js",
    "code:build+pkg+install:prod": "yarn run build:prod && yarn run code:pkg+install",
    "code:build+pkg+install:dev": "yarn run build:dev && yarn run code:pkg+install",
    "code:uninstall": "cd dbux-code && yarn run uninstallself",
    "code:publish": "cd dbux-code && yarn run package:publish",
    "code:publish-no-build": "cd dbux-code && yarn run publish-no-build",
    "code:publish-only": "cd dbux-code && yarn run publish-only",
    "force-reinstall": "yarn run force-uninstall && yarn install && yarn i",
    "force-uninstall": "yarn run build:clean && rm -rf ./node_modules && rm -f ./package-lock.json && rm -f yarn.lock && bash scripts/dbux-run-all.sh \"rm -rf ./node_modules && rm -f ./package-lock.json && rm -f yarn.lock\"",
    "dbux-lerna-fix": "lerna exec -- node ../scripts/lerna-fix.js",
    "dbux-all": "bash scripts/dbux-run-all.sh",
    "yalc": "yalc push dbux-babel-plugin && yalc push dbux-runtime && yalc push dbux-cli && yalc push dbux-common && yalc push dbux-common-node && yalc push babel-register-fork",
    "docs": "cd ./docs_site && yarn start",
    "docs:build": "cd ./docs_site && yarn build",
    "docs:serve": "cd ./docs_site && yarn serve",
    "docs:deploy": "cd ./docs_site && yarn deploy",
    "w": "echo Copying write assets... && bash -cl \"cp -Trv ./docs_site/static/w ./docs/w\"",
    "clinic": "clinic flame -- node dbux-cli/bin/run-js-unbabel ../samples/__samplesOutput__/oop1.es5.js || (echo \"\\033[1;31mCould not execute clinic - checking installed version:\\033[0m\" && clinic -v)",
    "cloc": "bash scripts/cloc.sh",
    "cloc-eslint": "cd dbux_projects/eslint && volta run --node lts npx cloc --match-f=\".*\\.(e?js|ts)$\" --by-file lib bin tests templates packages",
    "cloc-express": "cd dbux_projects/express && volta run --node lts npx cloc --match-f=\".*\\.(e?js|ts)$\" --by-file lib bin test",
    "eslint": "npx eslint dbux-**/src/**/*.js",
    "eslint:files": "npx eslint dbux-**/src/**/*.js | grep -E \"^(\\w|/).*\\.js\"",
    "eslint:testit": "cat test.txt | grep -E \"^(\\w|/).*\\.js\"",
    "eslint:files:open": "code $(npx eslint \"dbux-**/src/**/*.js\" | grep -E \"^(\\w|/).*\\.js\")",
    "server:run": "cd dbux-server && yarn run start:run",
    "fix-shell:windows": "npm config set script-shell \"C:\\Program Files\\git\\bin\\bash.exe\"",
    "zzfixme__code:analyze": "node --trace-deprecation ./node_modules/webpack/bin/webpack --mode production --profile --json > dist/stats.json && npx webpack-bundle-analyzer dist/stats.json",
    "zzold_dbux-install": "yarn install && bash scripts/dbux-run-all.sh \"yarn install\"",
    "zzold_dbux-install-force": "yarn install --force",
    "zzold_p1-install": "bash ./assets/projects/todomvc-vanilla-es6/install.sh",
    "zzold_p1-go": "cd ./projects/todomvc/examples/vanilla-es6/ && code ./webpack.config.js",
    "zzold_p1-start": "cd ./projects/todomvc/examples/vanilla-es6/ && npm start",
    "zz//": "# see: https://explainshell.com/explain?cmd=git+clean+-fdx",
    "zzgit-clean-fdx": "git clean -fdx",
    "zz-bash-warning": "echo 'WARNING: Make sure your shell is set to bash. Check https://bit.ly/3i2S8KE for how to set it up on Windows.'",
    "yarn-upgrade": "npx lerna exec --concurrency 1 -- yarn upgrade --",
    "shapez-run": "yarn && cd gulp && yarn && yarn gulp",
    "shapez-install": "git clone https://github.com/tobspr/shapez.io.git && cd shapez.io && git lfs pull && yarn && cd gulp && yarn && yarn gulp && echo TODO: also install git-lfs + ffmpeg, see: https://github.com/tobspr/shapez.io/tree/master/.travis.yml"
  },
  "volta": {
    "node": "16.13.1",
    "yarn": "1.22.17"
  }
}
