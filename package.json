{
	"name": "@dbux/monoroot",
	"displayName": "DBUX Monoroot",
	"private": true,
	"workspaces": [
		"dbux-*",
		"panzoom"
	],
	"devDependencies": {
		"@babel/cli": "^7.8.3",
		"@babel/core": "^7.8.3",
		"@babel/node": "^7.5.5",
		"@babel/plugin-proposal-class-properties": "^7.8.3",
		"@babel/plugin-proposal-decorators": "^7.8.3",
		"@babel/plugin-proposal-function-bind": "^7.8.3",
		"@babel/plugin-proposal-optional-chaining": "^7.8.3",
		"@babel/plugin-syntax-dynamic-import": "^7.8.3",
		"@babel/plugin-syntax-export-default-from": "^7.8.3",
		"@babel/plugin-transform-runtime": "^7.8.3",
		"@babel/preset-env": "^7.8.3",
		"@babel/register": "^7.8.3",
		"babel-eslint": "^10.0.3",
		"babel-loader": "^8.0.6",
		"cloc": "^2.5.1",
		"css-loader": "^3.4.2",
		"eslint": "^7.4.0",
		"eslint-config-airbnb-base": "^14.0.0",
		"eslint-import-resolver-webpack": "^0.12.1",
		"eslint-plugin-import": "^2.18.2",
		"file-loader": "^6.0.0",
		"http-server": "^0.12.1",
		"jest": "^25.1.0",
		"jest-expect-message": "^1.0.2",
		"jest-extended": "^0.11.5",
		"lerna": "^3.22.1",
		"nodemon": "^2.0.2",
		"npm-run-all": "^4.1.5",
		"object.fromentries": "^2.0.2",
		"open": "^7.1.0",
		"open-cli": "^6.0.0",
		"sass-loader": "^8.0.2",
		"source-map-loader": "^1.0.0",
		"style-loader": "^1.1.3",
		"webpack": "^4.41.5",
		"webpack-cli": "^3.3.10",
		"webpack-node-externals": "^2.5.0"
	},
	"dependencies": {
		"@babel/runtime": "^7.8.3",
		"core-js": "^3.6.4",
		"find-package-json": "^1.2.0",
		"lodash": "^4.17.19",
		"nanoevents": "^2.0.0",
		"shelljs": "0.8.4",
		"socket.io-client": "^2.3.0",
		"yargs": "^15.4.1"
	},
	"optionalDependencies": {
		"bufferutil": "^4.0.1",
		"utf-8-validate": "^5.0.2"
	},
	"scripts": {
		"start": "npx npm-run-all -p build:watch graph:build:watch",
		"start:prod": "npx npm-run-all -p build:watch:prod graph:build:watch:prod",
		"build:clean": "sh scripts/dbux-run-all.sh \"rm -rf dist\" && cd dbux-code && yarn run build:clean",
		"build:watch": "npx nodemon --exec \"node --stack-trace-limit=1000 -- ./node_modules/webpack/bin/webpack.js --mode development --watch\"",
		"build:watch:prod": "npx nodemon --exec \"node --stack-trace-limit=1000 -- ./node_modules/webpack/bin/webpack.js --mode production --watch\"",
		"build:prod": "yarn run build:clean && yarn run graph:build:prod && node --stack-trace-limit=1000 -- ./node_modules/webpack/bin/webpack.js --mode production",
		"build:dev": "yarn run build:clean && yarn run graph:build:dev && node --stack-trace-limit=1000 -- ./node_modules/webpack/bin/webpack.js --mode development",
		"prepublishOnly": "yarn run build:prod",
		"graph:build:watch": "cd dbux-graph-client && npm start",
		"graph:build:watch:prod": "cd dbux-graph-client && yarn run start:prod",
		"graph:build:prod": "cd dbux-graph-client && yarn run build:prod",
		"graph:build:dev": "cd dbux-graph-client && yarn run build:dev",
		"dbux-install": "echo 'WARNING: Make sure your shell is said to bash. Check https://bit.ly/3i2S8KE for how to set it up on Windows.' && npx lerna bootstrap --force-local && npx lerna link --force-local",
		"dbux-reinstall": "yarn run dbux-uninstall && yarn run dbux-install",
		"dbux-all": "sh scripts/dbux-run-all.sh",
		"dbux-uninstall": "yarn run build:clean && rm -rf ./node_modules && rm -f ./package-lock.json && rm -f yarn.lock && sh scripts/dbux-run-all.sh \"rm -rf ./node_modules && rm -f ./package-lock.json && rm -f yarn.lock\"",
		"dbux-lerna-fix": "lerna exec -- node ../scripts/lerna-fix.js",
		"clinic": "clinic flame -- node dbux-cli/bin/run-js-unbabel ../samples/__samplesOutput__/oop1.es5.js || (echo \"\\033[1;31mCould not execute clinic - checking installed version:\\033[0m\" && clinic -v)",
		"cloc": "npx cloc --match-f='.*\\.((js)|(py))$' --fullpath --match-d='(dbux-[^/]+|analysis|samples/__samplesInput__)' --not-match-d='(node_modules|dist|project_sandbox)$'  --by-file .",
		"eslint": "npx eslint dbux-**/src/**/*.js",
		"eslint:files": "npx eslint dbux-**/src/**/*.js | grep -E \"^(\\w|/).*\\.js\"",
		"eslint:testit": "cat test.txt | grep -E \"^(\\w|/).*\\.js\"",
		"eslint:files:open": "code $(npx eslint \"dbux-**/src/**/*.js\" | grep -E \"^(\\w|/).*\\.js\")",
		"code:install": "cd dbux-code && yarn run package-no-build && yarn run reinstallself",
		"code:install-only": "cd dbux-code && yarn run reinstallself",
		"code:install:prod": "yarn run build:prod && yarn run code:install",
		"code:install:dev": "yarn run build:dev && yarn run code:install",
		"code:uninstall": "cd dbux-code && yarn run uninstallself",
		"code:publish": "cd dbux-code && yarn run package:publish",
		"code:publish-no-build": "cd dbux-code && yarn run package:publish-no-build",
		"code:publish-only": "cd dbux-code && yarn run publish-only",
		"publish": "node ./scripts/publish.js",
		"fix-shell:windows": "npm config set script-shell \"C:\\Program Files\\git\\bin\\bash.exe\"",
		"zzfixme__code:analyze": "node ../node_modules/webpack/bin/webpack --mode production --profile --json > dist/stats.json && npx webpack-bundle-analyzer dist/stats.json",
		"zzold_dbux-install": "yarn install && sh scripts/dbux-run-all.sh \"yarn install\"",
		"zzold_dbux-install-force": "yarn install --force",
		"zzold_p1-install": "sh ./assets/projects/todomvc-vanilla-es6/install.sh",
		"zzold_p1-go": "cd ./projects/todomvc/examples/vanilla-es6/ && code ./webpack.config.js",
		"zzold_p1-start": "cd ./projects/todomvc/examples/vanilla-es6/ && npm start",
		"zz//": "# see: https://explainshell.com/explain?cmd=git+clean+-fdx",
		"zzgit-clean-fdx": "git clean -fdx",
		"shapez-install": "git clone https://github.com/tobspr/shapez.io.git && cd shapez.io && git lfs pull && yarn && cd gulp && yarn && yarn gulp `# TODO: also install git-lfs + ffmpeg, see: https://github.com/tobspr/shapez.io/tree/master/.travis.yml`"
	}
}